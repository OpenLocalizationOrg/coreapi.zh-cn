items:
- uid: System.Linq.Expressions.LoopExpression
  commentId: T:System.Linq.Expressions.LoopExpression
  id: LoopExpression
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.LoopExpression.Body
  - System.Linq.Expressions.LoopExpression.BreakLabel
  - System.Linq.Expressions.LoopExpression.ContinueLabel
  - System.Linq.Expressions.LoopExpression.NodeType
  - System.Linq.Expressions.LoopExpression.Type
  - System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LoopExpression
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 663
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Represents an infinite loop. It can be exited with \"break\".</p>\n"
  syntax:
    content: 'public sealed class LoopExpression : Expression'
    content.vb: >-
      Public NotInheritable Class LoopExpression
          Inherits Expression
  inheritance:
  - System.Object
  - System.Linq.Expressions.Expression
  inheritedMembers:
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: LoopExpression
- uid: System.Linq.Expressions.LoopExpression.Body
  commentId: P:System.Linq.Expressions.LoopExpression.Body
  id: Body
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.Body
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Body
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 666
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is the body of the loop.</p>\n"
  syntax:
    content: public Expression Body { get; }
    content.vb: Public ReadOnly Property Body As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is the body of the loop.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: LoopExpression.Body
- uid: System.Linq.Expressions.LoopExpression.BreakLabel
  commentId: P:System.Linq.Expressions.LoopExpression.BreakLabel
  id: BreakLabel
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.BreakLabel
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BreakLabel
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 667
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the <xref href=\"System.Linq.Expressions.LabelTarget\" data-throw-if-not-resolved=\"false\"></xref> that is used by the loop body as a break statement target.</p>\n"
  syntax:
    content: public LabelTarget BreakLabel { get; }
    content.vb: Public ReadOnly Property BreakLabel As LabelTarget
    parameters: []
    return:
      type: System.Linq.Expressions.LabelTarget
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LabelTarget\" data-throw-if-not-resolved=\"false\"></xref> that is used by the loop body as a break statement target.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: LoopExpression.BreakLabel
- uid: System.Linq.Expressions.LoopExpression.ContinueLabel
  commentId: P:System.Linq.Expressions.LoopExpression.ContinueLabel
  id: ContinueLabel
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.ContinueLabel
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContinueLabel
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 668
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the <xref href=\"System.Linq.Expressions.LabelTarget\" data-throw-if-not-resolved=\"false\"></xref> that is used by the loop body as a continue statement target.</p>\n"
  syntax:
    content: public LabelTarget ContinueLabel { get; }
    content.vb: Public ReadOnly Property ContinueLabel As LabelTarget
    parameters: []
    return:
      type: System.Linq.Expressions.LabelTarget
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LabelTarget\" data-throw-if-not-resolved=\"false\"></xref> that is used by the loop body as a continue statement target.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: LoopExpression.ContinueLabel
- uid: System.Linq.Expressions.LoopExpression.NodeType
  commentId: P:System.Linq.Expressions.LoopExpression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.NodeType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 669
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Returns the node type of this expression. Extension nodes should return <xref href=\"System.Linq.Expressions.ExpressionType.Extension\" data-throw-if-not-resolved=\"false\"></xref> when overriding this method.</p>\n"
  syntax:
    content: public override sealed ExpressionType NodeType { get; }
    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType
    parameters: []
    return:
      type: System.Linq.Expressions.ExpressionType
      description: "\n<p>The <xref href=\"System.Linq.Expressions.ExpressionType\" data-throw-if-not-resolved=\"false\"></xref> of the expression.</p>\n"
  overridden: System.Linq.Expressions.Expression.NodeType
  modifiers.csharp:
  - public
  - override
  - sealed
  - get
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  - ReadOnly
  nameWithType: LoopExpression.NodeType
- uid: System.Linq.Expressions.LoopExpression.Type
  commentId: P:System.Linq.Expressions.LoopExpression.Type
  id: Type
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.Type
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 670
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the static type of the expression that this <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> represents.</p>\n"
  syntax:
    content: public override sealed Type Type { get; }
    content.vb: Public NotOverridable Overrides ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LoopExpression.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the static type of the expression.</p>\n"
  overridden: System.Linq.Expressions.Expression.Type
  modifiers.csharp:
  - public
  - override
  - sealed
  - get
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  - ReadOnly
  nameWithType: LoopExpression.Type
- uid: System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  commentId: M:System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Accept
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 671
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: protected override Expression Accept(ExpressionVisitor visitor)
    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
    return:
      type: System.Linq.Expressions.Expression
  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: LoopExpression.Accept(ExpressionVisitor)
- uid: System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.LoopExpression
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 672
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\n"
  syntax:
    content: public LoopExpression Update(LabelTarget breakLabel, LabelTarget continueLabel, Expression body)
    content.vb: Public Function Update(breakLabel As LabelTarget, continueLabel As LabelTarget, body As Expression) As LoopExpression
    parameters:
    - id: breakLabel
      type: System.Linq.Expressions.LabelTarget
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LoopExpression.BreakLabel\" data-throw-if-not-resolved=\"false\"></xref> property of the result.</p>\n"
    - id: continueLabel
      type: System.Linq.Expressions.LabelTarget
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LoopExpression.ContinueLabel\" data-throw-if-not-resolved=\"false\"></xref> property of the result.</p>\n"
    - id: body
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.LoopExpression.Body\" data-throw-if-not-resolved=\"false\"></xref> property of the result.</p>\n"
    return:
      type: System.Linq.Expressions.LoopExpression
      description: "\n<p>This expression if no children are changed or an expression with the updated children.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: LoopExpression.Update(LabelTarget, LabelTarget, Expression)
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  nameWithType: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  nameWithType: Expression
- uid: System.Linq.Expressions.Expression.CanReduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.CanReduce
  commentId: P:System.Linq.Expressions.Expression.CanReduce
  nameWithType: Expression.CanReduce
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Add
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Add
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Add(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Add
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Add
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Add(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.AddAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.AddAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.AddChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.And
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.And
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.And(Expression, Expression)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.And
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.And
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.And(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.AndAlso(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.AndAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)
  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: ArrayAccess(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  nameWithType: Expression.ArrayAccess(Expression, Expression[])
  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)
  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ArrayIndex(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: ArrayIndex(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  nameWithType: Expression.ArrayIndex(Expression, Expression[])
  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayLength
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ArrayLength
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  nameWithType: Expression.ArrayLength(Expression)
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Assign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Assign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Assign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Bind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Bind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  nameWithType: Expression.Bind(MemberInfo, Expression)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Bind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Bind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  nameWithType: Expression.Bind(MethodInfo, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Block(IEnumerable<Expression>)
  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())
  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])
  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Block(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())
  name.vb: Block(Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  nameWithType: Expression.Block(Expression[])
  nameWithType.vb: Expression.Block(Expression())
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Block(Type, IEnumerable<Expression>)
  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())
  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])
  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())
  name.vb: Block(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Block
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Block(Type, Expression[])
  nameWithType.vb: Expression.Block(Type, Expression())
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Break(LabelTarget)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  nameWithType: Expression.Break(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Break(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Break
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  nameWithType: Expression.Break(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Call(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: Call(Expression, MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])
  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())
  name.vb: Call(Expression, String, Type(), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  nameWithType: Expression.Call(Expression, String, Type[], Expression[])
  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Call(MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(MethodInfo, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: Call(MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Call(MethodInfo, Expression[])
  nameWithType.vb: Expression.Call(MethodInfo, Expression())
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())
  name.vb: Call(Type, String, Type(), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Call
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  nameWithType: Expression.Call(Type, String, Type[], Expression[])
  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Catch(ParameterExpression, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  nameWithType: Expression.Catch(Type, Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Catch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Catch(Type, Expression, Expression)
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ClearDebugInfo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: "XXX"
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ClearDebugInfo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: "XXX"
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Coalesce(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Condition
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Condition
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Condition(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Condition
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Condition
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Constant(System.Object)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Constant
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Constant
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)
  nameWithType: Expression.Constant(Object)
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Constant
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Constant
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  nameWithType: Expression.Constant(Object, Type)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Continue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Continue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Continue(LabelTarget)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Continue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Continue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  nameWithType: Expression.Continue(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Convert
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Convert
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Convert(Expression, Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Convert
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Convert
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  nameWithType: Expression.Convert(Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.ConvertChecked(Expression, Type)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DebugInfo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: "XXX"
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DebugInfo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: "XXX"
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  nameWithType: Expression.Decrement(Expression)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Decrement(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Default(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Default(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Default
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Default(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Default
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)
  nameWithType: Expression.Default(Type)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Divide
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Divide
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Divide(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Divide
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Divide
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.DivideAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: ElementInit(MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.ElementInit(MethodInfo, Expression[])
  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())
- uid: System.Linq.Expressions.Expression.Empty
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Empty()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Empty
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Empty
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Empty
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Empty
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Empty
  nameWithType: Expression.Empty()
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Equal
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Equal
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Equal(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Equal
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Equal
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ExclusiveOr(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.FieldInfo
    name: "XXX"
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.FieldInfo
    name: "XXX"
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  nameWithType: Expression.Field(Expression, FieldInfo)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  nameWithType: Expression.Field(Expression, String)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Field
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  nameWithType: Expression.Field(Expression, Type, String)
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())
  name.vb: GetActionType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetActionType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetActionType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])
  nameWithType: Expression.GetActionType(Type[])
  nameWithType.vb: Expression.GetActionType(Type())
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())
  name.vb: GetDelegateType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetDelegateType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetDelegateType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  nameWithType: Expression.GetDelegateType(Type[])
  nameWithType.vb: Expression.GetDelegateType(Type())
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())
  name.vb: GetFuncType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetFuncType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GetFuncType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  nameWithType: Expression.GetFuncType(Type[])
  nameWithType.vb: Expression.GetFuncType(Type())
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Goto(LabelTarget)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  nameWithType: Expression.Goto(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Goto(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Goto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  nameWithType: Expression.Goto(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.GreaterThan(Expression, Expression)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IfThen
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IfThen
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.IfThen(Expression, Expression)
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IfThenElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IfThenElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Increment
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Increment
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  nameWithType: Expression.Increment(Expression)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Increment
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Increment
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Increment(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Invoke(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)
  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: Invoke(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Invoke(Expression, Expression[])
  nameWithType.vb: Expression.Invoke(Expression, Expression())
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  nameWithType: Expression.IsFalse(Expression)
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.IsFalse(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  nameWithType: Expression.IsTrue(Expression)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.IsTrue(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label
  nameWithType: Expression.Label()
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Label(LabelTarget)
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  nameWithType: Expression.Label(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Label(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label(System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label(System.String)
  nameWithType: Expression.Label(String)
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)
  nameWithType: Expression.Label(Type)
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Label
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)
  nameWithType: Expression.Label(Type, String)
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda(Expression, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Type, Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.LeftShift(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.LessThan(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.LessThanOrEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)
  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())
  name.vb: ListBind(MemberInfo, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])
  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)
  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())
  name.vb: ListBind(MethodInfo, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])
  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)
  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)
  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())
  name.vb: ListInit(NewExpression, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: "XXX"
    fullName: System.Linq.Expressions.ElementInit
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  nameWithType: Expression.ListInit(NewExpression, ElementInit[])
  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())
  name.vb: ListInit(NewExpression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  nameWithType: Expression.ListInit(NewExpression, Expression[])
  nameWithType.vb: Expression.ListInit(NewExpression, Expression())
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: ListInit(NewExpression, MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])
  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  nameWithType: Expression.Loop(Expression)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Loop(Expression, LabelTarget)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Loop
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeCatchBlock
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeCatchBlock
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeGoto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.GotoExpressionKind
    name: "XXX"
    fullName: System.Linq.Expressions.GotoExpressionKind
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeGoto
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.GotoExpressionKind
    name: "XXX"
    fullName: System.Linq.Expressions.GotoExpressionKind
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeIndex
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeMemberAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeMemberAccess
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)
  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))
  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeTry
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeTry
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionType
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)
  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())
  name.vb: MemberBind(MemberInfo, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])
  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)
  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())
  name.vb: MemberBind(MethodInfo, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])
  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)
  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())
  name.vb: MemberInit(NewExpression, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: "XXX"
    fullName: System.Linq.Expressions.NewExpression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: "XXX"
    fullName: System.Linq.Expressions.MemberBinding
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])
  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Modulo(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ModuloAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Multiply(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.MultiplyAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.MultiplyChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Negate
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Negate
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  nameWithType: Expression.Negate(Expression)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Negate
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Negate
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Negate(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  nameWithType: Expression.NegateChecked(Expression)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.NegateChecked(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  nameWithType: Expression.New(ConstructorInfo)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])
  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())
  name.vb: New(ConstructorInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: "XXX"
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.New(ConstructorInfo, Expression[])
  nameWithType.vb: Expression.New(ConstructorInfo, Expression())
- uid: System.Linq.Expressions.Expression.New(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.New(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.New
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.New(System.Type)
  nameWithType: Expression.New(Type)
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)
  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())
  name.vb: NewArrayBounds(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  nameWithType: Expression.NewArrayBounds(Type, Expression[])
  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)
  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())
  name.vb: NewArrayInit(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  nameWithType: Expression.NewArrayInit(Type, Expression[])
  nameWithType.vb: Expression.NewArrayInit(Type, Expression())
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Not
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Not
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  nameWithType: Expression.Not(Expression)
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Not
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Not
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Not(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.NotEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  nameWithType: Expression.OnesComplement(Expression)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.OnesComplement(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Or
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Or
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Or(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Or
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Or
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Or(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.OrAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.OrElse(Expression, Expression)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)
  nameWithType: Expression.Parameter(Type)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  nameWithType: Expression.Parameter(Type, String)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  nameWithType: Expression.PostDecrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  nameWithType: Expression.PostIncrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Power
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Power
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Power(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Power
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Power
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Power(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.PowerAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  nameWithType: Expression.PreDecrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  nameWithType: Expression.PreIncrementAssign(Expression)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Property(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  nameWithType: Expression.Property(Expression, PropertyInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)
  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())
  name.vb: Property(Expression, PropertyInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: "XXX"
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])
  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  nameWithType: Expression.Property(Expression, String)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())
  name.vb: Property(Expression, String, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  nameWithType: Expression.Property(Expression, String, Expression[])
  nameWithType.vb: Expression.Property(Expression, String, Expression())
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Property
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  nameWithType: Expression.Property(Expression, Type, String)
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PropertyOrField
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.PropertyOrField
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  nameWithType: Expression.PropertyOrField(Expression, String)
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Quote
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Quote
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  nameWithType: Expression.Quote(Expression)
- uid: System.Linq.Expressions.Expression.Reduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Reduce()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Reduce
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Reduce
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Reduce
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Reduce
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Reduce
  nameWithType: Expression.Reduce()
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReduceAndCheck
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReduceAndCheck
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReduceAndCheck
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReduceAndCheck
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck
  nameWithType: Expression.ReduceAndCheck()
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ReduceExtensions()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReduceExtensions
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReduceExtensions
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReduceExtensions
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReduceExtensions
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions
  nameWithType: Expression.ReduceExtensions()
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReferenceEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReferenceEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ReferenceEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Rethrow()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Rethrow
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Rethrow
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Rethrow
  nameWithType: Expression.Rethrow()
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)
  nameWithType: Expression.Rethrow(Type)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  nameWithType: Expression.Return(LabelTarget)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  nameWithType: Expression.Return(LabelTarget, Expression)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Return(LabelTarget, Expression, Type)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Return
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: "XXX"
    fullName: System.Linq.Expressions.LabelTarget
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  nameWithType: Expression.Return(LabelTarget, Type)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.RightShift(Expression, Expression)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.RightShiftAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())
  name.vb: RuntimeVariables(ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: "XXX"
    fullName: System.Linq.Expressions.ParameterExpression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  nameWithType: Expression.RuntimeVariables(ParameterExpression[])
  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.Subtract(Expression, Expression)
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.SubtractAssign(Expression, Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: "XXX"
    fullName: System.Linq.Expressions.LambdaExpression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.SubtractChecked(Expression, Expression)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, Expression, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])
  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))
  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])
  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  nameWithType: Expression.Switch(Expression, SwitchCase[])
  nameWithType.vb: Expression.Switch(Expression, SwitchCase())
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))
  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Switch
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: "XXX"
    fullName: System.Linq.Expressions.SwitchCase
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])
  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)
  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: SwitchCase(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  nameWithType: Expression.SwitchCase(Expression, Expression[])
  nameWithType.vb: Expression.SwitchCase(Expression, Expression())
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)
  nameWithType: Expression.SymbolDocument(String)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  nameWithType: Expression.SymbolDocument(String, Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  nameWithType: Expression.SymbolDocument(String, Guid, Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Throw
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Throw
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  nameWithType: Expression.Throw(Expression)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Throw
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Throw
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Throw(Expression, Type)
- uid: System.Linq.Expressions.Expression.ToString
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.ToString()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ToString
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ToString
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.ToString
  nameWithType: Expression.ToString()
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])
  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())
  name.vb: TryCatch(Expression, CatchBlock())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryCatch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryCatch
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  nameWithType: Expression.TryCatch(Expression, CatchBlock[])
  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])
  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())
  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryCatchFinally
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryCatchFinally
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: "XXX"
    fullName: System.Linq.Expressions.CatchBlock
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])
  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryFault
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryFault
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.TryFault(Expression, Expression)
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryFinally
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryFinally
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  nameWithType: Expression.TryFinally(Expression, Expression)
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)
  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)
  name.vb: TryGetActionType(Type(), Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryGetActionType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryGetActionType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  nameWithType: Expression.TryGetActionType(Type[], Type)
  nameWithType.vb: Expression.TryGetActionType(Type(), Type)
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)
  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)
  name.vb: TryGetFuncType(Type(), Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryGetFuncType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TryGetFuncType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  nameWithType: Expression.TryGetFuncType(Type[], Type)
  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeAs
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeAs
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.TypeAs(Expression, Type)
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeEqual
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.TypeEqual(Expression, Type)
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeIs
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.TypeIs
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.TypeIs(Expression, Type)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  nameWithType: Expression.UnaryPlus(Expression)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Unbox
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Unbox
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: "XXX"
    fullName: System.Linq.Expressions.Expression
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  nameWithType: Expression.Unbox(Expression, Type)
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Variable(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Variable
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Variable
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)
  nameWithType: Expression.Variable(Type)
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Variable
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Variable
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  nameWithType: Expression.Variable(Type, String)
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.VisitChildren
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.VisitChildren
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  nameWithType: Expression.VisitChildren(ExpressionVisitor)
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.LabelTarget
  commentId: T:System.Linq.Expressions.LabelTarget
  nameWithType: LabelTarget
- uid: System.Linq.Expressions.Expression.NodeType
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.NodeType
  commentId: P:System.Linq.Expressions.Expression.NodeType
  nameWithType: Expression.NodeType
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.ExpressionType
  commentId: T:System.Linq.Expressions.ExpressionType
  nameWithType: ExpressionType
- uid: System.Linq.Expressions.Expression.Type
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Type
  commentId: P:System.Linq.Expressions.Expression.Type
  nameWithType: Expression.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  commentId: T:System.Type
  nameWithType: Type
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Accept
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
    name: "XXX"
    fullName: System.Linq.Expressions.Expression.Accept
  - name: "XXX"
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: "XXX"
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  nameWithType: Expression.Accept(ExpressionVisitor)
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.ExpressionVisitor
  commentId: T:System.Linq.Expressions.ExpressionVisitor
  nameWithType: ExpressionVisitor
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.LoopExpression
  commentId: T:System.Linq.Expressions.LoopExpression
  nameWithType: LoopExpression
