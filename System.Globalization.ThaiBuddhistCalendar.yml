items:
- uid: System.Globalization.ThaiBuddhistCalendar
  commentId: T:System.Globalization.ThaiBuddhistCalendar
  id: ThaiBuddhistCalendar
  parent: System.Globalization
  children:
  - System.Globalization.ThaiBuddhistCalendar.#ctor
  - System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.Eras
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  - System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  - System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ThaiBuddhistCalendar
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 23
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Represents the Thai Buddhist calendar.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public class ThaiBuddhistCalendar : Calendar, ICloneable
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Class ThaiBuddhistCalendar
          Inherits Calendar
          Implements ICloneable
  seealso:
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.CultureInfo.Calendar
    commentId: P:System.Globalization.CultureInfo.Calendar
  - type: System.Globalization.CultureInfo.OptionalCalendars
    commentId: P:System.Globalization.CultureInfo.OptionalCalendars
  inheritance:
  - System.Object
  - System.Globalization.Calendar
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.Clone
  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.AlgorithmType
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: ThaiBuddhistCalendar
- uid: System.Globalization.ThaiBuddhistCalendar.#ctor
  commentId: M:System.Globalization.ThaiBuddhistCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistCalendar()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 72
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public ThaiBuddhistCalendar()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ThaiBuddhistCalendar.ThaiBuddhistCalendar()
- uid: System.Globalization.ThaiBuddhistCalendar.Eras
  commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  id: Eras
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.Eras
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Eras
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 177
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the list of eras in the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public override int[] Eras { get; }
    content.vb: Public Overrides ReadOnly Property Eras As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>An array that consists of a single element having a value that is always the current era.</p>\n"
  overridden: System.Globalization.Calendar.Eras
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: ThaiBuddhistCalendar.Eras
- uid: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  commentId: P:System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxSupportedDateTime
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 51
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the latest date and time supported by the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public override DateTime MaxSupportedDateTime { get; }
    content.vb: >-
      <ComVisible(False)>

      Public Overrides ReadOnly Property MaxSupportedDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The latest date and time supported by the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.</p>\n"
  overridden: System.Globalization.Calendar.MaxSupportedDateTime
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: ThaiBuddhistCalendar.MaxSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  commentId: P:System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinSupportedDateTime
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 42
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the earliest date and time supported by the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public override DateTime MinSupportedDateTime { get; }
    content.vb: >-
      <ComVisible(False)>

      Public Overrides ReadOnly Property MinSupportedDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The earliest date and time supported by the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, which is equivalent to the first moment of January 1, 0001 C.E. in the Gregorian calendar.</p>\n"
  overridden: System.Globalization.Calendar.MinSupportedDateTime
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: ThaiBuddhistCalendar.MinSupportedDateTime
- uid: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TwoDigitYearMax
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 186
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    content.vb: Public Overrides Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  overridden: System.Globalization.Calendar.TwoDigitYearMax
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value specified in a set operation is less than 99. </p>\n<p>-or- </p>\n<p>The value specified in a set operation is greater than <strong>MaxSupportedDateTime.Year</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>In a set operation, the current instance is read-only.</p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.TwoDigitYearMax
- uid: System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 83
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override DateTime AddMonths(DateTime time, int months)
    content.vb: Public Overrides Function AddMonths(time As Date, months As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add months. </p>\n"
    - id: months
      type: System.Int32
      description: "\n<p>The number of months to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is less than -120000.</p>\n<p>-or- </p>\n<p>\n<em>months</em> is greater than 120000. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.AddMonths(DateTime, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 88
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override DateTime AddYears(DateTime time, int years)
    content.vb: Public Overrides Function AddYears(time As Date, years As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add years. </p>\n"
    - id: years
      type: System.Int32
      description: "\n<p>The number of years to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.AddYears(DateTime, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfMonth
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 103
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetDayOfMonth(DateTime time)
    content.vb: Public Overrides Function GetDayOfMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 31 that represents the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  seealso:
  - type: System.DateTime.Day
    commentId: P:System.DateTime.Day
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfWeek
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 108
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public Overrides Function GetDayOfWeek(time As Date) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.DayOfWeek
      description: "\n<p>A <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value that represents the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  seealso:
  - type: System.DateTime.DayOfWeek
    commentId: P:System.DateTime.DayOfWeek
  - type: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetDayOfWeek(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 113
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetDayOfYear(DateTime time)
    content.vb: Public Overrides Function GetDayOfYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 366 that represents the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  seealso:
  - type: System.DateTime.DayOfYear
    commentId: P:System.DateTime.DayOfYear
  - type: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInMonth
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 93
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified month in the specified year in the specified era.</p>\n"
  syntax:
    content: public override int GetDaysInMonth(int year, int month, int era)
    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the specified era.</p>\n"
  overridden: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetDaysInMonth(Int32, Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 98
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified year in the specified era.</p>\n"
  syntax:
    content: public override int GetDaysInYear(int year, int era)
    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year in the specified era.</p>\n"
  overridden: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetDaysInYear(Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEra
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 132
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetEra(DateTime time)
    content.vb: Public Overrides Function GetEra(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetEra(System.DateTime)
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetEra(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetLeapMonth
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 160
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for a specified year and era.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public override int GetLeapMonth(int year, int era)
    content.vb: >-
      <ComVisible(False)>

      Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year.</p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The return value is always 0 because the <xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not support the notion of a leap month.</p>\n"
  overridden: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetLeapMonth(Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonth
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 136
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetMonth(DateTime time)
    content.vb: Public Overrides Function GetMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetMonth(System.DateTime)
  seealso:
  - type: System.DateTime.Month
    commentId: P:System.DateTime.Month
  - type: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetMonth(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonthsInYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 119
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of months in the specified year in the specified era.</p>\n"
  syntax:
    content: public override int GetMonthsInYear(int year, int era)
    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year in the specified era.</p>\n"
  overridden: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetMonthsInYear(Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetWeekOfYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 124
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Contracts", "CC1055")]

      [ComVisible(false)]

      public override int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
    content.vb: >-
      <SuppressMessage("Microsoft.Contracts", "CC1055")>

      <ComVisible(False)>

      Public Overrides Function GetWeekOfYear(time As Date, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "\n<p>One of the <xref href=\"System.Globalization.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> values that defines a calendar week. </p>\n"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "\n<p>One of the <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> values that represents the first day of the week. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A 1-based positive integer that represents the week of the year that includes the date in the <em>time</em> parameter.</p>\n"
  overridden: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> or <em>firstDayOfWeek</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>rule</em> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.CultureInfo.DateTimeFormat
    commentId: P:System.Globalization.CultureInfo.DateTimeFormat
  - type: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
- uid: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 141
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetYear(DateTime time)
    content.vb: Public Overrides Function GetYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Globalization.Calendar.GetYear(System.DateTime)
  seealso:
  - type: System.DateTime.Year
    commentId: P:System.DateTime.Year
  - type: System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.GetYear(DateTime)
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapDay
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 146
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date in the specified era is a leap day.</p>\n"
  syntax:
    content: public override bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 to 31 that represents the day. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.IsLeapDay(Int32, Int32, Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapMonth
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 167
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year in the specified era is a leap month.</p>\n"
  syntax:
    content: public override bool IsLeapMonth(int year, int month, int era)
    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>This method always returns <strong>false</strong>, unless overridden by a derived class.</p>\n"
  overridden: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.IsLeapMonth(Int32, Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 152
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the specified era is a leap year.</p>\n"
  syntax:
    content: public override bool IsLeapYear(int year, int era)
    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.IsLeapYear(Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 172
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the specified era.</p>\n"
  syntax:
    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As Date
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 to 31 that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  overridden: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
    commentId: F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra
  - type: System.Globalization.ThaiBuddhistCalendar.Eras
    commentId: P:System.Globalization.ThaiBuddhistCalendar.Eras
  - type: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
- uid: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.ThaiBuddhistCalendar
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFourDigitYear
    path: src/mscorlib/src/System/Globalization/ThaiBuddhistCalendar.cs
    startLine: 213
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n"
  syntax:
    content: public override int ToFourDigitYear(int year)
    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A two-digit or four-digit integer that represents the year to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\n"
  overridden: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
    commentId: P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ThaiBuddhistCalendar.ToFourDigitYear(Int32)
references:
- uid: System.Globalization
  isExternal: false
  name: "XXX"
  fullName: System.Globalization
  nameWithType: System.Globalization
  commentId: N:System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Globalization.Calendar
  parent: System.Globalization
  isExternal: false
  name: "XXX"
  fullName: System.Globalization.Calendar
  nameWithType: Calendar
  commentId: T:System.Globalization.Calendar
- uid: System.ICloneable
  parent: System
  isExternal: true
  name: "XXX"
  fullName: System.ICloneable
  nameWithType: ICloneable
  commentId: T:System.ICloneable
- uid: System.Globalization.Calendar.CurrentEra
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.CurrentEra
  nameWithType: Calendar.CurrentEra
  commentId: F:System.Globalization.Calendar.CurrentEra
- uid: System.Globalization.Calendar.Clone
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.Clone()
  spec.csharp:
  - uid: System.Globalization.Calendar.Clone
    name: "XXX"
    fullName: System.Globalization.Calendar.Clone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.Clone
    name: "XXX"
    fullName: System.Globalization.Calendar.Clone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.Clone()
  commentId: M:System.Globalization.Calendar.Clone
- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  spec.csharp:
  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
    name: "XXX"
    fullName: System.Globalization.Calendar.ReadOnly
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Globalization.Calendar
    name: "XXX"
    fullName: System.Globalization.Calendar
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
    name: "XXX"
    fullName: System.Globalization.Calendar.ReadOnly
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Globalization.Calendar
    name: "XXX"
    fullName: System.Globalization.Calendar
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.ReadOnly(Calendar)
  commentId: M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddMilliseconds(System.DateTime, System.Double)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMilliseconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMilliseconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddMilliseconds(DateTime, Double)
  commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddDays(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddDays
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddDays
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddDays(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddHours(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddHours
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddHours
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddHours(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddMinutes(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMinutes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMinutes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddMinutes(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddSeconds(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddSeconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddSeconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddSeconds(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddWeeks(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddWeeks
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddWeeks
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddWeeks(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDaysInYear(Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
- uid: System.Globalization.Calendar.GetHour(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetHour(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetHour(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetHour
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetHour(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetHour
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetHour(DateTime)
  commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMilliseconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMilliseconds
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetMilliseconds(DateTime)
  commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
- uid: System.Globalization.Calendar.GetMinute(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetMinute(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMinute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMinute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetMinute(DateTime)
  commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetMonthsInYear(Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
- uid: System.Globalization.Calendar.GetSecond(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetSecond(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetSecond
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetSecond
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetSecond(DateTime)
  commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapMonth(Int32, Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetLeapMonth(Int32)
  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32)
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapYear(Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
- uid: System.Globalization.Calendar.AlgorithmType
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AlgorithmType
  nameWithType: Calendar.AlgorithmType
  commentId: P:System.Globalization.Calendar.AlgorithmType
- uid: System.Globalization.Calendar.IsReadOnly
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsReadOnly
  nameWithType: Calendar.IsReadOnly
  commentId: P:System.Globalization.Calendar.IsReadOnly
- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear
  commentId: P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Globalization.Calendar.Eras
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.Eras
  nameWithType: Calendar.Eras
  commentId: P:System.Globalization.Calendar.Eras
- uid: System.Int32[]
  name: "XXX"
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Int32[]
  nameWithType.vb: Int32()
- uid: System.Globalization.Calendar.MaxSupportedDateTime
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.MaxSupportedDateTime
  nameWithType: Calendar.MaxSupportedDateTime
  commentId: P:System.Globalization.Calendar.MaxSupportedDateTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.Globalization.Calendar.MinSupportedDateTime
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.MinSupportedDateTime
  nameWithType: Calendar.MinSupportedDateTime
  commentId: P:System.Globalization.Calendar.MinSupportedDateTime
- uid: System.Globalization.Calendar.TwoDigitYearMax
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.TwoDigitYearMax
  nameWithType: Calendar.TwoDigitYearMax
  commentId: P:System.Globalization.Calendar.TwoDigitYearMax
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddMonths(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMonths
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddMonths
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddMonths(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.AddYears(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddYears
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.AddYears
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.AddYears(DateTime, Int32)
  commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDayOfMonth(DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfWeek
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfWeek
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDayOfWeek(DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DayOfWeek
  nameWithType: DayOfWeek
  commentId: T:System.DayOfWeek
- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDayOfYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDayOfYear(DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDaysInMonth(Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetDaysInYear(Int32, Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetEra(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetEra(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetEra(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetEra
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetEra(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetEra
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetEra(DateTime)
  commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetLeapMonth(Int32, Int32)
  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetMonth(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetMonth(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetMonth(DateTime)
  commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetMonthsInYear(Int32, Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetWeekOfYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Globalization.CalendarWeekRule
    name: "XXX"
    fullName: System.Globalization.CalendarWeekRule
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.DayOfWeek
    name: "XXX"
    fullName: System.DayOfWeek
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetWeekOfYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Globalization.CalendarWeekRule
    name: "XXX"
    fullName: System.Globalization.CalendarWeekRule
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.DayOfWeek
    name: "XXX"
    fullName: System.DayOfWeek
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: false
  name: "XXX"
  fullName: System.Globalization.CalendarWeekRule
  nameWithType: CalendarWeekRule
  commentId: T:System.Globalization.CalendarWeekRule
- uid: System.Globalization.Calendar.GetYear(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.GetYear(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetYear(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetYear(System.DateTime)
    name: "XXX"
    fullName: System.Globalization.Calendar.GetYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.GetYear(DateTime)
  commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapMonth(Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.IsLeapYear(Int32, Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: "XXX"
  fullName: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToFourDigitYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    name: "XXX"
    fullName: System.Globalization.Calendar.ToFourDigitYear
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Calendar.ToFourDigitYear(Int32)
  commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
