items:
- uid: System.ComponentModel.EventDescriptor
  commentId: T:System.ComponentModel.EventDescriptor
  id: EventDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventDescriptor.ComponentType
  - System.ComponentModel.EventDescriptor.EventType
  - System.ComponentModel.EventDescriptor.IsMulticast
  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides information about an event.</p>\n"
  syntax:
    content: 'public abstract class EventDescriptor : MemberDescriptor'
    content.vb: >-
      Public MustInherit Class EventDescriptor
          Inherits MemberDescriptor
  seealso:
  - type: System.ComponentModel.MemberDescriptor
    commentId: T:System.ComponentModel.MemberDescriptor
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: EventDescriptor
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected EventDescriptor(MemberDescriptor descr)
    content.vb: Protected Sub New(descr As MemberDescriptor)
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the event and its attributes. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 42
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  syntax:
    content: protected EventDescriptor(MemberDescriptor descr, Attribute[] attrs)
    content.vb: Protected Sub New(descr As MemberDescriptor, attrs As Attribute())
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that has the name of the member and its attributes. </p>\n"
    - id: attrs
      type: System.Attribute[]
      description: "\n<p>An <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> array with the attributes you want to add to this event description. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute())
  name.vb: EventDescriptor(MemberDescriptor, Attribute())
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor, Attribute[])
  nameWithType.vb: EventDescriptor.EventDescriptor(MemberDescriptor, Attribute())
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.String, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and attribute array.</p>\n"
  syntax:
    content: protected EventDescriptor(string name, Attribute[] attrs)
    content.vb: Protected Sub New(name As String, attrs As Attribute())
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the event. </p>\n"
    - id: attrs
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the event attributes. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.EventDescriptor.EventDescriptor(System.String, System.Attribute())
  name.vb: EventDescriptor(String, Attribute())
  nameWithType: EventDescriptor.EventDescriptor(String, Attribute[])
  nameWithType.vb: EventDescriptor.EventDescriptor(String, Attribute())
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddEventHandler
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 75
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, binds the event to the component.</p>\n"
  syntax:
    content: public abstract void AddEventHandler(object component, Delegate value)
    content.vb: Public MustOverride Sub AddEventHandler(component As Object, value As  Delegate)
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component that provides events to the delegate. </p>\n"
    - id: value
      type: System.Delegate
      description: "\n<p>A delegate that represents the method that handles the event. </p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
    commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EventDescriptor.AddEventHandler(Object, Delegate)
- uid: System.ComponentModel.EventDescriptor.ComponentType
  commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.ComponentType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComponentType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 52
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets the type of component this event is bound to.</p>\n"
  syntax:
    content: public abstract Type ComponentType { get; }
    content.vb: Public MustOverride ReadOnly Property ComponentType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of component the event is bound to.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor.EventType
    commentId: P:System.ComponentModel.EventDescriptor.EventType
  - type: System.ComponentModel.EventDescriptor.IsMulticast
    commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: EventDescriptor.ComponentType
- uid: System.ComponentModel.EventDescriptor.EventType
  commentId: P:System.ComponentModel.EventDescriptor.EventType
  id: EventType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.EventType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 59
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets the type of delegate for the event.</p>\n"
  syntax:
    content: public abstract Type EventType { get; }
    content.vb: Public MustOverride ReadOnly Property EventType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of delegate for the event.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor.ComponentType
    commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  - type: System.ComponentModel.EventDescriptor.IsMulticast
    commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  id: IsMulticast
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMulticast
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 68
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</p>\n"
  syntax:
    content: public abstract bool IsMulticast { get; }
    content.vb: Public MustOverride ReadOnly Property IsMulticast As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the event delegate is multicast; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor.EventType
    commentId: P:System.ComponentModel.EventDescriptor.EventType
  - type: System.ComponentModel.EventDescriptor.ComponentType
    commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: EventDescriptor.IsMulticast
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveEventHandler
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 83
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</p>\n"
  syntax:
    content: public abstract void RemoveEventHandler(object component, Delegate value)
    content.vb: Public MustOverride Sub RemoveEventHandler(component As Object, value As  Delegate)
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component that the delegate is bound to. </p>\n"
    - id: value
      type: System.Delegate
      description: "\n<p>The delegate to unbind from the component. </p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
    commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EventDescriptor.RemoveEventHandler(Object, Delegate)
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor
  nameWithType: MemberDescriptor
  commentId: T:System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  commentId: P:System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  nameWithType: MemberDescriptor.Attributes
  commentId: P:System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.Category
  nameWithType: MemberDescriptor.Category
  commentId: P:System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.Description
  nameWithType: MemberDescriptor.Description
  commentId: P:System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  commentId: P:System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  nameWithType: MemberDescriptor.DisplayName
  commentId: P:System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.Name
  nameWithType: MemberDescriptor.Name
  commentId: P:System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  commentId: P:System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  commentId: M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.Equals(Object)
  commentId: M:System.ComponentModel.MemberDescriptor.Equals(System.Object)
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IList
    name: "XXX"
    fullName: System.Collections.IList
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IList
    name: "XXX"
    fullName: System.Collections.IList
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.FillAttributes(IList)
  commentId: M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type)
  name.vb: FindMethod(Type, String, Type(), Type)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type)
  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type)
  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type, System.Boolean)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type, System.Boolean)
  name.vb: FindMethod(Type, String, Type(), Type, Boolean)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)
  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type, Boolean)
  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.GetHashCode()
  commentId: M:System.ComponentModel.MemberDescriptor.GetHashCode
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.GetInvocationTarget(Type, Object)
  commentId: M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: "XXX"
  fullName: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: "XXX"
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberDescriptor.GetSite(Object)
  commentId: M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Attribute[]
  name: "XXX"
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Attribute[]
  nameWithType.vb: Attribute()
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Delegate
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Delegate
  nameWithType: Delegate
  commentId: T:System.Delegate
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
