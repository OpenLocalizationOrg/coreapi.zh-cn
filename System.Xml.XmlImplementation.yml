items:
- uid: System.Xml.XmlImplementation
  commentId: T:System.Xml.XmlImplementation
  id: XmlImplementation
  parent: System.Xml
  children:
  - System.Xml.XmlImplementation.#ctor
  - System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)
  - System.Xml.XmlImplementation.CreateDocument
  - System.Xml.XmlImplementation.HasFeature(System.String,System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlImplementation
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlImplementation
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 216
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Defines the context for a set of <xref href=\"System.Xml.XmlDocument\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: public class XmlImplementation
    content.vb: Public Class XmlImplementation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: XmlImplementation
- uid: System.Xml.XmlImplementation.#ctor
  commentId: M:System.Xml.XmlImplementation.#ctor
  id: '#ctor'
  parent: System.Xml.XmlImplementation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlImplementation.XmlImplementation()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 218
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.XmlImplementation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlImplementation()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlImplementation.XmlImplementation()
- uid: System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.XmlImplementation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlImplementation.XmlImplementation(System.Xml.XmlNameTable)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 219
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.XmlImplementation\" data-throw-if-not-resolved=\"false\"></xref> class with the <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> specified.</p>\n"
  syntax:
    content: public XmlImplementation(XmlNameTable nt)
    content.vb: Public Sub New(nt As XmlNameTable)
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "\n<p>An <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlImplementation.XmlImplementation(XmlNameTable)
- uid: System.Xml.XmlImplementation.CreateDocument
  commentId: M:System.Xml.XmlImplementation.CreateDocument
  id: CreateDocument
  parent: System.Xml.XmlImplementation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlImplementation.CreateDocument()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDocument
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 220
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Creates a new <xref href=\"System.Xml.XmlDocument\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual XmlDocument CreateDocument()
    content.vb: Public Overridable Function CreateDocument As XmlDocument
    return:
      type: System.Xml.XmlDocument
      description: "\n<p>The new <strong>XmlDocument</strong> object.</p>\n"
  seealso:
  - type: System.Xml.NameTable
    commentId: T:System.Xml.NameTable
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: XmlImplementation.CreateDocument()
- uid: System.Xml.XmlImplementation.HasFeature(System.String,System.String)
  commentId: M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)
  id: HasFeature(System.String,System.String)
  parent: System.Xml.XmlImplementation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlImplementation.HasFeature(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasFeature
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 221
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Tests if the Document Object Model (DOM) implementation implements a specific feature.</p>\n"
  syntax:
    content: public bool HasFeature(string strFeature, string strVersion)
    content.vb: Public Function HasFeature(strFeature As String, strVersion As String) As Boolean
    parameters:
    - id: strFeature
      type: System.String
      description: "\n<p>The package name of the feature to test. This name is not case-sensitive. </p>\n"
    - id: strVersion
      type: System.String
      description: "\n<p>This is the version number of the package name to test. If the version is not specified (<strong>null</strong>), supporting any version of the feature causes the method to return <strong>true</strong>. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the feature is implemented in the specified version; otherwise, <strong>false</strong>.</p>\n<p>The following table shows the combinations that cause <strong>HasFeature</strong> to return <strong>true</strong>.</p>\n<p>strFeature </p>\n<p>strVersion </p>\n<table><tbody><tr><td>\n<p>XML </p>\n</td><td>\n<p>1.0 </p>\n</td></tr><tr><td>\n<p>XML </p>\n</td><td>\n<p>2.0 </p>\n</td></tr></tbody></table>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlImplementation.HasFeature(String, String)
references:
- uid: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml
  commentId: N:System.Xml
  nameWithType: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlNameTable
  commentId: T:System.Xml.XmlNameTable
  nameWithType: XmlNameTable
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  nameWithType: XmlDocument
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
