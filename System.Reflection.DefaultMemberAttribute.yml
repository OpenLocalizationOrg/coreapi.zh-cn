items:
- uid: System.Reflection.DefaultMemberAttribute
  commentId: T:System.Reflection.DefaultMemberAttribute
  id: DefaultMemberAttribute
  parent: System.Reflection
  children:
  - System.Reflection.DefaultMemberAttribute.#ctor(System.String)
  - System.Reflection.DefaultMemberAttribute.MemberName
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.DefaultMemberAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DefaultMemberAttribute
    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
    startLine: 19
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Defines the member of a type that is the default member used by <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: >-
      [Serializable]

      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)]

      [ComVisible(true)]

      public sealed class DefaultMemberAttribute : Attribute, _Attribute
    content.vb: >-
      <Serializable>

      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct Or AttributeTargets.Interface)>

      <ComVisible(True)>

      Public NotInheritable Class DefaultMemberAttribute
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1036
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: DefaultMemberAttribute
- uid: System.Reflection.DefaultMemberAttribute.#ctor(System.String)
  commentId: M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.DefaultMemberAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.DefaultMemberAttribute.DefaultMemberAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.DefaultMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public DefaultMemberAttribute(string memberName)
    content.vb: Public Sub New(memberName As String)
    parameters:
    - id: memberName
      type: System.String
      description: "\n<p>A <strong>String</strong> containing the name of the member to invoke. This may be a constructor, method, property, or field. A suitable invocation attribute must be specified when the member is invoked. The default member of a class can be specified by passing an empty <strong>String</strong> as the name of the member.</p>\n<p>The default member of a type is marked with the <strong>DefaultMemberAttribute</strong> custom attribute or marked in COM in the usual way. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DefaultMemberAttribute.DefaultMemberAttribute(String)
- uid: System.Reflection.DefaultMemberAttribute.MemberName
  commentId: P:System.Reflection.DefaultMemberAttribute.MemberName
  id: MemberName
  parent: System.Reflection.DefaultMemberAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.DefaultMemberAttribute.MemberName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MemberName
    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Gets the name from the attribute.</p>\n"
  syntax:
    content: public string MemberName { get; }
    content.vb: Public ReadOnly Property MemberName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string representing the member name.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DefaultMemberAttribute.MemberName
references:
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Attribute
  nameWithType: Attribute
  commentId: T:System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.Equals(Object)
  commentId: M:System.Attribute.Equals(System.Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: "XXX"
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.GetHashCode()
  commentId: M:System.Attribute.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
