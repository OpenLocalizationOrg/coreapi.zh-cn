items:
- uid: System.ComponentModel.ITypedList
  commentId: T:System.ComponentModel.ITypedList
  id: ITypedList
  parent: System.ComponentModel
  children:
  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ITypedList
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ITypedList
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to. </p>\n"
  syntax:
    content: public interface ITypedList
    content.vb: Public Interface ITypedList
  seealso:
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: ITypedList
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  commentId: M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetItemProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the properties on each item used to bind data.</p>\n"
  syntax:
    content: PropertyDescriptorCollection GetItemProperties(PropertyDescriptor[] listAccessors)
    content.vb: Function GetItemProperties(listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "\n<p>An array of <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> objects to find in the collection as bindable. This can be <strong>null</strong>. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>The <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the properties on each item used to bind data.</p>\n"
  seealso:
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  fullName.vb: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor())
  name.vb: GetItemProperties(PropertyDescriptor())
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  nameWithType.vb: ITypedList.GetItemProperties(PropertyDescriptor())
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  commentId: M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetListName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ITypedList.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the list.</p>\n"
  syntax:
    content: string GetListName(PropertyDescriptor[] listAccessors)
    content.vb: Function GetListName(listAccessors As PropertyDescriptor()) As String
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "\n<p>An array of <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> objects, for which the list name is returned. This can be <strong>null</strong>. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name of the list.</p>\n"
  seealso:
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  fullName.vb: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor())
  name.vb: GetListName(PropertyDescriptor())
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  nameWithType.vb: ITypedList.GetListName(PropertyDescriptor())
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.ComponentModel.PropertyDescriptor[]
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptor[]
  fullname.vb: System.ComponentModel.PropertyDescriptor()
  name.vb: PropertyDescriptor()
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: "XXX"
    fullName: System.ComponentModel.PropertyDescriptor
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.ComponentModel.PropertyDescriptor
    name: "XXX"
    fullName: System.ComponentModel.PropertyDescriptor
  - name: "XXX"
    fullName: ()
  nameWithType: PropertyDescriptor[]
  nameWithType.vb: PropertyDescriptor()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  commentId: T:System.ComponentModel.PropertyDescriptorCollection
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
