items:
- uid: Microsoft.SqlServer.Server.SqlMetaData
  commentId: T:Microsoft.SqlServer.Server.SqlMetaData
  id: SqlMetaData
  parent: Microsoft.SqlServer.Server
  children:
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)
  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)
  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)
  - Microsoft.SqlServer.Server.SqlMetaData.CompareOptions
  - Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)
  - Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey
  - Microsoft.SqlServer.Server.SqlMetaData.LocaleId
  - Microsoft.SqlServer.Server.SqlMetaData.Max
  - Microsoft.SqlServer.Server.SqlMetaData.MaxLength
  - Microsoft.SqlServer.Server.SqlMetaData.Name
  - Microsoft.SqlServer.Server.SqlMetaData.Precision
  - Microsoft.SqlServer.Server.SqlMetaData.Scale
  - Microsoft.SqlServer.Server.SqlMetaData.SortOrder
  - Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal
  - Microsoft.SqlServer.Server.SqlMetaData.SqlDbType
  - Microsoft.SqlServer.Server.SqlMetaData.TypeName
  - Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault
  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase
  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName
  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema
  langs:
  - csharp
  - vb
  name: SqlMetaData
  fullName: Microsoft.SqlServer.Server.SqlMetaData
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlMetaData
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 26
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Specifies and retrieves metadata information from parameters and columns of <xref href=\"Microsoft.SqlServer.Server.SqlDataRecord\" data-throw-if-not-resolved=\"false\"></xref> objects. This class cannot be inherited.</p>\n"
  syntax:
    content: public sealed class SqlMetaData
    content.vb: Public NotInheritable Class SqlMetaData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SqlMetaData
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)
  id: '#ctor(System.String,System.Data.SqlDbType)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 58
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name and type.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType)
    content.vb: Public Sub New(name As String, dbType As SqlDbType)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$X $xxxxxx$XxxXxXxxx$$xxxxxx$ xxxx xx xxx xxxxxxx xxx xxxxxx xx xxx xxxxxxxxxxx xx $xx$xxXxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 65
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Byte, Byte)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Byte, System.Byte)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 91
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, precision, and scale.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, byte precision, byte scale)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, precision As Byte, scale As Byte)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: precision
      type: System.Byte
      description: "$x$x$Xxx xxxxxxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: scale
      type: System.Byte
      description: "$x$x$Xxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$X $xxxxxx$XxxXxXxxx$$xxxxxx$ xxxx xx xxx xxxxxxx xxx xxxxxx xx xxx xxxxxxxxxxx xx $xx$xxXxxx$$xx$$ xx $xx$xxxxx$$xx$ xxx xxxxxxx xxxx $xx$xxxxxxxxx$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Byte, Byte)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Byte, System.Byte, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 98
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, precision, scale, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, byte precision, byte scale, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, precision As Byte, scale As Byte, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: precision
      type: System.Byte
      description: "$x$x$Xxx xxxxxxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: scale
      type: System.Byte
      description: "$x$x$Xxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 74
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, and maximum length.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$X XxxXxXxxx xxxx xx xxx xxxxxxx xxx xxxxxx xx xxx xxxxxxxxxxx xx $xx$xxXxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 82
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, maximum length, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Byte, System.Byte, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 132
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT).</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long locale, SqlCompareOptions compareOptions, Type userDefinedType)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, precision As Byte, scale As Byte, locale As Long, compareOptions As SqlCompareOptions, userDefinedType As Type)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
    - id: precision
      type: System.Byte
      description: "$x$x$Xxx xxxxxxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: scale
      type: System.Byte
      description: "$x$x$Xxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: locale
      type: System.Int64
      description: "$x$x$Xxx xxxxxx XX xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "$x$x$Xxx xxxxxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: userDefinedType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> instance that points to the UDT.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>, or <em>userDefinedType</em> points to a type that does not have <xref href=\"Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> declared.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Byte, System.Byte, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Type, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 142
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT). This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, Type userDefinedType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, precision As Byte, scale As Byte, localeId As Long, compareOptions As SqlCompareOptions, userDefinedType As Type, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
    - id: precision
      type: System.Byte
      description: "$x$x$Xxx xxxxxxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: scale
      type: System.Byte
      description: "$x$x$Xxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: localeId
      type: System.Int64
      description: "$x$x$Xxx xxxxxx XX xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "$x$x$Xxx xxxxxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: userDefinedType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> instance that points to the UDT.</p>\n"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Int64, System.Data.SqlTypes.SqlCompareOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 106
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, maximum length, locale, and compare options.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, locale As Long, compareOptions As SqlCompareOptions)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx. $$x$$x"
    - id: locale
      type: System.Int64
      description: "$x$x$Xxx xxxxxx XX xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "$x$x$Xxx xxxxxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$X XxxXxXxxx xxxx xx xxx xxxxxxx xxx xxxxxx xx xxx xxxxxxxxxxx xx $xx$xxXxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 114
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, maximum length, locale, compare options, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, locale As Long, compareOptions As SqlCompareOptions, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: maxLength
      type: System.Int64
      description: "$x$x$Xxx xxxxxxx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
    - id: locale
      type: System.Int64
      description: "$x$x$Xxx xxxxxx XX xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "$x$x$Xxx xxxxxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, String, String, String)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 199
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, type, database name, owning schema, and object name.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, string database, string owningSchema, string objectName)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, database As String, owningSchema As String, objectName As String)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: database
      type: System.String
      description: "$x$x$Xxx xxxxxxxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
    - id: owningSchema
      type: System.String
      description: "$x$x$Xxx xxxxxxxxxx xxxxxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
    - id: objectName
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xx $xx$xxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$ xxxx $xx$xxxxxxxx$$xx$ xxx $xx$xxxxxxXxxxxx$$xx$ xxx xxx$$xxxxxx$xxxx$$xxxxxx$.$$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$X XxxXxXxxx xxxx xx xxx xxxxxxx xxx xxxxxx xx xxx xxxxxxxxxxx xx $xx$xxXxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, String, String, String)
- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 123
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Initializes a new instance of the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> class with the specified column name, database name, owning schema, object name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\n"
  syntax:
    content: public SqlMetaData(string name, SqlDbType dbType, string database, string owningSchema, string objectName, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
    content.vb: Public Sub New(name As String, dbType As SqlDbType, database As String, owningSchema As String, objectName As String, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)
    parameters:
    - id: name
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx xxxxxx.$$x$$x"
    - id: dbType
      type: System.Data.SqlDbType
      description: "$x$x$Xxx XXX Xxxxxx xxxx xx xxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: database
      type: System.String
      description: "$x$x$Xxx xxxxxxxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
    - id: owningSchema
      type: System.String
      description: "$x$x$Xxx xxxxxxxxxx xxxxxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
    - id: objectName
      type: System.String
      description: "$x$x$Xxx xxxx xx xxx XXX xxxxxx xxxxxxxxxx xx x xxxxx XXX xxxxxxxx.$$x$$x"
    - id: useServerDefault
      type: System.Boolean
      description: "$x$x$Xxxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
    - id: isUniqueKey
      type: System.Boolean
      description: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
    - id: columnSortOrder
      type: System.Data.SqlClient.SortOrder
      description: "$x$x$Xxxxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
    - id: sortOrdinal
      type: System.Int32
      description: "$x$x$Xxxxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.CompareOptions
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions
  id: CompareOptions
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: CompareOptions
  fullName: Microsoft.SqlServer.Server.SqlMetaData.CompareOptions
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareOptions
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 260
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxxxxxx xxxxx xxxx xxx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public SqlCompareOptions CompareOptions { get; }
    content.vb: Public ReadOnly Property CompareOptions As SqlCompareOptions
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "\n<p>The comparison rules used for the column or parameter as a <xref href=\"System.Data.SqlTypes.SqlCompareOptions\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.CompareOptions
- uid: Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey
  id: IsUniqueKey
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: IsUniqueKey
  fullName: Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsUniqueKey
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 269
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxxxxxxx xx xxx xxxxxx xx xxx xxxxx$xxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
  syntax:
    content: public bool IsUniqueKey { get; }
    content.vb: Public ReadOnly Property IsUniqueKey As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "$x$x$X $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.IsUniqueKey
- uid: Microsoft.SqlServer.Server.SqlMetaData.LocaleId
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId
  id: LocaleId
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: LocaleId
  fullName: Microsoft.SqlServer.Server.SqlMetaData.LocaleId
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocaleId
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 277
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxx XX xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public long LocaleId { get; }
    content.vb: Public ReadOnly Property LocaleId As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The locale ID of the column or parameter as a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.LocaleId
- uid: Microsoft.SqlServer.Server.SqlMetaData.Max
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Max
  id: Max
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Max
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Max
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 285
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxx xx $xxxxxx$xxxx$$xxxxxx$$ $xxxxxx$xxxxx$$xxxxxx$$ xxx $xxxxxx$xxxxx$$xxxxxx$ xxxx xxxxx. $$x$$x"
  syntax:
    content: public static long Max { get; }
    content.vb: Public Shared ReadOnly Property Max As Long
    parameters: []
    return:
      type: System.Int64
      description: "$x$x$Xxx xxxxxx xx $xxxxxx$xxxx$$xxxxxx$$ $xxxxxx$xxxxx$$xxxxxx$$ xxx $xxxxxx$xxxxx$$xxxxxx$ xxxx xxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: SqlMetaData.Max
- uid: Microsoft.SqlServer.Server.SqlMetaData.MaxLength
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength
  id: MaxLength
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: MaxLength
  fullName: Microsoft.SqlServer.Server.SqlMetaData.MaxLength
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxLength
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 293
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxxx xxxxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public long MaxLength { get; }
    content.vb: Public ReadOnly Property MaxLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum length of the column or parameter as a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.MaxLength
- uid: Microsoft.SqlServer.Server.SqlMetaData.Name
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Name
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 301
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the column or parameter as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "$x$x$Xxx $xx$Xxxx$$xx$ xxxxxxxxx xx xxx xxxxxxxxxxx xx xxxxxx xxxx 000 xxxxxxxxxx. $$x$$x"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.Name
- uid: Microsoft.SqlServer.Server.SqlMetaData.Precision
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Precision
  id: Precision
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Precision
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Precision
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Precision
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 309
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxxxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public byte Precision { get; }
    content.vb: Public ReadOnly Property Precision As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The precision of the column or parameter as a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.Precision
- uid: Microsoft.SqlServer.Server.SqlMetaData.Scale
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Scale
  id: Scale
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Scale
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Scale
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scale
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 317
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public byte Scale { get; }
    content.vb: Public ReadOnly Property Scale As Byte
    parameters: []
    return:
      type: System.Byte
      description: "$x$x$Xxx xxxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.Scale
- uid: Microsoft.SqlServer.Server.SqlMetaData.SortOrder
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder
  id: SortOrder
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SortOrder
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SortOrder
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortOrder
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 325
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxxxxx xxx xxxx xxxxx xxx x xxxxxx.$$x$$x"
  syntax:
    content: public SortOrder SortOrder { get; }
    content.vb: Public ReadOnly Property SortOrder As SortOrder
    parameters: []
    return:
      type: System.Data.SqlClient.SortOrder
      description: "\n<p>A <xref href=\"System.Data.SqlClient.SortOrder\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.SortOrder
- uid: Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal
  id: SortOrdinal
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SortOrdinal
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortOrdinal
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 333
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxxxxx xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  syntax:
    content: public int SortOrdinal { get; }
    content.vb: Public ReadOnly Property SortOrdinal As Integer
    parameters: []
    return:
      type: System.Int32
      description: "$x$x$Xxx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.SortOrdinal
- uid: Microsoft.SqlServer.Server.SqlMetaData.SqlDbType
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType
  id: SqlDbType
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: SqlDbType
  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlDbType
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlDbType
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 341
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxx xxxx xx xxx xxxxxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: public SqlDbType SqlDbType { get; }
    content.vb: Public ReadOnly Property SqlDbType As SqlDbType
    parameters: []
    return:
      type: System.Data.SqlDbType
      description: "\n<p>The data type of the column or parameter as a <xref href=\"System.Data.DbType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.SqlDbType
- uid: Microsoft.SqlServer.Server.SqlMetaData.TypeName
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.TypeName
  id: TypeName
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: TypeName
  fullName: Microsoft.SqlServer.Server.SqlMetaData.TypeName
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeName
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 350
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxx$xxxx xxxx xx xxx xxxx$xxxxxxx xxxx $XXX$ xx xxx XXX Xxxxxx xxxx xxxxxxxxxxx xx xxx xxxxxxxx.$$x$$x"
  syntax:
    content: public string TypeName { get; }
    content.vb: Public ReadOnly Property TypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the UDT or SQL Server type as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.TypeName
- uid: Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault
  id: UseServerDefault
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: UseServerDefault
  fullName: Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseServerDefault
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 361
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxxxxx xxxxxxx xxxx xxxxxx xxxxxx xxx xxx xxxxxxx xxxxxx xxxxx.$$x$$x"
  syntax:
    content: public bool UseServerDefault { get; }
    content.vb: Public ReadOnly Property UseServerDefault As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "$x$x$X $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.UseServerDefault
- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase
  id: XmlSchemaCollectionDatabase
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: XmlSchemaCollectionDatabase
  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSchemaCollectionDatabase
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 369
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxx xx xxx xxxxxxxx xxxxx xxx xxxxxx xxxxxxxxxx xxx xxxx XXX xxxxxxxx xx xxxxxxx.$$x$$x"
  syntax:
    content: public string XmlSchemaCollectionDatabase { get; }
    content.vb: Public ReadOnly Property XmlSchemaCollectionDatabase As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the database where the schema collection for this XML instance is located as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.XmlSchemaCollectionDatabase
- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName
  id: XmlSchemaCollectionName
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: XmlSchemaCollectionName
  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSchemaCollectionName
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 377
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxx xx xxx xxxxxx xxxxxxxxxx xxx xxxx XXX xxxxxxxx.$$x$$x"
  syntax:
    content: public string XmlSchemaCollectionName { get; }
    content.vb: Public ReadOnly Property XmlSchemaCollectionName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the schema collection for this XML instance as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.XmlSchemaCollectionName
- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema
  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema
  id: XmlSchemaCollectionOwningSchema
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: XmlSchemaCollectionOwningSchema
  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSchemaCollectionOwningSchema
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 385
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "$x$x$Xxxx xxx xxxxxx xxxxxxxxxx xxxxxx xxxxx xxx xxxxxx xxxxxxxxxx xxx xxxx XXX xxxxxxxx xx xxxxxxx.$$x$$x"
  syntax:
    content: public string XmlSchemaCollectionOwningSchema { get; }
    content.vb: Public ReadOnly Property XmlSchemaCollectionOwningSchema As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The owning relational schema where the schema collection for this XML instance is located as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlMetaData.XmlSchemaCollectionOwningSchema
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)
  id: Adjust(System.Boolean)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Boolean)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1356
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public bool Adjust(bool value)
    content.vb: Public Function Adjust(value As Boolean) As Boolean
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>The adjusted value as a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Boolean)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)
  id: Adjust(System.Byte)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Byte)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1363
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public byte Adjust(byte value)
    content.vb: Public Function Adjust(value As Byte) As Byte
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Byte
      description: "\n<p>The adjusted value as a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Byte)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])
  id: Adjust(System.Byte[])
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Byte[])
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1370
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> values against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public byte[] Adjust(byte[] value)
    content.vb: Public Function Adjust(value As Byte()) As Byte()
    parameters:
    - id: value
      type: System.Byte[]
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>The adjusted value as an array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte())
  name.vb: Adjust(Byte())
  nameWithType: SqlMetaData.Adjust(Byte[])
  nameWithType.vb: SqlMetaData.Adjust(Byte())
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)
  id: Adjust(System.Char)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Char)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1409
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public char Adjust(char value)
    content.vb: Public Function Adjust(value As Char) As Char
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Char
      description: "\n<p>The adjusted value as a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Char)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])
  id: Adjust(System.Char[])
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Char[])
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1425
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified array of <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> values against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public char[] Adjust(char[] value)
    content.vb: Public Function Adjust(value As Char()) As Char()
    parameters:
    - id: value
      type: System.Char[]
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Char[]
      description: "\n<p>The adjusted value as an array <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char())
  name.vb: Adjust(Char())
  nameWithType: SqlMetaData.Adjust(Char[])
  nameWithType.vb: SqlMetaData.Adjust(Char())
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)
  id: Adjust(System.Data.SqlTypes.SqlBinary)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlBinary)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 932
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlBinary Adjust(SqlBinary value)
    content.vb: Public Function Adjust(value As SqlBinary) As SqlBinary
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBinary
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlBinary)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)
  id: Adjust(System.Data.SqlTypes.SqlBoolean)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlBoolean)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 822
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlBoolean Adjust(SqlBoolean value)
    content.vb: Public Function Adjust(value As SqlBoolean) As SqlBoolean
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlBoolean)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)
  id: Adjust(System.Data.SqlTypes.SqlByte)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlByte)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 829
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlByte Adjust(SqlByte value)
    content.vb: Public Function Adjust(value As SqlByte) As SqlByte
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlByte
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlByte)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)
  id: Adjust(System.Data.SqlTypes.SqlBytes)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlBytes)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1026
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlBytes Adjust(SqlBytes value)
    content.vb: Public Function Adjust(value As SqlBytes) As SqlBytes
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBytes
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlBytes)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)
  id: Adjust(System.Data.SqlTypes.SqlChars)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlChars)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 979
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlChars\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlChars Adjust(SqlChars value)
    content.vb: Public Function Adjust(value As SqlChars) As SqlChars
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlChars
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlChars\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlChars)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)
  id: Adjust(System.Data.SqlTypes.SqlDateTime)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlDateTime)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 883
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlDateTime Adjust(SqlDateTime value)
    content.vb: Public Function Adjust(value As SqlDateTime) As SqlDateTime
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDateTime
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlDateTime)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)
  id: Adjust(System.Data.SqlTypes.SqlDecimal)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlDecimal)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 895
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlDecimal Adjust(SqlDecimal value)
    content.vb: Public Function Adjust(value As SqlDecimal) As SqlDecimal
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDecimal
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlDecimal)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)
  id: Adjust(System.Data.SqlTypes.SqlDouble)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlDouble)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 864
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlDouble Adjust(SqlDouble value)
    content.vb: Public Function Adjust(value As SqlDouble) As SqlDouble
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDouble
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlDouble)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)
  id: Adjust(System.Data.SqlTypes.SqlGuid)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlGuid)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 972
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlGuid Adjust(SqlGuid value)
    content.vb: Public Function Adjust(value As SqlGuid) As SqlGuid
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlGuid
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlGuid)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)
  id: Adjust(System.Data.SqlTypes.SqlInt16)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlInt16)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 836
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlInt16 Adjust(SqlInt16 value)
    content.vb: Public Function Adjust(value As SqlInt16) As SqlInt16
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt16
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlInt16)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)
  id: Adjust(System.Data.SqlTypes.SqlInt32)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlInt32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 843
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlInt32 Adjust(SqlInt32 value)
    content.vb: Public Function Adjust(value As SqlInt32) As SqlInt32
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt32
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlInt32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)
  id: Adjust(System.Data.SqlTypes.SqlInt64)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlInt64)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 850
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlInt64 Adjust(SqlInt64 value)
    content.vb: Public Function Adjust(value As SqlInt64) As SqlInt64
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt64
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlInt64)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)
  id: Adjust(System.Data.SqlTypes.SqlMoney)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlMoney)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 871
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlMoney Adjust(SqlMoney value)
    content.vb: Public Function Adjust(value As SqlMoney) As SqlMoney
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlMoney
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlMoney)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)
  id: Adjust(System.Data.SqlTypes.SqlSingle)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlSingle)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 857
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlSingle Adjust(SqlSingle value)
    content.vb: Public Function Adjust(value As SqlSingle) As SqlSingle
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlSingle)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)
  id: Adjust(System.Data.SqlTypes.SqlString)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlString)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 902
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlString Adjust(SqlString value)
    content.vb: Public Function Adjust(value As SqlString) As SqlString
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlString)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)
  id: Adjust(System.Data.SqlTypes.SqlXml)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(SqlXml)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1071
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public SqlXml Adjust(SqlXml value)
    content.vb: Public Function Adjust(value As SqlXml) As SqlXml
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlXml
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "\n<p>The adjusted value as a <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(SqlXml)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)
  id: Adjust(System.DateTime)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(DateTime)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 794
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public DateTime Adjust(DateTime value)
    content.vb: Public Function Adjust(value As Date) As Date
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The adjusted value as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(DateTime)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)
  id: Adjust(System.DateTimeOffset)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(DateTimeOffset)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1086
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public DateTimeOffset Adjust(DateTimeOffset value)
    content.vb: Public Function Adjust(value As DateTimeOffset) As DateTimeOffset
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The adjusted value as an array of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(DateTimeOffset)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)
  id: Adjust(System.Decimal)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Decimal)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 773
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public decimal Adjust(decimal value)
    content.vb: Public Function Adjust(value As Decimal) As Decimal
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The adjusted value as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Decimal)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)
  id: Adjust(System.Double)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Double)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 733
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public double Adjust(double value)
    content.vb: Public Function Adjust(value As Double) As Double
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Double
      description: "\n<p>The adjusted value as a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Double)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)
  id: Adjust(System.Guid)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Guid)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 815
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public Guid Adjust(Guid value)
    content.vb: Public Function Adjust(value As Guid) As Guid
    parameters:
    - id: value
      type: System.Guid
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Guid
      description: "\n<p>The adjusted value as a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Guid)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)
  id: Adjust(System.Int16)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Int16)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 705
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public short Adjust(short value)
    content.vb: Public Function Adjust(value As Short) As Short
    parameters:
    - id: value
      type: System.Int16
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Int16
      description: "\n<p>The adjusted value as a <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Int16)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)
  id: Adjust(System.Int32)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Int32)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 712
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public int Adjust(int value)
    content.vb: Public Function Adjust(value As Integer) As Integer
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The adjusted value as a <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Int32)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)
  id: Adjust(System.Int64)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Int64)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 719
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public long Adjust(long value)
    content.vb: Public Function Adjust(value As Long) As Long
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The adjusted value as a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Int64)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)
  id: Adjust(System.Object)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Object)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1093
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public object Adjust(object value)
    content.vb: Public Function Adjust(value As Object) As Object
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The adjusted value as a <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Object)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)
  id: Adjust(System.Single)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(Single)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 726
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public float Adjust(float value)
    content.vb: Public Function Adjust(value As Single) As Single
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.Single
      description: "\n<p>The adjusted value as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(Single)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)
  id: Adjust(System.String)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(String)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 740
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public string Adjust(string value)
    content.vb: Public Function Adjust(value As String) As String
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.String
      description: "\n<p>The adjusted value as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(String)
- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)
  id: Adjust(System.TimeSpan)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: Adjust(TimeSpan)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adjust
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1078
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Validates the specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value against the metadata, and adjusts the value if necessary.</p>\n"
  syntax:
    content: public TimeSpan Adjust(TimeSpan value)
    content.vb: Public Function Adjust(value As TimeSpan) As TimeSpan
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>The value to validate against the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>The adjusted value as an array of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>Value</em> does not match the <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> type, or <em>value</em> could not be adjusted. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlMetaData.Adjust(TimeSpan)
- uid: Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)
  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)
  id: InferFromValue(System.Object,System.String)
  parent: Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: InferFromValue(Object, String)
  fullName: Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InferFromValue
    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs
    startLine: 1179
  assemblies:
  - System.Data.SqlClient
  namespace: Microsoft.SqlServer.Server
  summary: "\n<p>Infers the metadata from the specified object and returns it as a <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public static SqlMetaData InferFromValue(object value, string name)
    content.vb: Public Shared Function InferFromValue(value As Object, name As String) As SqlMetaData
    parameters:
    - id: value
      type: System.Object
      description: "$x$x$Xxx xxxxxx xxxx xxxx xxxxx xxx xxxxxxxx xx xxxxxxxx.$$x$$x"
    - id: name
      type: System.String
      description: "\n<p>The name assigned to the returned <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    return:
      type: Microsoft.SqlServer.Server.SqlMetaData
      description: "\n<p>The inferred metadata as a <xref href=\"Microsoft.SqlServer.Server.SqlMetaData\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$Xxx x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: SqlMetaData.InferFromValue(Object, String)
references:
- uid: Microsoft.SqlServer.Server
  isExternal: false
  name: Microsoft.SqlServer.Server
  fullName: Microsoft.SqlServer.Server
  nameWithType: Microsoft.SqlServer.Server
  commentId: N:Microsoft.SqlServer.Server
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Data.SqlDbType
  parent: System.Data
  isExternal: false
  name: SqlDbType
  fullName: System.Data.SqlDbType
  nameWithType: SqlDbType
  commentId: T:System.Data.SqlDbType
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
  nameWithType: System.Data
  commentId: N:System.Data
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Data.SqlClient.SortOrder
  parent: System.Data.SqlClient
  isExternal: false
  name: SortOrder
  fullName: System.Data.SqlClient.SortOrder
  nameWithType: SortOrder
  commentId: T:System.Data.SqlClient.SortOrder
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
  nameWithType: SqlCompareOptions
  commentId: T:System.Data.SqlTypes.SqlCompareOptions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.Char[]
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
  nameWithType: SqlBinary
  commentId: T:System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
  nameWithType: SqlBoolean
  commentId: T:System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
  nameWithType: SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
  nameWithType: SqlBytes
  commentId: T:System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
  nameWithType: SqlChars
  commentId: T:System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
  nameWithType: SqlDateTime
  commentId: T:System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
  nameWithType: SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
  nameWithType: SqlDouble
  commentId: T:System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
  nameWithType: SqlGuid
  commentId: T:System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
  nameWithType: SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
  nameWithType: SqlInt32
  commentId: T:System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
  nameWithType: SqlInt64
  commentId: T:System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
  nameWithType: SqlMoney
  commentId: T:System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
  nameWithType: SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
  nameWithType: SqlString
  commentId: T:System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
  nameWithType: SqlXml
  commentId: T:System.Data.SqlTypes.SqlXml
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
  nameWithType: DateTimeOffset
  commentId: T:System.DateTimeOffset
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
  nameWithType: Guid
  commentId: T:System.Guid
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
  nameWithType: Int16
  commentId: T:System.Int16
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  nameWithType: TimeSpan
  commentId: T:System.TimeSpan
- uid: Microsoft.SqlServer.Server.SqlMetaData
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlMetaData
  fullName: Microsoft.SqlServer.Server.SqlMetaData
  nameWithType: SqlMetaData
  commentId: T:Microsoft.SqlServer.Server.SqlMetaData
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
