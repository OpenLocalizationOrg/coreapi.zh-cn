items:
- uid: System.Collections.DictionaryEntry
  commentId: T:System.Collections.DictionaryEntry
  id: DictionaryEntry
  parent: System.Collections
  children:
  - System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  - System.Collections.DictionaryEntry.Key
  - System.Collections.DictionaryEntry.Value
  langs:
  - csharp
  - vb
  name: DictionaryEntry
  fullName: System.Collections.DictionaryEntry
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DictionaryEntry
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 20
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "$x$x$Xxxxxxx x xxxxxxxxxx xxx$xxxxx xxxx xxxx xxx xx xxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public struct DictionaryEntry
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Structure DictionaryEntry
  seealso:
  - type: System.Collections.IDictionary
    commentId: T:System.Collections.IDictionary
  - type: System.Collections.IDictionaryEnumerator
    commentId: T:System.Collections.IDictionaryEnumerator
  - type: System.Collections.Generic.KeyValuePair`2
    commentId: T:System.Collections.Generic.KeyValuePair`2
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: DictionaryEntry
- uid: System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  id: '#ctor(System.Object,System.Object)'
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: DictionaryEntry(Object, Object)
  fullName: System.Collections.DictionaryEntry.DictionaryEntry(System.Object, System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Initializes an instance of the <xref href=\"System.Collections.DictionaryEntry\" data-throw-if-not-resolved=\"false\"></xref> type with the specified key and value.</p>\n"
  syntax:
    content: public DictionaryEntry(object key, object value)
    content.vb: Public Sub New(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: "$x$x$Xxx xxxxxx xxxxxxx xx xxxx xxx$xxxxx xxxx. $$x$$x"
    - id: value
      type: System.Object
      description: "$x$x$Xxx xxxxxxxxxx xxxxxxxxxx xxxx $xx$xxx$$xx$. $$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$ xxx xxx .XXX Xxxxxxxxx xxxxxxx xx 0.0 xx 0.0. $$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DictionaryEntry.DictionaryEntry(Object, Object)
- uid: System.Collections.DictionaryEntry.Key
  commentId: P:System.Collections.DictionaryEntry.Key
  id: Key
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Collections.DictionaryEntry.Key
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Key
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "$x$x$Xxxx xx xxxx xxx xxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  syntax:
    content: public object Key { get; set; }
    content.vb: Public Property Key As Object
    parameters: []
    return:
      type: System.Object
      description: "$x$x$Xxx xxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: DictionaryEntry.Key
- uid: System.Collections.DictionaryEntry.Value
  commentId: P:System.Collections.DictionaryEntry.Value
  id: Value
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Collections.DictionaryEntry.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 44
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "$x$x$Xxxx xx xxxx xxx xxxxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  syntax:
    content: public object Value { get; set; }
    content.vb: Public Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: DictionaryEntry.Value
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
