items:
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameValueCollection
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 18
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Represents a collection of associated <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values that can be accessed either with the key or with the index.</p>\n"
  syntax:
    content: 'public class NameValueCollection : NameObjectCollectionBase, ICollection, IEnumerable'
    content.vb: >-
      Public Class NameValueCollection
          Inherits NameObjectCollectionBase
          Implements ICollection, IEnumerable
  seealso:
  - type: System.Collections.Specialized.NameObjectCollectionBase
    commentId: T:System.Collections.Specialized.NameObjectCollectionBase
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: NameValueCollection
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 32
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</p>\n"
  syntax:
    content: public NameValueCollection()
    content.vb: Public Sub New
  seealso:
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection()
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 56
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public NameValueCollection(IEqualityComparer equalityComparer)
    content.vb: Public Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "\n<p>The <xref href=\"System.Collections.IEqualityComparer\" data-throw-if-not-resolved=\"false\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</p>\n"
  seealso:
  - type: System.Collections.IEqualityComparer
    commentId: T:System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.Specialized.NameValueCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 41
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.</p>\n"
  syntax:
    content: public NameValueCollection(NameValueCollection col)
    content.vb: Public Sub New(col As NameValueCollection)
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "\n<p>The <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>col</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 52
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</p>\n"
  syntax:
    content: public NameValueCollection(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: "\n<p>The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> can contain.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>capacity</em> is less than zero.</p>\n"
  seealso:
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection(Int32)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 60
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public NameValueCollection(int capacity, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
      description: "\n<p>The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> object can contain.</p>\n"
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "\n<p>The <xref href=\"System.Collections.IEqualityComparer\" data-throw-if-not-resolved=\"false\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>capacity</em> is less than zero.</p>\n"
  seealso:
  - type: System.Collections.IEqualityComparer
    commentId: T:System.Collections.IEqualityComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Int32, System.Collections.Specialized.NameValueCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 71
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.</p>\n"
  syntax:
    content: public NameValueCollection(int capacity, NameValueCollection col)
    content.vb: Public Sub New(capacity As Integer, col As NameValueCollection)
    parameters:
    - id: capacity
      type: System.Int32
      description: "\n<p>The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> can contain.</p>\n"
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "\n<p>The <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>capacity</em> is less than zero.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>col</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.NameValueCollection(Int32, NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 381
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets all the keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string[] AllKeys { get; }
    content.vb: Public Overridable ReadOnly Property AllKeys As String()
    parameters: []
    return:
      type: System.String[]
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> array that contains all the keys of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
    commentId: M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - type: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
    commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: NameValueCollection.AllKeys
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 366
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the entry to locate in the collection.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the comma-separated list of values at the specified index of the collection.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is outside the valid range of indexes for the collection.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
    commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  name.vb: Item(Int32)
  nameWithType: NameValueCollection.Item[Int32]
  nameWithType.vb: NameValueCollection.Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 318
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets or sets the entry with the specified key in the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string this[string name] { get; set; }
    content.vb: Public Property Item(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry to locate. The key can be <strong>null</strong>.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only and the operation attempts to modify the collection. </p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
    commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Specialized.NameValueCollection.Item(System.String)
  name.vb: Item(String)
  nameWithType: NameValueCollection.Item[String]
  nameWithType.vb: NameValueCollection.Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 140
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Copies the entries in the specified <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to the current <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Add(NameValueCollection c)
    content.vb: Public Sub Add(c As NameValueCollection)
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: "\n<p>The <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to copy to the current <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>c</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
    commentId: M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.Add(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 247
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Adds an entry with the specified name and value to the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void Add(string name, string value)
    content.vb: Public Overridable Sub Add(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry to add. The key can be <strong>null</strong>.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value of the entry to add. The value can be <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Add(String, String)
- uid: System.Collections.Specialized.NameValueCollection.Clear
  commentId: M:System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 172
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Invalidates the cached arrays and removes all entries from the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
    commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Clear()
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 181
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Copies the entire <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> to a compatible one-dimensional <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref>, starting at the specified index of the target array.</p>\n"
  syntax:
    content: public void CopyTo(Array dest, int index)
    content.vb: Public Sub CopyTo(dest As Array, index As Integer)
    parameters:
    - id: dest
      type: System.Array
      description: "\n<p>The one-dimensional <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> must have zero-based indexing.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>dest</em> at which copying begins.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>dest</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>dest</em> is multidimensional.</p>\n<p>-or- </p>\n<p>The number of elements in the source <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>dest</em>.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The type of the source <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> cannot be cast automatically to the type of the destination <em>dest</em>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.CopyTo(Array, Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Get
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 340
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> combined into one comma-separated list.</p>\n"
  syntax:
    content: public virtual string Get(int index)
    content.vb: Public Overridable Function Get(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the entry that contains the values to get from the collection.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains a comma-separated list of the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>, if found; otherwise, <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is outside the valid range of indexes for the collection.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
    commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Get(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Get(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Get
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 275
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> combined into one comma-separated list.</p>\n"
  syntax:
    content: public virtual string Get(string name)
    content.vb: Public Overridable Function Get(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry that contains the values to get. The key can be <strong>null</strong>.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>, if found; otherwise, <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
    commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Get(String)
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetKey
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 358
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string GetKey(int index)
    content.vb: Public Overridable Function GetKey(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the key to get from the collection.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>, if found; otherwise, <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is outside the valid range of indexes for the collection. </p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.GetKey(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 349
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string[] GetValues(int index)
    content.vb: Public Overridable Function GetValues(index As Integer) As String()
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the entry that contains the values to get from the collection.</p>\n"
    return:
      type: System.String[]
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> array that contains the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>, if found; otherwise, <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is outside the valid range of indexes for the collection. </p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Get(System.String)
    commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.GetValues(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 284
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string[] GetValues(string name)
    content.vb: Public Overridable Function GetValues(name As String) As String()
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry that contains the values to get. The key can be <strong>null</strong>.</p>\n"
    return:
      type: System.String[]
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> array that contains the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>, if found; otherwise, <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Get(System.String)
    commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.GetValues(String)
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  commentId: M:System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 226
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> contains keys that are not <strong>null</strong>.</p>\n"
  syntax:
    content: public bool HasKeys()
    content.vb: Public Function HasKeys As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> contains keys that are not <strong>null</strong>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: NameValueCollection.HasKeys()
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InvalidateCachedArrays
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 90
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Resets the cached arrays of the collection to <strong>null</strong>.</p>\n"
  syntax:
    content: protected void InvalidateCachedArrays()
    content.vb: Protected Sub InvalidateCachedArrays
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.AllKeys
    commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: NameValueCollection.InvalidateCachedArrays()
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 308
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public virtual void Remove(string name)
    content.vb: Public Overridable Sub Remove(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry to remove. The key can be <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Remove(String)
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection.Set(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Set
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameValueCollection.cs
    startLine: 293
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Sets the value of an entry in the <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void Set(string name, string value)
    content.vb: Public Overridable Sub Set(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> key of the entry to add the new value to. The key can be <strong>null</strong>.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the new value to add to the specified entry. The value can be <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only.</p>\n"
  seealso:
  - type: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
    commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: NameValueCollection.Set(String, String)
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase
  parent: System.Collections.Specialized
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  commentId: T:System.Collections.Specialized.NameObjectCollectionBase
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection
  nameWithType: ICollection
  commentId: T:System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable
  nameWithType: IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  nameWithType: NameObjectCollectionBase.Count
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  nameWithType: NameObjectCollectionBase.Keys
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.ICollection.IsSynchronized
  nameWithType.vb: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.ICollection.SyncRoot
  nameWithType.vb: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseClear()
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array, Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable()
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable(IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Queryable
  nameWithType: Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Enumerable
  nameWithType: Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq
  nameWithType: System.Linq
  commentId: N:System.Linq
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEqualityComparer
  nameWithType: IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Specialized.NameValueCollection
  nameWithType: NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.String[]
  name: "XXX"
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: String[]
  nameWithType.vb: String()
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Array
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Array
  nameWithType: Array
  commentId: T:System.Array
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: "XXX"
  fullName: System.InvalidCastException
  nameWithType: InvalidCastException
  commentId: T:System.InvalidCastException
