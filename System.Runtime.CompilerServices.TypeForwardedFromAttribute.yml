items:
- uid: System.Runtime.CompilerServices.TypeForwardedFromAttribute
  commentId: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute
  id: TypeForwardedFromAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)
  - System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TypeForwardedFromAttribute
    path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
    startLine: 7
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Specifies a source <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> in another assembly. </p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Interface | AttributeTargets.Delegate, Inherited = false, AllowMultiple = false)]

      public sealed class TypeForwardedFromAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct Or AttributeTargets.Enum Or AttributeTargets.Interface Or AttributeTargets.Delegate, Inherited:=False, AllowMultiple:=False)>

      Public NotInheritable Class TypeForwardedFromAttribute
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 5148
    namedArguments:
    - name: "XXX"
      type: System.Boolean
      value: false
    - name: "XXX"
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: TypeForwardedFromAttribute
- uid: System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)
  commentId: M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.CompilerServices.TypeForwardedFromAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute.TypeForwardedFromAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
    startLine: 18
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.TypeForwardedFromAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public TypeForwardedFromAttribute(string assemblyFullName)
    content.vb: Public Sub New(assemblyFullName As String)
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "\n<p>The source <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> in another assembly. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>assemblyFullName</em> is <strong>null</strong> or empty.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TypeForwardedFromAttribute.TypeForwardedFromAttribute(String)
- uid: System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName
  commentId: P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName
  id: AssemblyFullName
  parent: System.Runtime.CompilerServices.TypeForwardedFromAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AssemblyFullName
    path: src/mscorlib/src/System/Runtime/CompilerServices/TypeForwardedFromAttribute.cs
    startLine: 27
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Gets the assembly-qualified name of the source type.</p>\n"
  syntax:
    content: public string AssemblyFullName { get; }
    content.vb: Public ReadOnly Property AssemblyFullName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The assembly-qualified name of the source type.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TypeForwardedFromAttribute.AssemblyFullName
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Attribute
  nameWithType: Attribute
  commentId: T:System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.Equals(Object)
  commentId: M:System.Attribute.Equals(System.Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: "XXX"
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.GetHashCode()
  commentId: M:System.Attribute.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
