items:
- uid: System.ComponentModel.AsyncOperation
  commentId: T:System.ComponentModel.AsyncOperation
  id: AsyncOperation
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncOperation.Finalize
  - System.ComponentModel.AsyncOperation.OperationCompleted
  - System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)
  - System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  - System.ComponentModel.AsyncOperation.SynchronizationContext
  - System.ComponentModel.AsyncOperation.UserSuppliedState
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncOperation
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 8
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Tracks the lifetime of an asynchronous operation.</p>\n"
  syntax:
    content: public sealed class AsyncOperation
    content.vb: Public NotInheritable Class AsyncOperation
  seealso:
  - type: System.ComponentModel.AsyncOperationManager
    commentId: T:System.ComponentModel.AsyncOperationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AsyncOperation
- uid: System.ComponentModel.AsyncOperation.SynchronizationContext
  commentId: P:System.ComponentModel.AsyncOperation.SynchronizationContext
  id: SynchronizationContext
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SynchronizationContext
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Gets the <xref href=\"System.Threading.SynchronizationContext\" data-throw-if-not-resolved=\"false\"></xref> object that was passed to the constructor.</p>\n"
  syntax:
    content: public SynchronizationContext SynchronizationContext { get; }
    content.vb: Public ReadOnly Property SynchronizationContext As SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: "\n<p>The <xref href=\"System.Threading.SynchronizationContext\" data-throw-if-not-resolved=\"false\"></xref> object that was passed to the constructor.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: AsyncOperation.SynchronizationContext
- uid: System.ComponentModel.AsyncOperation.UserSuppliedState
  commentId: P:System.ComponentModel.AsyncOperation.UserSuppliedState
  id: UserSuppliedState
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.UserSuppliedState
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserSuppliedState
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 37
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets an object used to uniquely identify an asynchronous operation.</p>\n"
  syntax:
    content: public object UserSuppliedState { get; }
    content.vb: Public ReadOnly Property UserSuppliedState As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The state object passed to the asynchronous method invocation.</p>\n"
  seealso:
  - type: System.ComponentModel.AsyncOperationManager
    commentId: T:System.ComponentModel.AsyncOperationManager
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: AsyncOperation.UserSuppliedState
- uid: System.ComponentModel.AsyncOperation.Finalize
  commentId: M:System.ComponentModel.AsyncOperation.Finalize
  id: Finalize
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.Finalize()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 29
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Finalizes the asynchronous operation.</p>\n"
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: AsyncOperation.Finalize()
- uid: System.ComponentModel.AsyncOperation.OperationCompleted
  commentId: M:System.ComponentModel.AsyncOperation.OperationCompleted
  id: OperationCompleted
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.OperationCompleted()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OperationCompleted
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 65
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Ends the lifetime of an asynchronous operation.</p>\n"
  syntax:
    content: public void OperationCompleted()
    content.vb: Public Sub OperationCompleted
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.ComponentModel.AsyncOperation.OperationCompleted\" data-throw-if-not-resolved=\"false\"></xref> has been called previously for this task. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AsyncOperation.OperationCompleted()
- uid: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)
  id: Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Post
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 54
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Invokes a delegate on the thread or context appropriate for the application model.</p>\n"
  syntax:
    content: public void Post(SendOrPostCallback d, object arg)
    content.vb: Public Sub Post(d As SendOrPostCallback, arg As Object)
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: "\n<p>A <xref href=\"System.Threading.SendOrPostCallback\" data-throw-if-not-resolved=\"false\"></xref> object that wraps the delegate to be called when the operation ends. </p>\n"
    - id: arg
      type: System.Object
      description: "\n<p>An argument for the delegate contained in the <em>d</em> parameter. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method has been called previously for this task. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>d</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.AsyncOperationManager
    commentId: T:System.ComponentModel.AsyncOperationManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AsyncOperation.Post(SendOrPostCallback, Object)
- uid: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  id: PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)
  parent: System.ComponentModel.AsyncOperation
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PostOperationCompleted
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs
    startLine: 59
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Ends the lifetime of an asynchronous operation.</p>\n"
  syntax:
    content: public void PostOperationCompleted(SendOrPostCallback d, object arg)
    content.vb: Public Sub PostOperationCompleted(d As SendOrPostCallback, arg As Object)
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: "\n<p>A <xref href=\"System.Threading.SendOrPostCallback\" data-throw-if-not-resolved=\"false\"></xref> object that wraps the delegate to be called when the operation ends. </p>\n"
    - id: arg
      type: System.Object
      description: "\n<p>An argument for the delegate contained in the <em>d</em> parameter. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.ComponentModel.AsyncOperation.OperationCompleted\" data-throw-if-not-resolved=\"false\"></xref> has been called previously for this task. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>d</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.AsyncOperationManager
    commentId: T:System.ComponentModel.AsyncOperationManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AsyncOperation.PostOperationCompleted(SendOrPostCallback, Object)
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading.SynchronizationContext
  nameWithType: SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
- uid: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading.SendOrPostCallback
  nameWithType: SendOrPostCallback
  commentId: T:System.Threading.SendOrPostCallback
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
