items:
- uid: System.Reflection.Emit.DynamicMethod
  commentId: T:System.Reflection.Emit.DynamicMethod
  id: DynamicMethod
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.Attributes
  - System.Reflection.Emit.DynamicMethod.CallingConvention
  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)
  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)
  - System.Reflection.Emit.DynamicMethod.DeclaringType
  - System.Reflection.Emit.DynamicMethod.GetILGenerator
  - System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  - System.Reflection.Emit.DynamicMethod.GetParameters
  - System.Reflection.Emit.DynamicMethod.InitLocals
  - System.Reflection.Emit.DynamicMethod.MethodImplementationFlags
  - System.Reflection.Emit.DynamicMethod.Name
  - System.Reflection.Emit.DynamicMethod.ReturnParameter
  - System.Reflection.Emit.DynamicMethod.ReturnType
  - System.Reflection.Emit.DynamicMethod.ToString
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DynamicMethod
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 20
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Defines and represents a dynamic method that can be compiled, executed, and discarded. Discarded methods are available for garbage collection.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public sealed class DynamicMethod : MethodInfo, ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo
    content.vb: >-
      <ComVisible(True)>

      Public NotInheritable Class DynamicMethod
          Inherits MethodInfo
          Implements ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.MethodBase
  - System.Reflection.MethodInfo
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._MemberInfo
  - System.Runtime.InteropServices._MethodBase
  - System.Runtime.InteropServices._MethodInfo
  inheritedMembers:
  - System.Reflection.MethodInfo.Equals(System.Object)
  - System.Reflection.MethodInfo.GetHashCode
  - System.Reflection.MethodInfo.GetBaseDefinition
  - System.Reflection.MethodInfo.GetGenericArguments
  - System.Reflection.MethodInfo.GetGenericMethodDefinition
  - System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType
  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodInfo.MemberType
  - System.Reflection.MethodInfo.ReturnTypeCustomAttributes
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.GetCurrentMethod
  - System.Reflection.MethodBase.GetMethodImplementationFlags
  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.GetMethodBody
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodBase.MethodHandle
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsSecurityCritical
  - System.Reflection.MethodBase.IsSecuritySafeCritical
  - System.Reflection.MethodBase.IsSecurityTransparent
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MemberInfo.ReflectedType
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.Module
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: DynamicMethod
  extensionMethods:
  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken
  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken
  - System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Reflection.Module, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 165
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method that is global to a module, specifying the method name, attributes, calling convention, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), m As  Module, skipVisibility As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\n"
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: "\n<p>A bitwise combination of <xref href=\"System.Reflection.MethodAttributes\" data-throw-if-not-resolved=\"false\"></xref> values that specifies the attributes of the dynamic method. The only combination allowed is <xref href=\"System.Reflection.MethodAttributes.Public\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Reflection.MethodAttributes.Static\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: "\n<p>The calling convention for the dynamic method. Must be <xref href=\"System.Reflection.CallingConventions.Standard\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: m
      type: System.Reflection.Module
      description: "\n<p>A <xref href=\"System.Reflection.Module\" data-throw-if-not-resolved=\"false\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\n"
    - id: skipVisibility
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>m</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>attributes</em> is a combination of flags other than <xref href=\"System.Reflection.MethodAttributes.Public\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Reflection.MethodAttributes.Static\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>callingConvention</em> is not <xref href=\"System.Reflection.CallingConventions.Standard\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Reflection.Module, System.Boolean)
  name.vb: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Module, Boolean)
  nameWithType: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Module, Boolean)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Module, Boolean)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)
  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 241
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method, specifying the method name, attributes, calling convention, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\n"
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: "\n<p>A bitwise combination of <xref href=\"System.Reflection.MethodAttributes\" data-throw-if-not-resolved=\"false\"></xref> values that specifies the attributes of the dynamic method. The only combination allowed is <xref href=\"System.Reflection.MethodAttributes.Public\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Reflection.MethodAttributes.Static\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: "\n<p>The calling convention for the dynamic method. Must be <xref href=\"System.Reflection.CallingConventions.Standard\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: owner
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type.</p>\n"
    - id: skipVisibility
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>owner</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>attributes</em> is a combination of flags other than <xref href=\"System.Reflection.MethodAttributes.Public\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Reflection.MethodAttributes.Static\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>callingConvention</em> is not <xref href=\"System.Reflection.CallingConventions.Standard\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type, System.Boolean)
  name.vb: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type, Boolean)
  nameWithType: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type, Boolean)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type, Boolean)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])
  id: '#ctor(System.String,System.Type,System.Type[])'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 74
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Initializes an anonymously hosted dynamic method, specifying the method name, return type, and parameter types. </p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type())
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type())
  name.vb: DynamicMethod(String, Type, Type())
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[])
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type())
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)
  id: '#ctor(System.String,System.Type,System.Type[],System.Boolean)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 94
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Initializes an anonymously hosted dynamic method, specifying the method name, return type, parameter types, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method. </p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, bool restrictedSkipVisibility)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), restrictedSkipVisibility As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: restrictedSkipVisibility
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method, with this restriction: the trust level of the assemblies that contain those types and members must be equal to or less than the trust level of the call stack that emits the dynamic method; otherwise, <strong>false</strong>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Boolean)
  name.vb: DynamicMethod(String, Type, Type(), Boolean)
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Boolean)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Boolean)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)
  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Reflection.Module)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 116
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, and module.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Module m)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), m As  Module)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: m
      type: System.Reflection.Module
      description: "\n<p>A <xref href=\"System.Reflection.Module\" data-throw-if-not-resolved=\"false\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>m</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Reflection.Module)
  name.vb: DynamicMethod(String, Type, Type(), Module)
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Module)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Module)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)
  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Reflection.Module, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 140
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), m As  Module, skipVisibility As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: m
      type: System.Reflection.Module
      description: "\n<p>A <xref href=\"System.Reflection.Module\" data-throw-if-not-resolved=\"false\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\n"
    - id: skipVisibility
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>m</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Reflection.Module, System.Boolean)
  name.vb: DynamicMethod(String, Type, Type(), Module, Boolean)
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Module, Boolean)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Module, Boolean)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)
  id: '#ctor(System.String,System.Type,System.Type[],System.Type)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Type)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 192
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method, specifying the method name, return type, parameter types, and the type with which the dynamic method is logically associated.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), owner As Type)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: owner
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>owner</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is <strong>null</strong>, or is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Type)
  name.vb: DynamicMethod(String, Type, Type(), Type)
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Type)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Type)
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)
  id: '#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Type, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 216
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Creates a dynamic method, specifying the method name, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [MethodImpl(MethodImplOptions.NoInlining)]

      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)
    content.vb: >-
      <SecurityCritical>

      <MethodImpl(MethodImplOptions.NoInlining)>

      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\n"
    - id: parameterTypes
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\n"
    - id: owner
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type.</p>\n"
    - id: skipVisibility
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>owner</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>returnType</em> is <strong>null</strong>, or is a type for which <xref href=\"System.Type.IsByRef\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Type, System.Boolean)
  name.vb: DynamicMethod(String, Type, Type(), Type, Boolean)
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Type, Boolean)
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Type, Boolean)
- uid: System.Reflection.Emit.DynamicMethod.Attributes
  commentId: P:System.Reflection.Emit.DynamicMethod.Attributes
  id: Attributes
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.Attributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Attributes
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 616
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the attributes specified when the dynamic method was created.</p>\n"
  syntax:
    content: public override MethodAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
    parameters: []
    return:
      type: System.Reflection.MethodAttributes
      description: "\n<p>A bitwise combination of the <xref href=\"System.Reflection.MethodAttributes\" data-throw-if-not-resolved=\"false\"></xref> values representing the attributes for the method.</p>\n"
  overridden: System.Reflection.MethodBase.Attributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.Attributes
- uid: System.Reflection.Emit.DynamicMethod.CallingConvention
  commentId: P:System.Reflection.Emit.DynamicMethod.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CallingConvention
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 618
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the calling convention specified when the dynamic method was created.</p>\n"
  syntax:
    content: public override CallingConventions CallingConvention { get; }
    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions
    parameters: []
    return:
      type: System.Reflection.CallingConventions
      description: "\n<p>One of the <xref href=\"System.Reflection.CallingConventions\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the calling convention of the method.</p>\n"
  overridden: System.Reflection.MethodBase.CallingConvention
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.CallingConvention
- uid: System.Reflection.Emit.DynamicMethod.DeclaringType
  commentId: P:System.Reflection.Emit.DynamicMethod.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeclaringType
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 607
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the type that declares the method, which is always <strong>null</strong> for dynamic methods.</p>\n"
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>Always <strong>null</strong>.</p>\n"
  overridden: System.Reflection.MemberInfo.DeclaringType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.DeclaringType
- uid: System.Reflection.Emit.DynamicMethod.InitLocals
  commentId: P:System.Reflection.Emit.DynamicMethod.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.InitLocals
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InitLocals
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 833
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets or sets a value indicating whether the local variables in the method are zero-initialized. </p>\n"
  syntax:
    content: public bool InitLocals { get; set; }
    content.vb: Public Property InitLocals As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the local variables in the method are zero-initialized; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: DynamicMethod.InitLocals
- uid: System.Reflection.Emit.DynamicMethod.Name
  commentId: P:System.Reflection.Emit.DynamicMethod.Name
  id: Name
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 605
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the name of the dynamic method.</p>\n"
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The simple name of the method.</p>\n"
  overridden: System.Reflection.MemberInfo.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.Name
- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter
  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnParameter
  id: ReturnParameter
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReturnParameter
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 770
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the return parameter of the dynamic method.</p>\n"
  syntax:
    content: public override ParameterInfo ReturnParameter { get; }
    content.vb: Public Overrides ReadOnly Property ReturnParameter As ParameterInfo
    parameters: []
    return:
      type: System.Reflection.ParameterInfo
      description: "\n<p>Always <strong>null</strong>. </p>\n"
  overridden: System.Reflection.MethodInfo.ReturnParameter
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.ReturnParameter
- uid: System.Reflection.Emit.DynamicMethod.ReturnType
  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnType
  id: ReturnType
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.ReturnType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReturnType
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 768
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Gets the type of return value for the dynamic method.</p>\n"
  syntax:
    content: public override Type ReturnType { get; }
    content.vb: Public Overrides ReadOnly Property ReturnType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> representing the type of the return value of the current method; <xref href=\"System.Void\" data-throw-if-not-resolved=\"false\"></xref> if the method has no return type.</p>\n"
  overridden: System.Reflection.MethodInfo.ReturnType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.ReturnType
- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)
  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)
  id: CreateDelegate(System.Type)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateDelegate
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 531
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Completes the dynamic method and creates a delegate that can be used to execute it.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [ComVisible(true)]

      public override sealed Delegate CreateDelegate(Type delegateType)
    content.vb: "<SecuritySafeCritical>\n<ComVisible(True)>\nPublic NotOverridable Overrides Function CreateDelegate(delegateType As Type) As "
    parameters:
    - id: delegateType
      type: System.Type
      description: "\n<p>A delegate type whose signature matches that of the dynamic method. </p>\n"
    return:
      type: System.Delegate
      description: "\n<p>A delegate of the specified type, which can be used to execute the dynamic method.</p>\n"
  overridden: System.Reflection.MethodInfo.CreateDelegate(System.Type)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The dynamic method has no method body.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  nameWithType: DynamicMethod.CreateDelegate(Type)
- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)
  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)
  id: CreateDelegate(System.Type,System.Object)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateDelegate
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 547
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Completes the dynamic method and creates a delegate that can be used to execute it, specifying the delegate type and an object the delegate is bound to.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [ComVisible(true)]

      public override sealed Delegate CreateDelegate(Type delegateType, object target)
    content.vb: "<SecuritySafeCritical>\n<ComVisible(True)>\nPublic NotOverridable Overrides Function CreateDelegate(delegateType As Type, target As Object) As "
    parameters:
    - id: delegateType
      type: System.Type
      description: "\n<p>A delegate type whose signature matches that of the dynamic method, minus the first parameter.</p>\n"
    - id: target
      type: System.Object
      description: "\n<p>An object the delegate is bound to. Must be of the same type as the first parameter of the dynamic method. </p>\n"
    return:
      type: System.Delegate
      description: "\n<p>A delegate of the specified type, which can be used to execute the dynamic method with the specified target object.</p>\n"
  overridden: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The dynamic method has no method body.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>target</em> is not the same type as the first parameter of the dynamic method, and is not assignable to that type.</p>\n<p>-or-</p>\n<p>\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  nameWithType: DynamicMethod.CreateDelegate(Type, Object)
- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator
  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetILGenerator
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 817
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a Microsoft intermediate language (MSIL) generator for the method with a default MSIL stream size of 64 bytes.</p>\n"
  syntax:
    content: public ILGenerator GetILGenerator()
    content.vb: Public Function GetILGenerator As ILGenerator
    return:
      type: System.Reflection.Emit.ILGenerator
      description: "\n<p>An <xref href=\"System.Reflection.Emit.ILGenerator\" data-throw-if-not-resolved=\"false\"></xref> object for the method.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DynamicMethod.GetILGenerator()
- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetILGenerator
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 821
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns a Microsoft intermediate language (MSIL) generator for the method with the specified MSIL stream size.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public ILGenerator GetILGenerator(int streamSize)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function GetILGenerator(streamSize As Integer) As ILGenerator
    parameters:
    - id: streamSize
      type: System.Int32
      description: "\n<p>The size of the MSIL stream, in bytes. </p>\n"
    return:
      type: System.Reflection.Emit.ILGenerator
      description: "\n<p>An <xref href=\"System.Reflection.Emit.ILGenerator\" data-throw-if-not-resolved=\"false\"></xref> object for the method, with the specified MSIL stream size.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DynamicMethod.GetILGenerator(Int32)
- uid: System.Reflection.Emit.DynamicMethod.GetParameters
  commentId: M:System.Reflection.Emit.DynamicMethod.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.GetParameters()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetParameters
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 622
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns the parameters of the dynamic method.</p>\n"
  syntax:
    content: public override ParameterInfo[] GetParameters()
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
    return:
      type: System.Reflection.ParameterInfo[]
      description: "\n<p>An array of <xref href=\"System.Reflection.ParameterInfo\" data-throw-if-not-resolved=\"false\"></xref> objects that represent the parameters of the dynamic method.</p>\n"
  overridden: System.Reflection.MethodBase.GetParameters
  seealso:
  - type: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
    commentId: M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DynamicMethod.GetParameters()
- uid: System.Reflection.Emit.DynamicMethod.ToString
  commentId: M:System.Reflection.Emit.DynamicMethod.ToString
  id: ToString
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs
    startLine: 603
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  summary: "\n<p>Returns the signature of the method, represented as a string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representing the method signature.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DynamicMethod.ToString()
- uid: System.Reflection.Emit.DynamicMethod.MethodImplementationFlags
  commentId: P:System.Reflection.Emit.DynamicMethod.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.Emit.DynamicMethod.MethodImplementationFlags
  type: Property
  source:
    remote:
      path: src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MethodImplementationFlags
    path: src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.Manual.cs
    startLine: 12
  assemblies:
  - System.Reflection.Emit.Lightweight
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodImplAttributes MethodImplementationFlags { get; }
    content.vb: Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
  overridden: System.Reflection.MethodBase.MethodImplementationFlags
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: DynamicMethod.MethodImplementationFlags
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo
  nameWithType: MemberInfo
  commentId: T:System.Reflection.MemberInfo
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase
  nameWithType: MethodBase
  commentId: T:System.Reflection.MethodBase
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodInfo
  nameWithType: MethodInfo
  commentId: T:System.Reflection.MethodInfo
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  commentId: T:System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MemberInfo
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._MemberInfo
  nameWithType: _MemberInfo
  commentId: T:System.Runtime.InteropServices._MemberInfo
- uid: System.Runtime.InteropServices._MethodBase
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._MethodBase
  nameWithType: _MethodBase
  commentId: T:System.Runtime.InteropServices._MethodBase
- uid: System.Runtime.InteropServices._MethodInfo
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._MethodInfo
  nameWithType: _MethodInfo
  commentId: T:System.Runtime.InteropServices._MethodInfo
- uid: System.Reflection.MethodInfo.Equals(System.Object)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.Equals(System.Object)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.Equals(System.Object)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.Equals(Object)
  commentId: M:System.Reflection.MethodInfo.Equals(System.Object)
- uid: System.Reflection.MethodInfo.GetHashCode
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.MethodInfo.GetHashCode
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.GetHashCode
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.GetHashCode()
  commentId: M:System.Reflection.MethodInfo.GetHashCode
- uid: System.Reflection.MethodInfo.GetBaseDefinition
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.GetBaseDefinition()
  spec.csharp:
  - uid: System.Reflection.MethodInfo.GetBaseDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetBaseDefinition
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.GetBaseDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetBaseDefinition
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.GetBaseDefinition()
  commentId: M:System.Reflection.MethodInfo.GetBaseDefinition
- uid: System.Reflection.MethodInfo.GetGenericArguments
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.GetGenericArguments()
  spec.csharp:
  - uid: System.Reflection.MethodInfo.GetGenericArguments
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetGenericArguments
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.GetGenericArguments
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetGenericArguments
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.GetGenericArguments()
  commentId: M:System.Reflection.MethodInfo.GetGenericArguments
- uid: System.Reflection.MethodInfo.GetGenericMethodDefinition
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition()
  spec.csharp:
  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.GetGenericMethodDefinition()
  commentId: M:System.Reflection.MethodInfo.GetGenericMethodDefinition
- uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
  fullname.vb: System.Reflection.MethodInfo.MakeGenericMethod(System.Type())
  name.vb: MakeGenericMethod(Type())
  spec.csharp:
  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
    name: "XXX"
    fullName: System.Reflection.MethodInfo.MakeGenericMethod
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
    name: "XXX"
    fullName: System.Reflection.MethodInfo.MakeGenericMethod
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.MakeGenericMethod(Type[])
  nameWithType.vb: MethodInfo.MakeGenericMethod(Type())
  commentId: M:System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])
- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()
  name.vb: System.Runtime.InteropServices._MethodInfo.GetType()
  spec.csharp:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo._MethodInfo.GetType()
  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()
  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType
- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo._MethodInfo.GetTypeInfoCount(UInt32)
  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)
- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
- uid: System.Reflection.MethodInfo.MemberType
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.MemberType
  nameWithType: MethodInfo.MemberType
  commentId: P:System.Reflection.MethodInfo.MemberType
- uid: System.Reflection.MethodInfo.ReturnTypeCustomAttributes
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.ReturnTypeCustomAttributes
  nameWithType: MethodInfo.ReturnTypeCustomAttributes
  commentId: P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
  - name: "XXX"
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: "XXX"
    fullName: System.RuntimeMethodHandle
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
  - name: "XXX"
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: "XXX"
    fullName: System.RuntimeMethodHandle
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
  - name: "XXX"
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: "XXX"
    fullName: System.RuntimeMethodHandle
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: "XXX"
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodFromHandle
  - name: "XXX"
    fullName: (
  - uid: System.RuntimeMethodHandle
    name: "XXX"
    fullName: System.RuntimeMethodHandle
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: "XXX"
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
- uid: System.Reflection.MethodBase.GetCurrentMethod
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetCurrentMethod()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetCurrentMethod
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetCurrentMethod
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetCurrentMethod
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetCurrentMethod
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetCurrentMethod()
  commentId: M:System.Reflection.MethodBase.GetCurrentMethod
- uid: System.Reflection.MethodBase.GetMethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetMethodImplementationFlags()
  commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  spec.csharp:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: "XXX"
    fullName: System.Reflection.MethodBase.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: "XXX"
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: "XXX"
    fullName: System.Reflection.Binder
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: "XXX"
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
    name: "XXX"
    fullName: System.Reflection.MethodBase.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: "XXX"
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: "XXX"
    fullName: System.Reflection.Binder
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: "XXX"
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType.vb: MethodBase.Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])
  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())
  name.vb: Invoke(Object, Object())
  spec.csharp:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: "XXX"
    fullName: System.Reflection.MethodBase.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: "XXX"
    fullName: System.Reflection.MethodBase.Invoke
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.Invoke(Object, Object[])
  nameWithType.vb: MethodBase.Invoke(Object, Object())
  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
- uid: System.Reflection.MethodBase.GetMethodBody
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetMethodBody()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetMethodBody
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodBody
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetMethodBody
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetMethodBody
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetMethodBody()
  commentId: M:System.Reflection.MethodBase.GetMethodBody
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType()
  name.vb: System.Runtime.InteropServices._MethodBase.GetType()
  spec.csharp:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase._MethodBase.GetType()
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetType()
  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
- uid: System.Reflection.MethodBase.MethodHandle
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.MethodHandle
  nameWithType: MethodBase.MethodHandle
  commentId: P:System.Reflection.MethodBase.MethodHandle
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition
  nameWithType: MethodBase.IsGenericMethodDefinition
  commentId: P:System.Reflection.MethodBase.IsGenericMethodDefinition
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.ContainsGenericParameters
  nameWithType: MethodBase.ContainsGenericParameters
  commentId: P:System.Reflection.MethodBase.ContainsGenericParameters
- uid: System.Reflection.MethodBase.IsGenericMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsGenericMethod
  nameWithType: MethodBase.IsGenericMethod
  commentId: P:System.Reflection.MethodBase.IsGenericMethod
- uid: System.Reflection.MethodBase.IsSecurityCritical
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsSecurityCritical
  nameWithType: MethodBase.IsSecurityCritical
  commentId: P:System.Reflection.MethodBase.IsSecurityCritical
- uid: System.Reflection.MethodBase.IsSecuritySafeCritical
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical
  nameWithType: MethodBase.IsSecuritySafeCritical
  commentId: P:System.Reflection.MethodBase.IsSecuritySafeCritical
- uid: System.Reflection.MethodBase.IsSecurityTransparent
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsSecurityTransparent
  nameWithType: MethodBase.IsSecurityTransparent
  commentId: P:System.Reflection.MethodBase.IsSecurityTransparent
- uid: System.Reflection.MethodBase.IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsPublic
  nameWithType: MethodBase.IsPublic
  commentId: P:System.Reflection.MethodBase.IsPublic
- uid: System.Reflection.MethodBase.IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsPrivate
  nameWithType: MethodBase.IsPrivate
  commentId: P:System.Reflection.MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsFamily
  nameWithType: MethodBase.IsFamily
  commentId: P:System.Reflection.MethodBase.IsFamily
- uid: System.Reflection.MethodBase.IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsAssembly
  nameWithType: MethodBase.IsAssembly
  commentId: P:System.Reflection.MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly
  nameWithType: MethodBase.IsFamilyAndAssembly
  commentId: P:System.Reflection.MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly
  nameWithType: MethodBase.IsFamilyOrAssembly
  commentId: P:System.Reflection.MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsStatic
  nameWithType: MethodBase.IsStatic
  commentId: P:System.Reflection.MethodBase.IsStatic
- uid: System.Reflection.MethodBase.IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsFinal
  nameWithType: MethodBase.IsFinal
  commentId: P:System.Reflection.MethodBase.IsFinal
- uid: System.Reflection.MethodBase.IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsVirtual
  nameWithType: MethodBase.IsVirtual
  commentId: P:System.Reflection.MethodBase.IsVirtual
- uid: System.Reflection.MethodBase.IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsHideBySig
  nameWithType: MethodBase.IsHideBySig
  commentId: P:System.Reflection.MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsAbstract
  nameWithType: MethodBase.IsAbstract
  commentId: P:System.Reflection.MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsSpecialName
  nameWithType: MethodBase.IsSpecialName
  commentId: P:System.Reflection.MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.IsConstructor
  nameWithType: MethodBase.IsConstructor
  commentId: P:System.Reflection.MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic
  name.vb: System.Runtime.InteropServices._MethodBase.IsPublic
  nameWithType: MethodBase._MethodBase.IsPublic
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate
  name.vb: System.Runtime.InteropServices._MethodBase.IsPrivate
  nameWithType: MethodBase._MethodBase.IsPrivate
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily
  name.vb: System.Runtime.InteropServices._MethodBase.IsFamily
  nameWithType: MethodBase._MethodBase.IsFamily
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly
  name.vb: System.Runtime.InteropServices._MethodBase.IsAssembly
  nameWithType: MethodBase._MethodBase.IsAssembly
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic
  name.vb: System.Runtime.InteropServices._MethodBase.IsStatic
  nameWithType: MethodBase._MethodBase.IsStatic
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal
  name.vb: System.Runtime.InteropServices._MethodBase.IsFinal
  nameWithType: MethodBase._MethodBase.IsFinal
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual
  name.vb: System.Runtime.InteropServices._MethodBase.IsVirtual
  nameWithType: MethodBase._MethodBase.IsVirtual
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig
  name.vb: System.Runtime.InteropServices._MethodBase.IsHideBySig
  nameWithType: MethodBase._MethodBase.IsHideBySig
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract
  name.vb: System.Runtime.InteropServices._MethodBase.IsAbstract
  nameWithType: MethodBase._MethodBase.IsAbstract
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName
  name.vb: System.Runtime.InteropServices._MethodBase.IsSpecialName
  nameWithType: MethodBase._MethodBase.IsSpecialName
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor
  name.vb: System.Runtime.InteropServices._MethodBase.IsConstructor
  nameWithType: MethodBase._MethodBase.IsConstructor
  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor
  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributes(Boolean)
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo.IsDefined(Type, Boolean)
  commentId: M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: "XXX"
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo.GetCustomAttributesData()
  commentId: M:System.Reflection.MemberInfo.GetCustomAttributesData
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()
  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetType()
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
- uid: System.Reflection.MemberInfo.ReflectedType
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfo.ReflectedType
  nameWithType: MemberInfo.ReflectedType
  commentId: P:System.Reflection.MemberInfo.ReflectedType
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo.CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  commentId: P:System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo.MetadataToken
  nameWithType: MemberInfo.MetadataToken
  commentId: P:System.Reflection.MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo.Module
  nameWithType: MemberInfo.Module
  commentId: P:System.Reflection.MemberInfo.Module
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken
  parent: System.Reflection.MemberInfoExtensions
  definition: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  name: "XXX"
  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken()
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfoExtensions.HasMetadataToken()
  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken
  parent: System.Reflection.MemberInfoExtensions
  definition: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  name: "XXX"
  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken()
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfoExtensions.GetMetadataToken()
  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition
  parent: System.Reflection.MethodInfoExtensions
  definition: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
  name: "XXX"
  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition()
  spec.csharp:
  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition
    name: "XXX"
    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfoExtensions.GetBaseDefinition()
  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()
  name.vb: GetCustomAttribute(Of T)()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Boolean)
  name.vb: GetCustomAttribute(Of T)(Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()
  name.vb: GetCustomAttributes(Of T)()
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Boolean)
  name.vb: GetCustomAttributes(Of T)(Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MemberInfoExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfoExtensions
  nameWithType: MemberInfoExtensions
  commentId: T:System.Reflection.MemberInfoExtensions
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
- uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfoExtensions.GetBaseDefinition(MethodInfo)
  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)
- uid: System.Reflection.MethodInfoExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodInfoExtensions
  nameWithType: MethodInfoExtensions
  commentId: T:System.Reflection.MethodInfoExtensions
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions
  nameWithType: CustomAttributeExtensions
  commentId: T:System.Reflection.CustomAttributeExtensions
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttribute(Of T)(MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttributes(Of T)(MemberInfo)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)
  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)
  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Reflection.CustomAttributeExtensions.IsDefined
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition(MethodInfo)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodAttributes
  nameWithType: MethodAttributes
  commentId: T:System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.CallingConventions
  nameWithType: CallingConventions
  commentId: T:System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Type[]
  name: "XXX"
  fullName: System.Type[]
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: "XXX"
    fullName: ()
  nameWithType: Type[]
  nameWithType.vb: Type()
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.Module
  nameWithType: Module
  commentId: T:System.Reflection.Module
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Reflection.MethodBase.Attributes
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.Attributes
  nameWithType: MethodBase.Attributes
  commentId: P:System.Reflection.MethodBase.Attributes
- uid: System.Reflection.MethodBase.CallingConvention
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.CallingConvention
  nameWithType: MethodBase.CallingConvention
  commentId: P:System.Reflection.MethodBase.CallingConvention
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo.DeclaringType
  nameWithType: MemberInfo.DeclaringType
  commentId: P:System.Reflection.MemberInfo.DeclaringType
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo.Name
  nameWithType: MemberInfo.Name
  commentId: P:System.Reflection.MemberInfo.Name
- uid: System.Reflection.MethodInfo.ReturnParameter
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.ReturnParameter
  nameWithType: MethodInfo.ReturnParameter
  commentId: P:System.Reflection.MethodInfo.ReturnParameter
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.ParameterInfo
  nameWithType: ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
- uid: System.Reflection.MethodInfo.ReturnType
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.ReturnType
  nameWithType: MethodInfo.ReturnType
  commentId: P:System.Reflection.MethodInfo.ReturnType
- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.CreateDelegate
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.CreateDelegate
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.CreateDelegate(Type)
  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Delegate
  nameWithType: Delegate
  commentId: T:System.Delegate
- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)
  parent: System.Reflection.MethodInfo
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type, System.Object)
  spec.csharp:
  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.CreateDelegate
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)
    name: "XXX"
    fullName: System.Reflection.MethodInfo.CreateDelegate
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: MethodInfo.CreateDelegate(Type, Object)
  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.Emit.ILGenerator
  nameWithType: ILGenerator
  commentId: T:System.Reflection.Emit.ILGenerator
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Reflection.MethodBase.GetParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.GetParameters()
  spec.csharp:
  - uid: System.Reflection.MethodBase.GetParameters
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetParameters
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.MethodBase.GetParameters
    name: "XXX"
    fullName: System.Reflection.MethodBase.GetParameters
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: MethodBase.GetParameters()
  commentId: M:System.Reflection.MethodBase.GetParameters
- uid: System.Reflection.ParameterInfo[]
  name: "XXX"
  fullName: System.Reflection.ParameterInfo[]
  fullname.vb: System.Reflection.ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
  - name: "XXX"
    fullName: ()
  nameWithType: ParameterInfo[]
  nameWithType.vb: ParameterInfo()
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Reflection.MethodBase.MethodImplementationFlags
  parent: System.Reflection.MethodBase
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodBase.MethodImplementationFlags
  nameWithType: MethodBase.MethodImplementationFlags
  commentId: P:System.Reflection.MethodBase.MethodImplementationFlags
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MethodImplAttributes
  nameWithType: MethodImplAttributes
  commentId: T:System.Reflection.MethodImplAttributes
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
