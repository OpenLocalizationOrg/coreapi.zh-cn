items:
- uid: System.ComponentModel.RefreshEventArgs
  commentId: T:System.ComponentModel.RefreshEventArgs
  id: RefreshEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  - System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  - System.ComponentModel.RefreshEventArgs.ComponentChanged
  - System.ComponentModel.RefreshEventArgs.TypeChanged
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RefreshEventArgs
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides data for the <xref href=\"System.ComponentModel.TypeDescriptor.Refreshed\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
  syntax:
    content: 'public class RefreshEventArgs : EventArgs'
    content.vb: >-
      Public Class RefreshEventArgs
          Inherits EventArgs
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: RefreshEventArgs
- uid: System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  commentId: M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventArgs.RefreshEventArgs(System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 22
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the component that has changed.</p>\n"
  syntax:
    content: public RefreshEventArgs(object componentChanged)
    content.vb: Public Sub New(componentChanged As Object)
    parameters:
    - id: componentChanged
      type: System.Object
      description: "\n<p>The component that changed. </p>\n"
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: RefreshEventArgs.RefreshEventArgs(Object)
- uid: System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  commentId: M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventArgs.RefreshEventArgs(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the type of component that has changed.</p>\n"
  syntax:
    content: public RefreshEventArgs(Type typeChanged)
    content.vb: Public Sub New(typeChanged As Type)
    parameters:
    - id: typeChanged
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that changed. </p>\n"
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: RefreshEventArgs.RefreshEventArgs(Type)
- uid: System.ComponentModel.RefreshEventArgs.ComponentChanged
  commentId: P:System.ComponentModel.RefreshEventArgs.ComponentChanged
  id: ComponentChanged
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventArgs.ComponentChanged
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComponentChanged
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the component that changed its properties, events, or extenders.</p>\n"
  syntax:
    content: public object ComponentChanged { get; }
    content.vb: Public ReadOnly Property ComponentChanged As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The component that changed its properties, events, or extenders, or <strong>null</strong> if all components of the same type have changed.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: RefreshEventArgs.ComponentChanged
- uid: System.ComponentModel.RefreshEventArgs.TypeChanged
  commentId: P:System.ComponentModel.RefreshEventArgs.TypeChanged
  id: TypeChanged
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventArgs.TypeChanged
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeChanged
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that changed its properties or events.</p>\n"
  syntax:
    content: public Type TypeChanged { get; }
    content.vb: Public ReadOnly Property TypeChanged As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that changed its properties or events.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: RefreshEventArgs.TypeChanged
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.EventArgs
  nameWithType: EventArgs
  commentId: T:System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: "XXX"
  fullName: System.EventArgs.Empty
  nameWithType: EventArgs.Empty
  commentId: F:System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
