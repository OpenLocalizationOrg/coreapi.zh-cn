items:
- uid: Microsoft.VisualBasic.CompilerServices.Operators
  commentId: T:Microsoft.VisualBasic.CompilerServices.Operators
  id: Operators
  parent: Microsoft.VisualBasic.CompilerServices
  children:
  - Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: Operators
  fullName: Microsoft.VisualBasic.CompilerServices.Operators
  type: Class
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Operators
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 150
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Provides late-bound math operators, such as <xref href=\"Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>, which the Visual Basic compiler uses internally. </p>\n"
  syntax:
    content: public sealed class Operators
    content.vb: Public NotInheritable Class Operators
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: Operators
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  id: AddObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: AddObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 154
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object AddObject(object Left, object Right)
    content.vb: Public Shared Function AddObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxx xx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.AddObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  id: AndObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: AndObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AndObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 155
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx $xxxxxx$Xxx$$xxxxxx$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object AndObject(object Left, object Right)
    content.vb: Public Shared Function AndObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxxxxxxx$ $xxxxxx$Xxxx$$xxxxxx$ xx xxxx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$ xxxxxxxx xx $xxxxxx$Xxxx$$xxxxxx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$. Xxx xxxxxxx xxxxxxxxxx$ 0 xx xxxx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$ xxxxxxxx xx 0$ xxxxxxxxx$ 0.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.AndObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 156
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectEqual(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$ xxx xxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectGreater(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectGreater
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 157
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxx$xxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectGreater(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectGreater(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xx xxxxxxx xxxx $xx$Xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectGreater(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectGreaterEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 158
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxx$xxxx xx xxxxx$xx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectGreaterEqual(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx $xx$Xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectGreaterEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  id: CompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectLess(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectLess
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 159
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxx$xxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectLess(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectLess(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xx xxxx xxxx $xx$Xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectLess(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectLessEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectLessEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 160
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxx$xxxx xx xxxxx$xx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectLessEqual(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xx xxxx xxxx xx xxxxx xx $xx$Xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectLessEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareObjectNotEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareObjectNotEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 161
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxx$xxxxx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function CompareObjectNotEqual(Left As Object, Right As Object, TextCompare As Boolean) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$$x$xxxxxx$Xxxx$$xxxxxx$ xx $xx$Xxxx$$xx$ xx xxx xxxxx xx $xx$Xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareObjectNotEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  id: CompareString(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: CompareString(String, String, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareString
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 162
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxx xxxxxx xx xxxx xxxxxx xxxxxxxxxx xxxx xxxxx xxx xxxxxxx.$$x$$x"
  syntax:
    content: public static int CompareString(string Left, string Right, bool TextCompare)
    content.vb: Public Shared Function CompareString(Left As String, Right As String, TextCompare As Boolean) As Integer
    parameters:
    - id: Left
      type: System.String
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxx$$xxxxxx$ xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.String
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxx$$xxxxxx$ xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Int32
      description: "$x$x$Xxxxx $$x$$x$x$Xxxxxxxxx $$x$$x$xxxxx$$xxxxx$$xx$$xx$$x$x$$0 $$x$$x$$xx$$xx$$x$x$$x$xx$Xxxx$$xx$ xx xxxx xxxx $xx$Xxxxx$$xx$. $$x$$x$$xx$$$xx$$xx$$xx$$x$x$0$$x$$x$$xx$$xx$$x$x$$x$xx$Xxxx$$xx$ xx xxxxx xx $xx$Xxxxx$$xx$. $$x$$x$$xx$$$xx$$xx$$xx$$x$x$0 $$x$$x$$xx$$xx$$x$x$$x$xx$Xxxx$$xx$ xx xxxxxxx xxxx $xx$Xxxxx$$xx$. $$x$$x$$xx$$$xx$$$xxxxx$$$xxxxx$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.CompareString(String, String, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  id: ConcatenateObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConcatenateObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConcatenateObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 163
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object ConcatenateObject(object Left, object Right)
    content.vb: Public Shared Function ConcatenateObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$X xxxxxx xxxxxxxxxxxx xxx xxxxxxxxxxxxx xx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConcatenateObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 164
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectEqual(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectGreater(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectGreater
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 165
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxxxxxx$xxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectGreater(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxxxxxx$xxxx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectGreater(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectGreaterEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 166
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxxxxxx$xxxx xx xxxxx$xx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectGreaterEqual(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxxxxxx$xxxx xx xxxxx$xx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectLess(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectLess
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 167
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxxx$xxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectLess(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxxx$xxxx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectLess(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectLessEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 168
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxxx$xxxx xx xxxxx$xx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectLessEqual(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxxx$xxxx xx xxxxx$xx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectLessEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConditionalCompareObjectNotEqual
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 169
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx xxxxxxxxxx Xxxxxx Xxxxx xxx$xxxxx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare)
    content.vb: Public Shared Function ConditionalCompareObjectNotEqual(Left As Object, Right As Object, TextCompare As Boolean) As Boolean
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxxxxx.$$x$$x"
    - id: TextCompare
      type: System.Boolean
      description: "$x$x$Xxxxxxxx. $xxxxxx$Xxxx$$xxxxxx$ xx xxxxxxx x xxxx$xxxxxxxxxxx xxxxxx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxx xxxxxx xx xxx xxxxxxxxxx xxx$xxxxx xxxxxxxx. $xxxxxx$Xxxxx$$xxxxxx$ xx xxxxxxxx xxxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ConditionalCompareObjectNotEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  id: DivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: DivideObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DivideObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 170
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object DivideObject(object Left, object Right)
    content.vb: Public Shared Function DivideObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxx xxxxxxxx xx $xx$Xxxx$$xx$ xxxxxxx xx $xx$Xxxxx$$xx$$ xxxxxxxxx xxx xxxxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.DivideObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  id: ExponentObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ExponentObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExponentObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 171
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object ExponentObject(object Left, object Right)
    content.vb: Public Shared Function ExponentObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxx xx $xx$Xxxx$$xx$ xxxxxx xx xxx xxxxx xx $xx$Xxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ExponentObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  id: IntDivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: IntDivideObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IntDivideObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 172
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Represents the Visual Basic integer division (\\) operator.</p>\n"
  syntax:
    content: public static object IntDivideObject(object Left, object Right)
    content.vb: Public Shared Function IntDivideObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxx xxxxxxxx xx $xx$Xxxx$$xx$ xxxxxxx xx $xx$Xxxxx$$xx$$ xxxxx xxxxxxxx xxx xxxxxxxxx xxx xxxxxxx xxxx xxx xxxxxxx xxxxxxx.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.IntDivideObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  id: LeftShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: LeftShiftObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LeftShiftObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 173
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxxxx xxxx xxxxx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object LeftShiftObject(object Operand, object Amount)
    content.vb: Public Shared Function LeftShiftObject(Operand As Object, Amount As Object) As Object
    parameters:
    - id: Operand
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxxxxxxx xxxxxxx xxxxxxxxxx. Xxx xxx xxxxxxx xx xx xxxxxxx. Xxx xxxx xxxx xxxx xx xx xxxxxxxx xxxx $$xxxxxx$XXxxx$$xxxxxx$$ $xxxxxx$Xxxx$$xxxxxx$$ $xxxxxx$Xxxxx$$xxxxxx$$ $xxxxxx$XXxxxx$$xxxxxx$$ $xxxxxx$Xxxxxxx$$xxxxxx$$ $xxxxxx$XXxxxxxx$$xxxxxx$$ $xxxxxx$Xxxx$$xxxxxx$$ xx $xxxxxx$XXxxx$$xxxxxx$$.$$x$$x"
    - id: Amount
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxxxxxx xxxxxxxxxx. Xxx xxxxxx xx xxxx xx xxxxx xxx xxx xxxxxxx. Xxx xxxx xxxx xxxx xx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxx xx $xxxxxx$Xxxxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xx xxxxxxxx xxxxxxx xxxxx. Xxx xxxxxx xx xxxxxxxx xxx xxx xxxxxxx. Xxx xxxx xxxx xx xxx xxxx xx xxxx xx $xx$Xxxxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.LeftShiftObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  id: ModObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: ModObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 174
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx $xxxxxx$Xxx$$xxxxxx$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object ModObject(object Left, object Right)
    content.vb: Public Shared Function ModObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxxxx xxxxx $xx$Xxxx$$xx$ xx xxxxxxx xx $xx$Xxxxx$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.ModObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  id: MultiplyObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: MultiplyObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MultiplyObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 175
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object MultiplyObject(object Left, object Right)
    content.vb: Public Shared Function MultiplyObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxx xx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.MultiplyObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  id: NegateObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: NegateObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NegateObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 176
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxx xxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object NegateObject(object Operand)
    content.vb: Public Shared Function NegateObject(Operand As Object) As Object
    parameters:
    - id: Operand
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxxx xxxxx xx $xx$Xxxxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.NegateObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  id: NotObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: NotObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 177
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx $xxxxxx$Xxx$$xxxxxx$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object NotObject(object Operand)
    content.vb: Public Shared Function NotObject(Operand As Object) As Object
    parameters:
    - id: Operand
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$ xx $xx$Xxxxxxx$$xx$ xx $xxxxxx$Xxxx$$xxxxxx$$ xxxxxxxxx$ $xxxxxx$Xxxx$$xxxxxx$. Xxx xxxxxxx xxxxxxxxxx$ 0 xx $xx$Xxxxxxx$$xx$ xx 0$ xxxxxxxxx$ 0.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.NotObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  id: OrObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: OrObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OrObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 178
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx $xxxxxx$Xx$$xxxxxx$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object OrObject(object Left, object Right)
    content.vb: Public Shared Function OrObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxxxxxxx$ $xxxxxx$Xxxxx$$xxxxxx$ xx xxxx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$ xxxxxxxx xx $xxxxxx$Xxxxx$$xxxxxx$$ xxxxxxxxx$ $xxxxxx$Xxxx$$xxxxxx$. Xxx xxxxxxx xxxxxxxxxx$ 0 xx xxxx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$ xxxxxxxx xx 0$ xxxxxxxxx$ 0.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.OrObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  id: PlusObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: PlusObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PlusObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 179
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxx xxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object PlusObject(object Operand)
    content.vb: Public Shared Function PlusObject(Operand As Object) As Object
    parameters:
    - id: Operand
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxx xx $xx$Xxxxxxx$$xx$. $Xxx xxxx xx xxx $xx$Xxxxxxx$$xx$ xx xxxxxxxxx.$$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.PlusObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  id: RightShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: RightShiftObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RightShiftObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 180
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxxxx xxxxx xxxxx $$$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object RightShiftObject(object Operand, object Amount)
    content.vb: Public Shared Function RightShiftObject(Operand As Object, Amount As Object) As Object
    parameters:
    - id: Operand
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxxxxxxx xxxxxxx xxxxxxxxxx. Xxx xxx xxxxxxx xx xx xxxxxxx. Xxx xxxx xxxx xxxx xx xx xxxxxxxx xxxx $$xxxxxx$XXxxx$$xxxxxx$$ $xxxxxx$Xxxx$$xxxxxx$$ $xxxxxx$Xxxxx$$xxxxxx$$ $xxxxxx$XXxxxx$$xxxxxx$$ $xxxxxx$Xxxxxxx$$xxxxxx$$ $xxxxxx$XXxxxxxx$$xxxxxx$$ $xxxxxx$Xxxx$$xxxxxx$$ xx $xxxxxx$XXxxx$$xxxxxx$$.$$x$$x"
    - id: Amount
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxxxxxx xxxxxxxxxx. Xxx xxxxxx xx xxxx xx xxxxx xxx xxx xxxxxxx. Xxx xxxx xxxx xxxx xx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxx xx $xxxxxx$Xxxxxxx$$xxxxxx$.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xx xxxxxxxx xxxxxxx xxxxx. Xxx xxxxxx xx xxxxxxxx xxx xxx xxxxxxx. Xxx xxxx xxxx xx xxx xxxx xx xxxx xx $xx$Xxxxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.RightShiftObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  id: SubtractObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: SubtractObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SubtractObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 181
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx xxxxxxxxxxx $$$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object SubtractObject(object Left, object Right)
    content.vb: Public Shared Function SubtractObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx. $$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxxxxx xxxxxxx $xx$Xxxx$$xx$ xxx $xx$Xxxxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.SubtractObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  id: XorObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  - vb
  name: XorObject(Object, Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XorObject
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 182
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "$x$x$Xxxxxxxxxx xxx Xxxxxx Xxxxx $xxxxxx$Xxx$$xxxxxx$ xxxxxxxx.$$x$$x"
  syntax:
    content: public static object XorObject(object Left, object Right)
    content.vb: Public Shared Function XorObject(Left As Object, Right As Object) As Object
    parameters:
    - id: Left
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    - id: Right
      type: System.Object
      description: "$x$x$Xxxxxxxx. Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxxxxxxx.$$x$$x"
    return:
      type: System.Object
      description: "$x$x$X $xxxxxx$Xxxxxxx$$xxxxxx$ xx xxxxxxx xxxxx. Xxx x $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxxxxxxx$ xxx xxxxxx xxxxx xx xxx xxxxxxx xxxxxxxxx $xxxxxxxxx xxxxxxx xxxxxxxxxxx$ xx xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxxx. Xxx xxxxxxx $xxxxxxx$ xxxxxxxxxx$ xxx xxxxxx xxxxx xx x xxxxxxx xxxxx xxxx xxxxxxxxxx xxx xxxxxxx xxxxxxxxx $xxxxxxxxx xxxxxxx xxxxxxxxxxx$ xx xxx xxxxxxx xxx xxxxxxxx. Xxx xxxx xxxxxxxxxxx$ xxx Xxx Xxxxxxxx $Xxxxxx Xxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Operators.XorObject(Object, Object)
references:
- uid: Microsoft.VisualBasic.CompilerServices
  isExternal: false
  name: Microsoft.VisualBasic.CompilerServices
  fullName: Microsoft.VisualBasic.CompilerServices
  commentId: N:Microsoft.VisualBasic.CompilerServices
  nameWithType: Microsoft.VisualBasic.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
