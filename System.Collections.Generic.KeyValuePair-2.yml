items:
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  id: KeyValuePair`2
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  - System.Collections.Generic.KeyValuePair`2.Key
  - System.Collections.Generic.KeyValuePair`2.ToString
  - System.Collections.Generic.KeyValuePair`2.Value
  langs:
  - csharp
  - vb
  name: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: KeyValuePair
    path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "$x$x$Xxxxxxx x xxx$xxxxx xxxx xxxx xxx xx xxx xx xxxxxxxxx.$$x$$x"
  syntax:
    content: >-
      [Serializable]

      public struct KeyValuePair<TKey, TValue>
    content.vb: >-
      <Serializable>

      Public Structure KeyValuePair(Of TKey, TValue)
    typeParameters:
    - id: TKey
      description: "$x$x$Xxx xxxx xx xxx xxx.$$x$$x"
    - id: TValue
      description: "$x$x$Xxx xxxx xx xxx xxxxx.$$x$$x"
  seealso:
  - type: System.Collections.Generic.IDictionary`2
    commentId: T:System.Collections.Generic.IDictionary`2
  - type: System.Collections.Generic.Dictionary`2.Enumerator
    commentId: T:System.Collections.Generic.Dictionary`2.Enumerator
  - type: System.Collections.DictionaryEntry
    commentId: T:System.Collections.DictionaryEntry
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  nameWithType: KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
- uid: System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  commentId: M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  - vb
  name: KeyValuePair(TKey, TValue)
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.KeyValuePair`2\" data-throw-if-not-resolved=\"false\"></xref> structure with the specified key and value.</p>\n"
  syntax:
    content: public KeyValuePair(TKey key, TValue value)
    content.vb: Public Sub New(key As TKey, value As TValue)
    parameters:
    - id: key
      type: '{TKey}'
      description: "$x$x$Xxx xxxxxx xxxxxxx xx xxxx xxx$xxxxx xxxx.$$x$$x"
    - id: value
      type: '{TValue}'
      description: "$x$x$Xxx xxxxxxxxxx xxxxxxxxxx xxxx $xx$xxx$$xx$.$$x$$x"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue).KeyValuePair(TKey, TValue)
  nameWithType: KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)
  nameWithType.vb: KeyValuePair(Of TKey, TValue).KeyValuePair(TKey, TValue)
- uid: System.Collections.Generic.KeyValuePair`2.Key
  commentId: P:System.Collections.Generic.KeyValuePair`2.Key
  id: Key
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>.Key
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Key
    path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
    startLine: 33
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "$x$x$Xxxx xxx xxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  syntax:
    content: public TKey Key { get; }
    content.vb: Public ReadOnly Property Key As TKey
    parameters: []
    return:
      type: '{TKey}'
      description: "\n<p>A <em>TKey</em> that is the key of the <xref href=\"System.Collections.Generic.KeyValuePair`2\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue).Key
  nameWithType: KeyValuePair<TKey, TValue>.Key
  nameWithType.vb: KeyValuePair(Of TKey, TValue).Key
- uid: System.Collections.Generic.KeyValuePair`2.Value
  commentId: P:System.Collections.Generic.KeyValuePair`2.Value
  id: Value
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
    startLine: 37
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "$x$x$Xxxx xxx xxxxx xx xxx xxx$xxxxx xxxx.$$x$$x"
  syntax:
    content: public TValue Value { get; }
    content.vb: Public ReadOnly Property Value As TValue
    parameters: []
    return:
      type: '{TValue}'
      description: "\n<p>A <em>TValue</em> that is the value of the <xref href=\"System.Collections.Generic.KeyValuePair`2\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue).Value
  nameWithType: KeyValuePair<TKey, TValue>.Value
  nameWithType.vb: KeyValuePair(Of TKey, TValue).Value
- uid: System.Collections.Generic.KeyValuePair`2.ToString
  commentId: M:System.Collections.Generic.KeyValuePair`2.ToString
  id: ToString
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Collections/Generic/KeyValuePair.cs
    startLine: 41
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Returns a string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\" data-throw-if-not-resolved=\"false\"></xref>, using the string representations of the key and value.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\" data-throw-if-not-resolved=\"false\"></xref>, which includes the string representations of the key and value.</p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue).ToString()
  nameWithType: KeyValuePair<TKey, TValue>.ToString()
  nameWithType.vb: KeyValuePair(Of TKey, TValue).ToString()
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: '{TKey}'
  definition: TKey
  name: TKey
  fullName: TKey
  nameWithType: TKey
  commentId: '!:TKey'
- uid: '{TValue}'
  definition: TValue
  name: TValue
  fullName: TValue
  nameWithType: TValue
  commentId: '!:TValue'
- uid: TKey
  isExternal: false
  name: TKey
  fullName: TKey
  nameWithType: TKey
- uid: TValue
  isExternal: false
  name: TValue
  fullName: TValue
  nameWithType: TValue
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
