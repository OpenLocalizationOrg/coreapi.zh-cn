items:
- uid: System.AttributeUsageAttribute
  commentId: T:System.AttributeUsageAttribute
  id: AttributeUsageAttribute
  parent: System
  children:
  - System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  - System.AttributeUsageAttribute.AllowMultiple
  - System.AttributeUsageAttribute.Inherited
  - System.AttributeUsageAttribute.ValidOn
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.AttributeUsageAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/AttributeUsageAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AttributeUsageAttribute
    path: src/mscorlib/src/System/AttributeUsageAttribute.cs
    startLine: 16
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Specifies the usage of another attribute class. This class cannot be inherited.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [AttributeUsage(AttributeTargets.Class, Inherited = true)]

      [ComVisible(true)]

      public sealed class AttributeUsageAttribute : Attribute, _Attribute
    content.vb: >-
      <Serializable>

      <AttributeUsage(AttributeTargets.Class, Inherited:=True)>

      <ComVisible(True)>

      Public NotInheritable Class AttributeUsageAttribute
          Inherits Attribute
          Implements _Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.AttributeTargets
    commentId: T:System.AttributeTargets
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
    namedArguments:
    - name: "XXX"
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AttributeUsageAttribute
- uid: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  commentId: M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  id: '#ctor(System.AttributeTargets)'
  parent: System.AttributeUsageAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.AttributeUsageAttribute.AttributeUsageAttribute(System.AttributeTargets)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/AttributeUsageAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/AttributeUsageAttribute.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.AttributeUsageAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified list of <xref href=\"System.AttributeTargets\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.AttributeUsageAttribute.AllowMultiple\" data-throw-if-not-resolved=\"false\"></xref> value, and the <xref href=\"System.AttributeUsageAttribute.Inherited\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public AttributeUsageAttribute(AttributeTargets validOn)
    content.vb: Public Sub New(validOn As AttributeTargets)
    parameters:
    - id: validOn
      type: System.AttributeTargets
      description: "\n<p>The set of values combined using a bitwise OR operation to indicate which program elements are valid. </p>\n"
  seealso:
  - type: System.AttributeTargets
    commentId: T:System.AttributeTargets
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AttributeUsageAttribute.AttributeUsageAttribute(AttributeTargets)
- uid: System.AttributeUsageAttribute.AllowMultiple
  commentId: P:System.AttributeUsageAttribute.AllowMultiple
  id: AllowMultiple
  parent: System.AttributeUsageAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.AttributeUsageAttribute.AllowMultiple
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/AttributeUsageAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AllowMultiple
    path: src/mscorlib/src/System/AttributeUsageAttribute.cs
    startLine: 44
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</p>\n"
  syntax:
    content: public bool AllowMultiple { get; set; }
    content.vb: Public Property AllowMultiple As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if more than one instance is allowed to be specified; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: AttributeUsageAttribute.AllowMultiple
- uid: System.AttributeUsageAttribute.Inherited
  commentId: P:System.AttributeUsageAttribute.Inherited
  id: Inherited
  parent: System.AttributeUsageAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.AttributeUsageAttribute.Inherited
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/AttributeUsageAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Inherited
    path: src/mscorlib/src/System/AttributeUsageAttribute.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets or sets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</p>\n"
  syntax:
    content: public bool Inherited { get; set; }
    content.vb: Public Property Inherited As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the attribute can be inherited by derived classes and overriding members; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: AttributeUsageAttribute.Inherited
- uid: System.AttributeUsageAttribute.ValidOn
  commentId: P:System.AttributeUsageAttribute.ValidOn
  id: ValidOn
  parent: System.AttributeUsageAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.AttributeUsageAttribute.ValidOn
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/AttributeUsageAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ValidOn
    path: src/mscorlib/src/System/AttributeUsageAttribute.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</p>\n"
  syntax:
    content: public AttributeTargets ValidOn { get; }
    content.vb: Public ReadOnly Property ValidOn As AttributeTargets
    parameters: []
    return:
      type: System.AttributeTargets
      description: "\n<p>One or several <xref href=\"System.AttributeTargets\" data-throw-if-not-resolved=\"false\"></xref> values. The default is <strong>All</strong>.</p>\n"
  seealso:
  - type: System.AttributeTargets
    commentId: T:System.AttributeTargets
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: AttributeUsageAttribute.ValidOn
references:
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Attribute
  nameWithType: Attribute
  commentId: T:System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.Equals(Object)
  commentId: M:System.Attribute.Equals(System.Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: "XXX"
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.GetHashCode()
  commentId: M:System.Attribute.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.AttributeTargets
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.AttributeTargets
  nameWithType: AttributeTargets
  commentId: T:System.AttributeTargets
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
