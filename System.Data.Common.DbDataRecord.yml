items:
- uid: System.Data.Common.DbDataRecord
  commentId: T:System.Data.Common.DbDataRecord
  id: DbDataRecord
  parent: System.Data.Common
  children:
  - System.Data.Common.DbDataRecord.#ctor
  - System.Data.Common.DbDataRecord.FieldCount
  - System.Data.Common.DbDataRecord.GetBoolean(System.Int32)
  - System.Data.Common.DbDataRecord.GetByte(System.Int32)
  - System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataRecord.GetChar(System.Int32)
  - System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataRecord.GetData(System.Int32)
  - System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataRecord.GetDateTime(System.Int32)
  - System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataRecord.GetDecimal(System.Int32)
  - System.Data.Common.DbDataRecord.GetDouble(System.Int32)
  - System.Data.Common.DbDataRecord.GetFieldType(System.Int32)
  - System.Data.Common.DbDataRecord.GetFloat(System.Int32)
  - System.Data.Common.DbDataRecord.GetGuid(System.Int32)
  - System.Data.Common.DbDataRecord.GetInt16(System.Int32)
  - System.Data.Common.DbDataRecord.GetInt32(System.Int32)
  - System.Data.Common.DbDataRecord.GetInt64(System.Int32)
  - System.Data.Common.DbDataRecord.GetName(System.Int32)
  - System.Data.Common.DbDataRecord.GetOrdinal(System.String)
  - System.Data.Common.DbDataRecord.GetString(System.Int32)
  - System.Data.Common.DbDataRecord.GetValue(System.Int32)
  - System.Data.Common.DbDataRecord.GetValues(System.Object[])
  - System.Data.Common.DbDataRecord.IsDBNull(System.Int32)
  - System.Data.Common.DbDataRecord.Item(System.Int32)
  - System.Data.Common.DbDataRecord.Item(System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord
  type: Class
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbDataRecord
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 7
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Implements <xref href=\"System.Data.IDataRecord\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>, and provides data binding support for <xref href=\"System.Data.Common.DbEnumerator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public abstract class DbDataRecord : IDataRecord'
    content.vb: >-
      Public MustInherit Class DbDataRecord
          Implements IDataRecord
  inheritance:
  - System.Object
  implements:
  - System.Data.IDataRecord
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: DbDataRecord
- uid: System.Data.Common.DbDataRecord.#ctor
  commentId: M:System.Data.Common.DbDataRecord.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.DbDataRecord()
  type: Constructor
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 9
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.Common.DbDataRecord\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected DbDataRecord()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: DbDataRecord.DbDataRecord()
- uid: System.Data.Common.DbDataRecord.FieldCount
  commentId: P:System.Data.Common.DbDataRecord.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.FieldCount
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FieldCount
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 13
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates the number of fields within the current record. This property is read-only.</p>\n"
  syntax:
    content: public abstract int FieldCount { get; }
    content.vb: Public MustOverride ReadOnly Property FieldCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of fields within the current record.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Not connected to a data source to read from. </p>\n"
  implements:
  - System.Data.IDataRecord.FieldCount
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: DbDataRecord.FieldCount
- uid: System.Data.Common.DbDataRecord.Item(System.Int32)
  commentId: P:System.Data.Common.DbDataRecord.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 18
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.</p>\n"
  syntax:
    content: public abstract object this[int i] { get; }
    content.vb: Public MustOverride ReadOnly Property Item(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value at the specified column in its native format.</p>\n"
  implements:
  - System.Data.IDataRecord.Item(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: System.Data.Common.DbDataRecord.Item(System.Int32)
  name.vb: Item(Int32)
  nameWithType: DbDataRecord.Item[Int32]
  nameWithType.vb: DbDataRecord.Item(Int32)
- uid: System.Data.Common.DbDataRecord.Item(System.String)
  commentId: P:System.Data.Common.DbDataRecord.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 23
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates the value at the specified column in its native format given the column name. This property is read-only.</p>\n"
  syntax:
    content: public abstract object this[string name] { get; }
    content.vb: Public MustOverride ReadOnly Property Item(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The column name. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value at the specified column in its native format.</p>\n"
  implements:
  - System.Data.IDataRecord.Item(System.String)
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: System.Data.Common.DbDataRecord.Item(System.String)
  name.vb: Item(String)
  nameWithType: DbDataRecord.Item[String]
  nameWithType.vb: DbDataRecord.Item(String)
- uid: System.Data.Common.DbDataRecord.GetBoolean(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBoolean
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 28
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a Boolean.</p>\n"
  syntax:
    content: public abstract bool GetBoolean(int i)
    content.vb: Public MustOverride Function GetBoolean(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the Boolean is <strong>true</strong>; otherwise <strong>false</strong>.</p>\n"
  implements:
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetBoolean(Int32)
- uid: System.Data.Common.DbDataRecord.GetByte(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByte
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 30
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a byte.</p>\n"
  syntax:
    content: public abstract byte GetByte(int i)
    content.vb: Public MustOverride Function GetByte(i As Integer) As Byte
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetByte(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetByte(Int32)
- uid: System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBytes
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 32
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a byte array.</p>\n"
  syntax:
    content: public abstract long GetBytes(int i, long dataIndex, byte[] buffer, int bufferIndex, int length)
    content.vb: Public MustOverride Function GetBytes(i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal.</p>\n"
    - id: dataIndex
      type: System.Int64
      description: "\n<p>The index within the field from which to start the read operation.</p>\n"
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer into which to read the stream of bytes.</p>\n"
    - id: bufferIndex
      type: System.Int32
      description: "\n<p>The index for <em>buffer</em> to start the read operation.</p>\n"
    - id: length
      type: System.Int32
      description: "\n<p>The number of bytes to read.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Data.Common.DbDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  nameWithType: DbDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType.vb: DbDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: System.Data.Common.DbDataRecord.GetChar(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetChar(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChar
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 34
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a character.</p>\n"
  syntax:
    content: public abstract char GetChar(int i)
    content.vb: Public MustOverride Function GetChar(i As Integer) As Char
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Char
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetChar(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetChar(Int32)
- uid: System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChars
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 36
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a character array.</p>\n"
  syntax:
    content: public abstract long GetChars(int i, long dataIndex, char[] buffer, int bufferIndex, int length)
    content.vb: Public MustOverride Function GetChars(i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>Column ordinal. </p>\n"
    - id: dataIndex
      type: System.Int64
      description: "\n<p>Buffer to copy data into. </p>\n"
    - id: buffer
      type: System.Char[]
      description: "\n<p>Maximum length to copy into the buffer. </p>\n"
    - id: bufferIndex
      type: System.Int32
      description: "\n<p>Point to start from within the buffer. </p>\n"
    - id: length
      type: System.Int32
      description: "\n<p>Point to start from within the source data. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Data.Common.DbDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  nameWithType: DbDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType.vb: DbDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: System.Data.Common.DbDataRecord.GetData(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetData(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetData
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 79
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Not currently supported.</p>\n"
  syntax:
    content: public IDataReader GetData(int i)
    content.vb: Public Function GetData(i As Integer) As IDataReader
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>Not currently supported.</p>\n"
    return:
      type: System.Data.IDataReader
      description: "\n<p>Not currently supported.</p>\n"
  implements:
  - System.Data.IDataRecord.GetData(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DbDataRecord.GetData(Int32)
- uid: System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDataTypeName
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 47
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the name of the back-end data type.</p>\n"
  syntax:
    content: public abstract string GetDataTypeName(int i)
    content.vb: Public MustOverride Function GetDataTypeName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name of the back-end data type.</p>\n"
  implements:
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetDataTypeName(Int32)
- uid: System.Data.Common.DbDataRecord.GetDateTime(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTime
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 49
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public abstract DateTime GetDateTime(int i)
    content.vb: Public MustOverride Function GetDateTime(i As Integer) As Date
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetDateTime(Int32)
- uid: System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDbDataReader
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 39
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns a <xref href=\"System.Data.Common.DbDataReader\" data-throw-if-not-resolved=\"false\"></xref> object for the requested column ordinal that can be overridden with a provider-specific implementation.</p>\n"
  syntax:
    content: protected virtual DbDataReader GetDbDataReader(int i)
    content.vb: Protected Overridable Function GetDbDataReader(i As Integer) As DbDataReader
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal.</p>\n"
    return:
      type: System.Data.Common.DbDataReader
      description: "\n<p>A <xref href=\"System.Data.Common.DbDataReader\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: DbDataRecord.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataRecord.GetDecimal(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDecimal
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 51
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public abstract decimal GetDecimal(int i)
    content.vb: Public MustOverride Function GetDecimal(i As Integer) As Decimal
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetDecimal(Int32)
- uid: System.Data.Common.DbDataRecord.GetDouble(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDouble
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 53
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a double-precision floating-point number.</p>\n"
  syntax:
    content: public abstract double GetDouble(int i)
    content.vb: Public MustOverride Function GetDouble(i As Integer) As Double
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Double
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetDouble(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetDouble(Int32)
- uid: System.Data.Common.DbDataRecord.GetFieldType(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldType
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 55
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is the data type of the object.</p>\n"
  syntax:
    content: public abstract Type GetFieldType(int i)
    content.vb: Public MustOverride Function GetFieldType(i As Integer) As Type
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is the data type of the object.</p>\n"
  implements:
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetFieldType(Int32)
- uid: System.Data.Common.DbDataRecord.GetFloat(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetFloat(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFloat
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 57
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a single-precision floating-point number.</p>\n"
  syntax:
    content: public abstract float GetFloat(int i)
    content.vb: Public MustOverride Function GetFloat(i As Integer) As Single
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Single
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetFloat(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetFloat(Int32)
- uid: System.Data.Common.DbDataRecord.GetGuid(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetGuid(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGuid
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 59
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the GUID value of the specified field.</p>\n"
  syntax:
    content: public abstract Guid GetGuid(int i)
    content.vb: Public MustOverride Function GetGuid(i As Integer) As Guid
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The index of the field to return. </p>\n"
    return:
      type: System.Guid
      description: "\n<p>The GUID value of the specified field.</p>\n"
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  implements:
  - System.Data.IDataRecord.GetGuid(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetGuid(Int32)
- uid: System.Data.Common.DbDataRecord.GetInt16(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt16
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 61
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a 16-bit signed integer.</p>\n"
  syntax:
    content: public abstract short GetInt16(int i)
    content.vb: Public MustOverride Function GetInt16(i As Integer) As Short
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Int16
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetInt16(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetInt16(Int32)
- uid: System.Data.Common.DbDataRecord.GetInt32(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt32
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 63
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a 32-bit signed integer.</p>\n"
  syntax:
    content: public abstract int GetInt32(int i)
    content.vb: Public MustOverride Function GetInt32(i As Integer) As Integer
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetInt32(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetInt32(Int32)
- uid: System.Data.Common.DbDataRecord.GetInt64(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt64
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 65
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a 64-bit signed integer.</p>\n"
  syntax:
    content: public abstract long GetInt64(int i)
    content.vb: Public MustOverride Function GetInt64(i As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetInt64(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetInt64(Int32)
- uid: System.Data.Common.DbDataRecord.GetName(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetName
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 67
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the name of the specified column.</p>\n"
  syntax:
    content: public abstract string GetName(int i)
    content.vb: Public MustOverride Function GetName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetName(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetName(Int32)
- uid: System.Data.Common.DbDataRecord.GetOrdinal(System.String)
  commentId: M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetOrdinal(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetOrdinal
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 69
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the column ordinal, given the name of the column.</p>\n"
  syntax:
    content: public abstract int GetOrdinal(string name)
    content.vb: Public MustOverride Function GetOrdinal(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the column. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The column ordinal.</p>\n"
  implements:
  - System.Data.IDataRecord.GetOrdinal(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetOrdinal(String)
- uid: System.Data.Common.DbDataRecord.GetString(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetString
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 71
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value of the specified column as a string.</p>\n"
  syntax:
    content: public abstract string GetString(int i)
    content.vb: Public MustOverride Function GetString(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.String
      description: "\n<p>The value of the specified column.</p>\n"
  implements:
  - System.Data.IDataRecord.GetString(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetString(Int32)
- uid: System.Data.Common.DbDataRecord.GetValue(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 73
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the value at the specified column in its native format.</p>\n"
  syntax:
    content: public abstract object GetValue(int i)
    content.vb: Public MustOverride Function GetValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value to return.</p>\n"
  implements:
  - System.Data.IDataRecord.GetValue(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.GetValue(Int32)
- uid: System.Data.Common.DbDataRecord.GetValues(System.Object[])
  commentId: M:System.Data.Common.DbDataRecord.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.GetValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 75
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Populates an array of objects with the column values of the current record.</p>\n"
  syntax:
    content: public abstract int GetValues(object[] values)
    content.vb: Public MustOverride Function GetValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: "\n<p>An array of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to copy the attribute fields into. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of instances of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> in the array.</p>\n"
  implements:
  - System.Data.IDataRecord.GetValues(System.Object[])
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Data.Common.DbDataRecord.GetValues(System.Object())
  name.vb: GetValues(Object())
  nameWithType: DbDataRecord.GetValues(Object[])
  nameWithType.vb: DbDataRecord.GetValues(Object())
- uid: System.Data.Common.DbDataRecord.IsDBNull(System.Int32)
  commentId: M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataRecord
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.Common.DbDataRecord.IsDBNull(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDBNull
    path: src/System.Data.Common/src/System/Data/Common/DbDataRecord.cs
    startLine: 77
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Used to indicate nonexistent values.</p>\n"
  syntax:
    content: public abstract bool IsDBNull(int i)
    content.vb: Public MustOverride Function IsDBNull(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column ordinal. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified column is equivalent to <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref>; otherwise <strong>false</strong>.</p>\n"
  implements:
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DbDataRecord.IsDBNull(Int32)
references:
- uid: System.Data.Common
  isExternal: false
  name: "XXX"
  fullName: System.Data.Common
  nameWithType: System.Data.Common
  commentId: N:System.Data.Common
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Data.IDataRecord
  parent: System.Data
  isExternal: false
  name: "XXX"
  fullName: System.Data.IDataRecord
  nameWithType: IDataRecord
  commentId: T:System.Data.IDataRecord
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Data
  isExternal: false
  name: "XXX"
  fullName: System.Data
  nameWithType: System.Data
  commentId: N:System.Data
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: "XXX"
  fullName: System.Data.IDataRecord.FieldCount
  nameWithType: IDataRecord.FieldCount
  commentId: P:System.Data.IDataRecord.FieldCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.Item[System.Int32]
  fullname.vb: System.Data.IDataRecord.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.Item
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.Item
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.Item[Int32]
  nameWithType.vb: IDataRecord.Item(Int32)
  commentId: P:System.Data.IDataRecord.Item(System.Int32)
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.Item[System.String]
  fullname.vb: System.Data.IDataRecord.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: "XXX"
    fullName: System.Data.IDataRecord.Item
  - name: 'XXX'
    fullName: '['
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: "XXX"
    fullName: System.Data.IDataRecord.Item
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.Item[String]
  nameWithType.vb: IDataRecord.Item(String)
  commentId: P:System.Data.IDataRecord.Item(System.String)
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetBoolean(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetBoolean
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetBoolean
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetBoolean(Int32)
  commentId: M:System.Data.IDataRecord.GetBoolean(System.Int32)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetByte(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetByte
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetByte
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetByte(Int32)
  commentId: M:System.Data.IDataRecord.GetByte(System.Int32)
- uid: System.Byte
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetBytes
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetBytes
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType.vb: IDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  commentId: M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Byte[]
  name: "XXX"
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetChar(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetChar
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetChar
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetChar(Int32)
  commentId: M:System.Data.IDataRecord.GetChar(System.Int32)
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  fullname.vb: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetChars
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetChars
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType.vb: IDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)
  commentId: M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
- uid: System.Char[]
  name: "XXX"
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetData(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetData
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetData
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetData(Int32)
  commentId: M:System.Data.IDataRecord.GetData(System.Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: "XXX"
  fullName: System.Data.IDataReader
  nameWithType: IDataReader
  commentId: T:System.Data.IDataReader
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  commentId: M:System.Data.IDataRecord.GetDataTypeName(System.Int32)
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetDateTime(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDateTime
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDateTime
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetDateTime(Int32)
  commentId: M:System.Data.IDataRecord.GetDateTime(System.Int32)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: "XXX"
  fullName: System.Data.Common.DbDataReader
  nameWithType: DbDataReader
  commentId: T:System.Data.Common.DbDataReader
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetDecimal(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDecimal
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDecimal
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetDecimal(Int32)
  commentId: M:System.Data.IDataRecord.GetDecimal(System.Int32)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetDouble(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDouble
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetDouble
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetDouble(Int32)
  commentId: M:System.Data.IDataRecord.GetDouble(System.Int32)
- uid: System.Double
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetFieldType
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetFieldType
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetFieldType(Int32)
  commentId: M:System.Data.IDataRecord.GetFieldType(System.Int32)
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetFloat(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetFloat
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetFloat
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetFloat(Int32)
  commentId: M:System.Data.IDataRecord.GetFloat(System.Int32)
- uid: System.Single
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetGuid(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetGuid
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetGuid
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetGuid(Int32)
  commentId: M:System.Data.IDataRecord.GetGuid(System.Int32)
- uid: System.Guid
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Guid
  nameWithType: Guid
  commentId: T:System.Guid
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetInt16(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt16
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt16
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetInt16(Int32)
  commentId: M:System.Data.IDataRecord.GetInt16(System.Int32)
- uid: System.Int16
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int16
  nameWithType: Int16
  commentId: T:System.Int16
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetInt32(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt32
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt32
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetInt32(Int32)
  commentId: M:System.Data.IDataRecord.GetInt32(System.Int32)
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetInt64(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt64
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetInt64
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetInt64(Int32)
  commentId: M:System.Data.IDataRecord.GetInt64(System.Int32)
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetName
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetName
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetName(Int32)
  commentId: M:System.Data.IDataRecord.GetName(System.Int32)
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetOrdinal(System.String)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetOrdinal(String)
  commentId: M:System.Data.IDataRecord.GetOrdinal(System.String)
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetString(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetString
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetString
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetString(Int32)
  commentId: M:System.Data.IDataRecord.GetString(System.Int32)
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetValue(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetValue
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.GetValue
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetValue(Int32)
  commentId: M:System.Data.IDataRecord.GetValue(System.Int32)
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.GetValues(System.Object[])
  fullname.vb: System.Data.IDataRecord.GetValues(System.Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: "XXX"
    fullName: System.Data.IDataRecord.GetValues
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: "XXX"
    fullName: System.Data.IDataRecord.GetValues
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.GetValues(Object[])
  nameWithType.vb: IDataRecord.GetValues(Object())
  commentId: M:System.Data.IDataRecord.GetValues(System.Object[])
- uid: System.Object[]
  name: "XXX"
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: "XXX"
  fullName: System.Data.IDataRecord.IsDBNull(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.IsDBNull
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: "XXX"
    fullName: System.Data.IDataRecord.IsDBNull
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IDataRecord.IsDBNull(Int32)
  commentId: M:System.Data.IDataRecord.IsDBNull(System.Int32)
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
