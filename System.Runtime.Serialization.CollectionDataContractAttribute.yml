items:
- uid: System.Runtime.Serialization.CollectionDataContractAttribute
  commentId: T:System.Runtime.Serialization.CollectionDataContractAttribute
  id: CollectionDataContractAttribute
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.CollectionDataContractAttribute.#ctor
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsReference
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly
  - System.Runtime.Serialization.CollectionDataContractAttribute.ItemName
  - System.Runtime.Serialization.CollectionDataContractAttribute.KeyName
  - System.Runtime.Serialization.CollectionDataContractAttribute.Name
  - System.Runtime.Serialization.CollectionDataContractAttribute.Namespace
  - System.Runtime.Serialization.CollectionDataContractAttribute.ValueName
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CollectionDataContractAttribute
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 10
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>When applied to a collection type, enables custom specification of the collection item elements. This attribute can be applied only to types that are recognized by the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> as valid, serializable collections. </p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = false)]

      public sealed class CollectionDataContractAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct, Inherited:=False, AllowMultiple:=False)>

      Public NotInheritable Class CollectionDataContractAttribute
          Inherits Attribute
          Implements _Attribute
  seealso:
  - type: System.Runtime.Serialization.DataContractSerializer
    commentId: T:System.Runtime.Serialization.DataContractSerializer
  inheritance:
  - System.Object
  - System.Attribute
  implements:
  - System.Runtime.InteropServices._Attribute
  inheritedMembers:
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Attribute.Match(System.Object)
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 12
    namedArguments:
    - name: "XXX"
      type: System.Boolean
      value: false
    - name: "XXX"
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: CollectionDataContractAttribute
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.#ctor
  commentId: M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.CollectionDataContractAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 13
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public CollectionDataContractAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.CollectionDataContractAttribute()
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly
  id: IsItemNameSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsItemNameSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 14
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute.ItemName\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsItemNameSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsItemNameSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the item name has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsItemNameSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly
  id: IsKeyNameSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsKeyNameSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 15
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute.KeyName\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsKeyNameSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsKeyNameSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the key name has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsKeyNameSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly
  id: IsNameSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNameSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 16
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsNameSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsNameSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the name has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsNameSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly
  id: IsNamespaceSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNamespaceSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 17
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsNamespaceSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsNamespaceSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the item namespace has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsNamespaceSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsReference
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference
  id: IsReference
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsReference
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReference
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 18
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets a value that indicates whether to preserve object reference data.</p>\n"
  syntax:
    content: public bool IsReference { get; set; }
    content.vb: Public Property IsReference As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to keep object reference data; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.DataContractAttribute.IsReference
    commentId: P:System.Runtime.Serialization.DataContractAttribute.IsReference
  - type: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
    commentId: P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.IsReference
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly
  id: IsReferenceSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReferenceSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 19
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether reference has been explicitly set.</p>\n"
  syntax:
    content: public bool IsReferenceSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsReferenceSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the reference has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsReferenceSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly
  id: IsValueNameSetExplicitly
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValueNameSetExplicitly
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 20
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets whether <xref href=\"System.Runtime.Serialization.CollectionDataContractAttribute.ValueName\" data-throw-if-not-resolved=\"false\"></xref> has been explicitly set.</p>\n"
  syntax:
    content: public bool IsValueNameSetExplicitly { get; }
    content.vb: Public ReadOnly Property IsValueNameSetExplicitly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the value name has been explicitly set; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CollectionDataContractAttribute.IsValueNameSetExplicitly
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.ItemName
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName
  id: ItemName
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.ItemName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ItemName
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 21
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets a custom name for a collection element.</p>\n"
  syntax:
    content: public string ItemName { get; set; }
    content.vb: Public Property ItemName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name to apply to collection elements.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.ItemName
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.KeyName
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName
  id: KeyName
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.KeyName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyName
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 22
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the custom name for a dictionary key name.</p>\n"
  syntax:
    content: public string KeyName { get; set; }
    content.vb: Public Property KeyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name to use instead of the default dictionary key name.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.KeyName
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.Name
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.Name
  id: Name
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 23
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the data contract name for the collection type.</p>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The data contract name for the collection type.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.Name
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.Namespace
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace
  id: Namespace
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.Namespace
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 24
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the namespace for the data contract.</p>\n"
  syntax:
    content: public string Namespace { get; set; }
    content.vb: Public Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the data contract.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.Namespace
- uid: System.Runtime.Serialization.CollectionDataContractAttribute.ValueName
  commentId: P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName
  id: ValueName
  parent: System.Runtime.Serialization.CollectionDataContractAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.Serialization.CollectionDataContractAttribute.ValueName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValueName
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 25
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the custom name for a dictionary value name.</p>\n"
  syntax:
    content: public string ValueName { get; set; }
    content.vb: Public Property ValueName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name to use instead of the default dictionary value name.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: CollectionDataContractAttribute.ValueName
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Attribute
  commentId: T:System.Attribute
  nameWithType: Attribute
- uid: System.Runtime.InteropServices._Attribute
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._Attribute
  commentId: T:System.Runtime.InteropServices._Attribute
  nameWithType: _Attribute
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: "XXX"
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: "XXX"
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  nameWithType: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Module
    name: "XXX"
    fullName: System.Reflection.Module
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: "XXX"
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Reflection.Assembly
    name: "XXX"
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.Equals(System.Object)
  nameWithType: Attribute.Equals(Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: "XXX"
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.GetHashCode
  nameWithType: Attribute.GetHashCode()
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Match(System.Object)
  spec.csharp:
  - uid: System.Attribute.Match(System.Object)
    name: "XXX"
    fullName: System.Attribute.Match
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Match(System.Object)
    name: "XXX"
    fullName: System.Attribute.Match
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.Match(System.Object)
  nameWithType: Attribute.Match(Object)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.IsDefaultAttribute()
  spec.csharp:
  - uid: System.Attribute.IsDefaultAttribute
    name: "XXX"
    fullName: System.Attribute.IsDefaultAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefaultAttribute
    name: "XXX"
    fullName: System.Attribute.IsDefaultAttribute
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.IsDefaultAttribute
  nameWithType: Attribute.IsDefaultAttribute()
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._Attribute.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  nameWithType.vb: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType.vb: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType.vb: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: "XXX"
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int16
    name: "XXX"
    fullName: System.Int16
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType.vb: Attribute.System.Runtime.InteropServices._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.TypeId
  commentId: P:System.Attribute.TypeId
  nameWithType: Attribute.TypeId
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
