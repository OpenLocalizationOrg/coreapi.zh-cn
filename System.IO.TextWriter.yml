items:
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  id: TextWriter
  parent: System.IO
  children:
  - System.IO.TextWriter.#ctor
  - System.IO.TextWriter.#ctor(System.IFormatProvider)
  - System.IO.TextWriter.CoreNewLine
  - System.IO.TextWriter.Dispose
  - System.IO.TextWriter.Dispose(System.Boolean)
  - System.IO.TextWriter.Encoding
  - System.IO.TextWriter.Flush
  - System.IO.TextWriter.FlushAsync
  - System.IO.TextWriter.FormatProvider
  - System.IO.TextWriter.NewLine
  - System.IO.TextWriter.Null
  - System.IO.TextWriter.Write(System.Boolean)
  - System.IO.TextWriter.Write(System.Char)
  - System.IO.TextWriter.Write(System.Char[])
  - System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.Write(System.Decimal)
  - System.IO.TextWriter.Write(System.Double)
  - System.IO.TextWriter.Write(System.Int32)
  - System.IO.TextWriter.Write(System.Int64)
  - System.IO.TextWriter.Write(System.Object)
  - System.IO.TextWriter.Write(System.Single)
  - System.IO.TextWriter.Write(System.String)
  - System.IO.TextWriter.Write(System.String,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object[])
  - System.IO.TextWriter.Write(System.UInt32)
  - System.IO.TextWriter.Write(System.UInt64)
  - System.IO.TextWriter.WriteAsync(System.Char)
  - System.IO.TextWriter.WriteAsync(System.Char[])
  - System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteAsync(System.String)
  - System.IO.TextWriter.WriteLine
  - System.IO.TextWriter.WriteLine(System.Boolean)
  - System.IO.TextWriter.WriteLine(System.Char)
  - System.IO.TextWriter.WriteLine(System.Char[])
  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLine(System.Decimal)
  - System.IO.TextWriter.WriteLine(System.Double)
  - System.IO.TextWriter.WriteLine(System.Int32)
  - System.IO.TextWriter.WriteLine(System.Int64)
  - System.IO.TextWriter.WriteLine(System.Object)
  - System.IO.TextWriter.WriteLine(System.Single)
  - System.IO.TextWriter.WriteLine(System.String)
  - System.IO.TextWriter.WriteLine(System.String,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object[])
  - System.IO.TextWriter.WriteLine(System.UInt32)
  - System.IO.TextWriter.WriteLine(System.UInt64)
  - System.IO.TextWriter.WriteLineAsync
  - System.IO.TextWriter.WriteLineAsync(System.Char)
  - System.IO.TextWriter.WriteLineAsync(System.Char[])
  - System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLineAsync(System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TextWriter
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 35
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Represents a writer that can write a sequential series of characters. This class is abstract.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public abstract class TextWriter : IDisposable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public MustInherit Class TextWriter
          Implements IDisposable
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: TextWriter
- uid: System.IO.TextWriter.CoreNewLine
  commentId: F:System.IO.TextWriter.CoreNewLine
  id: CoreNewLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.CoreNewLine
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CoreNewLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 50
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Stores the newline characters used for this <strong>TextWriter</strong>.</p>\n"
  syntax:
    content: protected char[] CoreNewLine
    content.vb: Protected CoreNewLine As Char()
    return:
      type: System.Char[]
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TextWriter.CoreNewLine
- uid: System.IO.TextWriter.Null
  commentId: F:System.IO.TextWriter.Null
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  fullName: System.IO.TextWriter.Null
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 42
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Provides a <strong>TextWriter</strong> with no backing store that can be written to, but not read from.</p>\n"
  syntax:
    content: public static readonly TextWriter Null
    content.vb: Public Shared ReadOnly Null As TextWriter
    return:
      type: System.IO.TextWriter
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: TextWriter.Null
- uid: System.IO.TextWriter.#ctor
  commentId: M:System.IO.TextWriter.#ctor
  id: '#ctor'
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.TextWriter()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 60
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected TextWriter()
    content.vb: Protected Sub New
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TextWriter.TextWriter()
- uid: System.IO.TextWriter.#ctor(System.IFormatProvider)
  commentId: M:System.IO.TextWriter.#ctor(System.IFormatProvider)
  id: '#ctor(System.IFormatProvider)'
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.TextWriter(System.IFormatProvider)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 65
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> class with the specified format provider.</p>\n"
  syntax:
    content: protected TextWriter(IFormatProvider formatProvider)
    content.vb: Protected Sub New(formatProvider As IFormatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object that controls formatting. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TextWriter.TextWriter(IFormatProvider)
- uid: System.IO.TextWriter.Encoding
  commentId: P:System.IO.TextWriter.Encoding
  id: Encoding
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Encoding
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Encoding
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 107
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>When overridden in a derived class, returns the character encoding in which the output is written.</p>\n"
  syntax:
    content: public abstract Encoding Encoding { get; }
    content.vb: Public MustOverride ReadOnly Property Encoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\n<p>The character encoding in which the output is written.</p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: TextWriter.Encoding
- uid: System.IO.TextWriter.FormatProvider
  commentId: P:System.IO.TextWriter.FormatProvider
  id: FormatProvider
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.FormatProvider
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FormatProvider
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 70
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets an object that controls formatting.</p>\n"
  syntax:
    content: public virtual IFormatProvider FormatProvider { get; }
    content.vb: Public Overridable ReadOnly Property FormatProvider As IFormatProvider
    parameters: []
    return:
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object for a specific culture, or the formatting of the current culture if no other culture is specified.</p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: TextWriter.FormatProvider
- uid: System.IO.TextWriter.NewLine
  commentId: P:System.IO.TextWriter.NewLine
  id: NewLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.NewLine
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NewLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 120
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets or sets the line terminator string used by the current <strong>TextWriter</strong>.</p>\n"
  syntax:
    content: public virtual string NewLine { get; set; }
    content.vb: Public Overridable Property NewLine As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The line terminator string for the current <strong>TextWriter</strong>.</p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.NewLine
- uid: System.IO.TextWriter.Dispose
  commentId: M:System.IO.TextWriter.Dispose
  id: Dispose
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 94
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases all resources used by the <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TextWriter.Dispose()
- uid: System.IO.TextWriter.Dispose(System.Boolean)
  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 89
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: TextWriter.Dispose(Boolean)
- uid: System.IO.TextWriter.Flush
  commentId: M:System.IO.TextWriter.Flush
  id: Flush
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Flush()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Flush
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 104
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</p>\n"
  syntax:
    content: public virtual void Flush()
    content.vb: Public Overridable Sub Flush
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Flush()
- uid: System.IO.TextWriter.FlushAsync
  commentId: M:System.IO.TextWriter.FlushAsync
  id: FlushAsync
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.FlushAsync()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FlushAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 593
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device. </p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task FlushAsync()
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function FlushAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous flush operation. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.FlushAsync()
- uid: System.IO.TextWriter.Write(System.Boolean)
  commentId: M:System.IO.TextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 179
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a <strong>Boolean</strong> value to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(bool value)
    content.vb: Public Overridable Sub Write(value As Boolean)
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>The <strong>Boolean</strong> value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Boolean)
- uid: System.IO.TextWriter.Write(System.Char)
  commentId: M:System.IO.TextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 147
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(char value)
    content.vb: Public Overridable Sub Write(value As Char)
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the text stream. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.Write(System.Char)
    commentId: M:System.IO.StreamWriter.Write(System.Char)
  - type: System.IO.StringWriter.Write(System.Char)
    commentId: M:System.IO.StringWriter.Write(System.Char)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: TextWriter.Write(Char)
- uid: System.IO.TextWriter.Write(System.Char[])
  commentId: M:System.IO.TextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 154
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character array to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(char[] buffer)
    content.vb: Public Overridable Sub Write(buffer As Char())
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write to the text stream. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.Write(System.Char[])
    commentId: M:System.IO.StreamWriter.Write(System.Char[])
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.Write(System.Char())
  name.vb: Write(Char())
  nameWithType: TextWriter.Write(Char[])
  nameWithType.vb: TextWriter.Write(Char())
- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 162
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(char[] buffer, int index, int count)
    content.vb: Public Overridable Sub Write(buffer As Char(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to start retrieving data. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to write. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>buffer</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  - type: System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  nameWithType: TextWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.Write(Char(), Int32, Int32)
- uid: System.IO.TextWriter.Write(System.Decimal)
  commentId: M:System.IO.TextWriter.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 233
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a decimal value to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(decimal value)
    content.vb: Public Overridable Sub Write(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Decimal)
- uid: System.IO.TextWriter.Write(System.Double)
  commentId: M:System.IO.TextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 229
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an 8-byte floating-point value to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(double value)
    content.vb: Public Overridable Sub Write(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The 8-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Double)
- uid: System.IO.TextWriter.Write(System.Int32)
  commentId: M:System.IO.TextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 187
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte signed integer to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(int value)
    content.vb: Public Overridable Sub Write(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The 4-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Int32)
- uid: System.IO.TextWriter.Write(System.Int64)
  commentId: M:System.IO.TextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 204
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an 8-byte signed integer to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(long value)
    content.vb: Public Overridable Sub Write(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The 8-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Int64)
- uid: System.IO.TextWriter.Write(System.Object)
  commentId: M:System.IO.TextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 250
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an object to the text string or stream by calling the <strong>ToString</strong> method on that object.</p>\n"
  syntax:
    content: public virtual void Write(object value)
    content.vb: Public Overridable Sub Write(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Object)
- uid: System.IO.TextWriter.Write(System.Single)
  commentId: M:System.IO.TextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 221
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte floating-point value to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(float value)
    content.vb: Public Overridable Sub Write(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The 4-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(Single)
- uid: System.IO.TextWriter.Write(System.String)
  commentId: M:System.IO.TextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 240
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the text string or stream.</p>\n"
  syntax:
    content: public virtual void Write(string value)
    content.vb: Public Overridable Sub Write(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.Write(System.String)
    commentId: M:System.IO.StreamWriter.Write(System.String)
  - type: System.IO.StringWriter.Write(System.String)
    commentId: M:System.IO.StringWriter.Write(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(String)
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 280
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void Write(string format, object arg0)
    content.vb: Public Overridable Sub Write(format As String, arg0 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks). </p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(String, Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 288
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void Write(string format, object arg0, object arg1)
    content.vb: Public Overridable Sub Write(format As String, arg0 As Object, arg1 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks). </p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The first object to format and write. </p>\n"
    - id: arg1
      type: System.Object
      description: "\n<p>The second object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(String, Object, Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 296
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object,System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void Write(string format, object arg0, object arg1, object arg2)
    content.vb: Public Overridable Sub Write(format As String, arg0 As Object, arg1 As Object, arg2 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks). </p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The first object to format and write. </p>\n"
    - id: arg1
      type: System.Object
      description: "\n<p>The second object to format and write. </p>\n"
    - id: arg2
      type: System.Object
      description: "\n<p>The third object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(String, Object, Object, Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 304
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void Write(string format, params object[] arg)
    content.vb: Public Overridable Sub Write(format As String, ParamArray arg As Object())
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks). </p>\n"
    - id: arg
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> or <em>arg</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <em>arg</em> array. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.Write(System.String, System.Object())
  name.vb: Write(String, Object())
  nameWithType: TextWriter.Write(String, Object[])
  nameWithType.vb: TextWriter.Write(String, Object())
- uid: System.IO.TextWriter.Write(System.UInt32)
  commentId: M:System.IO.TextWriter.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 195
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte unsigned integer to the text string or stream.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The 4-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(UInt32)
- uid: System.IO.TextWriter.Write(System.UInt64)
  commentId: M:System.IO.TextWriter.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 212
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an 8-byte unsigned integer to the text string or stream.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The 8-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.Write(UInt64)
- uid: System.IO.TextWriter.WriteAsync(System.Char)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)
  id: WriteAsync(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 492
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the text string or stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the text stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteAsync(System.Char)
    commentId: M:System.IO.StreamWriter.WriteAsync(System.Char)
  - type: System.IO.StringWriter.WriteAsync(System.Char)
    commentId: M:System.IO.StringWriter.WriteAsync(System.Char)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteAsync(Char)
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])
  id: WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 518
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character array to the text string or stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public Task WriteAsync(char[] buffer)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Function WriteAsync(buffer As Char()) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write to the text stream. If <em>buffer</em> is <strong>null</strong>, nothing is written.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.IO.TextWriter.WriteAsync(System.Char())
  name.vb: WriteAsync(Char())
  nameWithType: TextWriter.WriteAsync(Char[])
  nameWithType.vb: TextWriter.WriteAsync(Char())
- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  id: WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 526
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the text string or stream asynchronously. </p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to start retrieving data. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to write. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - type: System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.WriteAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteAsync(Char(), Int32, Int32)
  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteAsync(Char(), Int32, Int32)
- uid: System.IO.TextWriter.WriteAsync(System.String)
  commentId: M:System.IO.TextWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 505
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the text string or stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If <em>value</em> is <strong>null</strong>, nothing is written to the text stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteAsync(System.String)
    commentId: M:System.IO.StreamWriter.WriteAsync(System.String)
  - type: System.IO.StringWriter.WriteAsync(System.String)
    commentId: M:System.IO.StringWriter.WriteAsync(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteAsync(String)
- uid: System.IO.TextWriter.WriteLine
  commentId: M:System.IO.TextWriter.WriteLine
  id: WriteLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 314
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine()
    content.vb: Public Overridable Sub WriteLine
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine()
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 344
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a <strong>Boolean</strong> value followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(bool value)
    content.vb: Public Overridable Sub WriteLine(value As Boolean)
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>The <strong>Boolean</strong> value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Boolean)
- uid: System.IO.TextWriter.WriteLine(System.Char)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 320
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(char value)
    content.vb: Public Overridable Sub WriteLine(value As Char)
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the text stream. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Char)
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 328
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an array of characters followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(char[] buffer)
    content.vb: Public Overridable Sub WriteLine(buffer As Char())
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array from which data is read. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.WriteLine(System.Char())
  name.vb: WriteLine(Char())
  nameWithType: TextWriter.WriteLine(Char[])
  nameWithType.vb: TextWriter.WriteLine(Char())
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 336
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(char[] buffer, int index, int count)
    content.vb: Public Overridable Sub WriteLine(buffer As Char(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array from which data is read. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in <em>buffer</em> at which to start reading data. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>buffer</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.WriteLine(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLine(Char(), Int32, Int32)
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLine(Char(), Int32, Int32)
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 399
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(decimal value)
    content.vb: Public Overridable Sub WriteLine(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Decimal)
- uid: System.IO.TextWriter.WriteLine(System.Double)
  commentId: M:System.IO.TextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 394
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(double value)
    content.vb: Public Overridable Sub WriteLine(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The 8-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Double)
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 352
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(int value)
    content.vb: Public Overridable Sub WriteLine(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The 4-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Int32)
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 369
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(long value)
    content.vb: Public Overridable Sub WriteLine(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The 8-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Int64)
- uid: System.IO.TextWriter.WriteLine(System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 444
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an object by calling the <strong>ToString</strong> method on that object, followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(object value)
    content.vb: Public Overridable Sub WriteLine(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to write. If <em>value</em> is <strong>null</strong>, only the line terminator is written. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Object)
- uid: System.IO.TextWriter.WriteLine(System.Single)
  commentId: M:System.IO.TextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 386
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(float value)
    content.vb: Public Overridable Sub WriteLine(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The 4-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(Single)
- uid: System.IO.TextWriter.WriteLine(System.String)
  commentId: M:System.IO.TextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 406
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: public virtual void WriteLine(string value)
    content.vb: Public Overridable Sub WriteLine(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If <em>value</em> is <strong>null</strong>, only the line terminator is written. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(String)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 462
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void WriteLine(string format, object arg0)
    content.vb: Public Overridable Sub WriteLine(format As String, arg0 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks).</p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(String, Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 470
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <xref href=\"System.String.Format(System.String,System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public virtual void WriteLine(string format, object arg0, object arg1)
    content.vb: Public Overridable Sub WriteLine(format As String, arg0 As Object, arg1 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks).</p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The first object to format and write. </p>\n"
    - id: arg1
      type: System.Object
      description: "\n<p>The second object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(String, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 478
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes out a formatted string and a new line, using the same semantics as <xref href=\"System.String.Format(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void WriteLine(string format, object arg0, object arg1, object arg2)
    content.vb: Public Overridable Sub WriteLine(format As String, arg0 As Object, arg1 As Object, arg2 As Object)
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks).</p>\n"
    - id: arg0
      type: System.Object
      description: "\n<p>The first object to format and write. </p>\n"
    - id: arg1
      type: System.Object
      description: "\n<p>The second object to format and write. </p>\n"
    - id: arg2
      type: System.Object
      description: "\n<p>The third object to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three). </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 486
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes out a formatted string and a new line, using the same semantics as <xref href=\"System.String.Format(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void WriteLine(string format, params object[] arg)
    content.vb: Public Overridable Sub WriteLine(format As String, ParamArray arg As Object())
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks).</p>\n"
    - id: arg
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format and write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A string or object is passed in as <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid composite format string.</p>\n<p>-or- </p>\n<p>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <em>arg</em> array. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
  nameWithType: TextWriter.WriteLine(String, Object[])
  nameWithType.vb: TextWriter.WriteLine(String, Object())
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 360
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void WriteLine(uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub WriteLine(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The 4-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(UInt32)
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLine
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 377
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void WriteLine(ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub WriteLine(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The 8-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLine(UInt64)
- uid: System.IO.TextWriter.WriteLineAsync
  commentId: M:System.IO.TextWriter.WriteLineAsync
  id: WriteLineAsync
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 586
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a line terminator asynchronously to the text string or stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteLineAsync()
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteLineAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation. </p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteLineAsync
    commentId: M:System.IO.StreamWriter.WriteLineAsync
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLineAsync()
- uid: System.IO.TextWriter.WriteLineAsync(System.Char)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)
  id: WriteLineAsync(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 539
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character followed by a line terminator asynchronously to the text string or stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteLineAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteLineAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the text stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteLineAsync(System.Char)
    commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char)
  - type: System.IO.StringWriter.WriteLineAsync(System.Char)
    commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLineAsync(Char)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])
  id: WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 565
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public Task WriteLineAsync(char[] buffer)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Function WriteLineAsync(buffer As Char()) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write to the text stream. If the character array is <strong>null</strong>, only the line terminator is written. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter
    commentId: T:System.IO.StreamWriter
  - type: System.IO.StringWriter
    commentId: T:System.IO.StringWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.IO.TextWriter.WriteLineAsync(System.Char())
  name.vb: WriteLineAsync(Char())
  nameWithType: TextWriter.WriteLineAsync(Char[])
  nameWithType.vb: TextWriter.WriteLineAsync(Char())
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 573
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteLineAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteLineAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to start retrieving data. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to write. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  - type: System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.TextWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLineAsync(Char(), Int32, Int32)
  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLineAsync(Char(), Int32, Int32)
- uid: System.IO.TextWriter.WriteLineAsync(System.String)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)
  id: WriteLineAsync(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/TextWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/TextWriter.cs
    startLine: 552
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string followed by a line terminator asynchronously to the text string or stream. </p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public virtual Task WriteLineAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overridable Function WriteLineAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If the value is <strong>null</strong>, only a line terminator is written. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The text writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The text writer is currently in use by a previous write operation. </p>\n"
  seealso:
  - type: System.IO.StreamWriter.WriteLineAsync(System.String)
    commentId: M:System.IO.StreamWriter.WriteLineAsync(System.String)
  - type: System.IO.StringWriter.WriteLineAsync(System.String)
    commentId: M:System.IO.StringWriter.WriteLineAsync(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TextWriter.WriteLineAsync(String)
references:
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Char[]
  name: "XXX"
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter
  nameWithType: TextWriter
  commentId: T:System.IO.TextWriter
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.Encoding
  nameWithType: Encoding
  commentId: T:System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Decimal
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Single
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.Object[]
  name: "XXX"
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.UInt32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt32
  nameWithType: UInt32
  commentId: T:System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt64
  nameWithType: UInt64
  commentId: T:System.UInt64
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.IOException
  nameWithType: IOException
  commentId: T:System.IO.IOException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.FormatException
  nameWithType: FormatException
  commentId: T:System.FormatException
