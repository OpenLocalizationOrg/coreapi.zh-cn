items:
- uid: System.ComponentModel.IListSource
  commentId: T:System.ComponentModel.IListSource
  id: IListSource
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IListSource.ContainsListCollection
  - System.ComponentModel.IListSource.GetList
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.IListSource
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IListSource
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides functionality to an object to return a list that can be bound to a data source.</p>\n"
  syntax:
    content: public interface IListSource
    content.vb: Public Interface IListSource
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
  - type: System.Collections.CollectionBase
    commentId: T:System.Collections.CollectionBase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IListSource
- uid: System.ComponentModel.IListSource.ContainsListCollection
  commentId: P:System.ComponentModel.IListSource.ContainsListCollection
  id: ContainsListCollection
  parent: System.ComponentModel.IListSource
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsListCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the collection is a collection of <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: bool ContainsListCollection { get; }
    content.vb: ReadOnly Property ContainsListCollection As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the collection is a collection of <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> objects; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IListSource.ContainsListCollection
- uid: System.ComponentModel.IListSource.GetList
  commentId: M:System.ComponentModel.IListSource.GetList
  id: GetList
  parent: System.ComponentModel.IListSource
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.IListSource.GetList()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetList
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 16
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that can be bound to a data source from an object that does not implement an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> itself.</p>\n"
  syntax:
    content: IList GetList()
    content.vb: Function GetList As IList
    return:
      type: System.Collections.IList
      description: "\n<p>An <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that can be bound to a data source from the object.</p>\n"
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
  nameWithType: IListSource.GetList()
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList
  nameWithType: IList
  commentId: T:System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
