items:
- uid: System.Linq.Expressions.MemberBinding
  commentId: T:System.Linq.Expressions.MemberBinding
  id: MemberBinding
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.MemberBinding.BindingType
  - System.Linq.Expressions.MemberBinding.Member
  - System.Linq.Expressions.MemberBinding.ToString
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.MemberBinding
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberBinding
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 680
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Provides the base class from which the classes that represent bindings that are used to initialize members of a newly created object derive.</p>\n"
  syntax:
    content: public abstract class MemberBinding
    content.vb: Public MustInherit Class MemberBinding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: MemberBinding
- uid: System.Linq.Expressions.MemberBinding.BindingType
  commentId: P:System.Linq.Expressions.MemberBinding.BindingType
  id: BindingType
  parent: System.Linq.Expressions.MemberBinding
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.MemberBinding.BindingType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BindingType
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 683
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the type of binding that is represented.</p>\n"
  syntax:
    content: public MemberBindingType BindingType { get; }
    content.vb: Public ReadOnly Property BindingType As MemberBindingType
    parameters: []
    return:
      type: System.Linq.Expressions.MemberBindingType
      description: "\n<p>One of the <xref href=\"System.Linq.Expressions.MemberBindingType\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MemberBinding.BindingType
- uid: System.Linq.Expressions.MemberBinding.Member
  commentId: P:System.Linq.Expressions.MemberBinding.Member
  id: Member
  parent: System.Linq.Expressions.MemberBinding
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.MemberBinding.Member
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Member
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 684
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the field or property to be initialized.</p>\n"
  syntax:
    content: public MemberInfo Member { get; }
    content.vb: Public ReadOnly Property Member As MemberInfo
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "\n<p>The <xref href=\"System.Reflection.MemberInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the field or property to be initialized.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MemberBinding.Member
- uid: System.Linq.Expressions.MemberBinding.ToString
  commentId: M:System.Linq.Expressions.MemberBinding.ToString
  id: ToString
  parent: System.Linq.Expressions.MemberBinding
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.Expressions.MemberBinding.ToString()
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 685
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Returns a textual representation of the <xref href=\"System.Linq.Expressions.MemberBinding\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A textual representation of the <xref href=\"System.Linq.Expressions.MemberBinding\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: MemberBinding.ToString()
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  nameWithType: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Linq.Expressions.MemberBindingType
  parent: System.Linq.Expressions
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Expressions.MemberBindingType
  commentId: T:System.Linq.Expressions.MemberBindingType
  nameWithType: MemberBindingType
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  nameWithType: MemberInfo
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  commentId: N:System.Reflection
  nameWithType: System.Reflection
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
