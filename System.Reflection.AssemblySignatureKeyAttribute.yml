items:
- uid: System.Reflection.AssemblySignatureKeyAttribute
  commentId: T:System.Reflection.AssemblySignatureKeyAttribute
  id: AssemblySignatureKeyAttribute
  parent: System.Reflection
  children:
  - System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)
  - System.Reflection.AssemblySignatureKeyAttribute.Countersignature
  - System.Reflection.AssemblySignatureKeyAttribute.PublicKey
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.AssemblySignatureKeyAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AssemblySignatureKeyAttribute
    path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
    startLine: 363
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Provides migration from an older, simpler strong name key to a larger key with a stronger hashing algorithm.</p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Assembly, Inherited = false, AllowMultiple = false)]

      public sealed class AssemblySignatureKeyAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Assembly, Inherited:=False, AllowMultiple:=False)>

      Public NotInheritable Class AssemblySignatureKeyAttribute
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1
    namedArguments:
    - name: "XXX"
      type: System.Boolean
      value: false
    - name: "XXX"
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AssemblySignatureKeyAttribute
- uid: System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)
  commentId: M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Reflection.AssemblySignatureKeyAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.AssemblySignatureKeyAttribute.AssemblySignatureKeyAttribute(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
    startLine: 369
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Reflection.AssemblySignatureKeyAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified public key and countersignature.</p>\n"
  syntax:
    content: public AssemblySignatureKeyAttribute(string publicKey, string countersignature)
    content.vb: Public Sub New(publicKey As String, countersignature As String)
    parameters:
    - id: publicKey
      type: System.String
      description: "\n<p>The public or identity key.</p>\n"
    - id: countersignature
      type: System.String
      description: "\n<p>The countersignature, which is the signature key portion of the strong-name key.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AssemblySignatureKeyAttribute.AssemblySignatureKeyAttribute(String, String)
- uid: System.Reflection.AssemblySignatureKeyAttribute.Countersignature
  commentId: P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature
  id: Countersignature
  parent: System.Reflection.AssemblySignatureKeyAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.AssemblySignatureKeyAttribute.Countersignature
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Countersignature
    path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
    startLine: 380
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Gets the countersignature for the strong name for this assembly.</p>\n"
  syntax:
    content: public string Countersignature { get; }
    content.vb: Public ReadOnly Property Countersignature As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The countersignature for this signature key.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: AssemblySignatureKeyAttribute.Countersignature
- uid: System.Reflection.AssemblySignatureKeyAttribute.PublicKey
  commentId: P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey
  id: PublicKey
  parent: System.Reflection.AssemblySignatureKeyAttribute
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.AssemblySignatureKeyAttribute.PublicKey
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PublicKey
    path: src/mscorlib/src/System/Reflection/AssemblyAttributes.cs
    startLine: 375
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Gets the public key for the strong name used to sign the assembly.</p>\n"
  syntax:
    content: public string PublicKey { get; }
    content.vb: Public ReadOnly Property PublicKey As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The public key for this assembly.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: AssemblySignatureKeyAttribute.PublicKey
references:
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Attribute
  nameWithType: Attribute
  commentId: T:System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: "XXX"
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: "XXX"
    fullName: System.Attribute.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.Equals(Object)
  commentId: M:System.Attribute.Equals(System.Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: "XXX"
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: "XXX"
    fullName: System.Attribute.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Attribute.GetHashCode()
  commentId: M:System.Attribute.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
