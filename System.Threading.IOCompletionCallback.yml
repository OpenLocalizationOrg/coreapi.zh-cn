items:
- uid: System.Threading.IOCompletionCallback
  commentId: T:System.Threading.IOCompletionCallback
  id: IOCompletionCallback
  parent: System.Threading
  children: []
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.IOCompletionCallback
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Threading/ThreadPool.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IOCompletionCallback
    path: src/mscorlib/src/System/Threading/ThreadPool.cs
    startLine: 1385
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      [CLSCompliant(false)]

      [ComVisible(true)]

      public delegate void IOCompletionCallback(uint errorCode, uint numBytes, NativeOverlapped*pOVERLAP);
    content.vb: >-
      <SecurityCritical>

      <CLSCompliant(False)>

      <ComVisible(True)>

      Public Delegate Sub IOCompletionCallback(errorCode As UInteger, numBytes As UInteger, pOVERLAP As NativeOverlapped *)
    parameters:
    - id: errorCode
      type: System.UInt32
      description: "\n<p>The error code. </p>\n"
    - id: numBytes
      type: System.UInt32
      description: "\n<p>The number of bytes that are transferred. </p>\n"
    - id: pOVERLAP
      type: System.Threading.NativeOverlapped*
      description: "\n<p>A <xref href=\"System.Threading.NativeOverlapped\" data-throw-if-not-resolved=\"false\"></xref> representing an unmanaged pointer to the native overlapped value type. </p>\n"
  see:
  - type: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  nameWithType: IOCompletionCallback
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
references:
- uid: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt32
  nameWithType: UInt32
  commentId: T:System.UInt32
- uid: System.Threading.NativeOverlapped*
  name: "XXX"
  fullName: System.Threading.NativeOverlapped*
  spec.csharp:
  - uid: System.Threading.NativeOverlapped
    name: "XXX"
    fullName: System.Threading.NativeOverlapped
  - name: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Threading.NativeOverlapped
    name: "XXX"
    fullName: System.Threading.NativeOverlapped
  - name: '*'
    fullName: '*'
  nameWithType: NativeOverlapped*
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - uid: System.Delegate
    name: "XXX"
    fullName: System.Delegate
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - uid: System.Delegate
    name: "XXX"
    fullName: System.Delegate
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
