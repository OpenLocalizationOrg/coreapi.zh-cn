items:
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  commentId: T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  id: UnobservedTaskExceptionEventArgs
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UnobservedTaskExceptionEventArgs
    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
    startLine: 728
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Provides data for the event that is raised when a faulted <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref>'s exception goes unobserved.</p>\n"
  syntax:
    content: 'public class UnobservedTaskExceptionEventArgs : EventArgs'
    content.vb: >-
      Public Class UnobservedTaskExceptionEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: UnobservedTaskExceptionEventArgs
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)
  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)
  id: '#ctor(System.AggregateException)'
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(System.AggregateException)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
    startLine: 738
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the unobserved exception.</p>\n"
  syntax:
    content: public UnobservedTaskExceptionEventArgs(AggregateException exception)
    content.vb: Public Sub New(exception As AggregateException)
    parameters:
    - id: exception
      type: System.AggregateException
      description: "\n<p>The Exception that has gone unobserved.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  id: Exception
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Exception
    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
    startLine: 754
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>The Exception that went unobserved.</p>\n"
  syntax:
    content: public AggregateException Exception { get; }
    content.vb: Public ReadOnly Property Exception As AggregateException
    parameters: []
    return:
      type: System.AggregateException
      description: "\n<p>The Exception that went unobserved.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: UnobservedTaskExceptionEventArgs.Exception
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  id: Observed
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Observed
    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
    startLine: 749
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets whether this exception has been marked as \"observed.\"</p>\n"
  syntax:
    content: public bool Observed { get; }
    content.vb: Public ReadOnly Property Observed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>true if this exception has been marked as \"observed\"; otherwise false.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: UnobservedTaskExceptionEventArgs.Observed
- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved
  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved
  id: SetObserved
  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetObserved
    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs
    startLine: 744
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Marks the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\" data-throw-if-not-resolved=\"false\"></xref> as \"observed,\" thus preventing it from triggering exception escalation policy which, by default, terminates the process.</p>\n"
  syntax:
    content: public void SetObserved()
    content.vb: Public Sub SetObserved
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UnobservedTaskExceptionEventArgs.SetObserved()
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.EventArgs
  nameWithType: EventArgs
  commentId: T:System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: "XXX"
  fullName: System.EventArgs.Empty
  nameWithType: EventArgs.Empty
  commentId: F:System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.AggregateException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.AggregateException
  nameWithType: AggregateException
  commentId: T:System.AggregateException
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
