items:
- uid: System.Char
  commentId: T:System.Char
  id: Char
  parent: System
  children:
  - System.Char.CompareTo(System.Char)
  - System.Char.ConvertFromUtf32(System.Int32)
  - System.Char.ConvertToUtf32(System.Char,System.Char)
  - System.Char.ConvertToUtf32(System.String,System.Int32)
  - System.Char.Equals(System.Char)
  - System.Char.Equals(System.Object)
  - System.Char.GetHashCode
  - System.Char.GetNumericValue(System.Char)
  - System.Char.GetNumericValue(System.String,System.Int32)
  - System.Char.IsControl(System.Char)
  - System.Char.IsControl(System.String,System.Int32)
  - System.Char.IsDigit(System.Char)
  - System.Char.IsDigit(System.String,System.Int32)
  - System.Char.IsHighSurrogate(System.Char)
  - System.Char.IsHighSurrogate(System.String,System.Int32)
  - System.Char.IsLetter(System.Char)
  - System.Char.IsLetter(System.String,System.Int32)
  - System.Char.IsLetterOrDigit(System.Char)
  - System.Char.IsLetterOrDigit(System.String,System.Int32)
  - System.Char.IsLower(System.Char)
  - System.Char.IsLower(System.String,System.Int32)
  - System.Char.IsLowSurrogate(System.Char)
  - System.Char.IsLowSurrogate(System.String,System.Int32)
  - System.Char.IsNumber(System.Char)
  - System.Char.IsNumber(System.String,System.Int32)
  - System.Char.IsPunctuation(System.Char)
  - System.Char.IsPunctuation(System.String,System.Int32)
  - System.Char.IsSeparator(System.Char)
  - System.Char.IsSeparator(System.String,System.Int32)
  - System.Char.IsSurrogate(System.Char)
  - System.Char.IsSurrogate(System.String,System.Int32)
  - System.Char.IsSurrogatePair(System.Char,System.Char)
  - System.Char.IsSurrogatePair(System.String,System.Int32)
  - System.Char.IsSymbol(System.Char)
  - System.Char.IsSymbol(System.String,System.Int32)
  - System.Char.IsUpper(System.Char)
  - System.Char.IsUpper(System.String,System.Int32)
  - System.Char.IsWhiteSpace(System.Char)
  - System.Char.IsWhiteSpace(System.String,System.Int32)
  - System.Char.MaxValue
  - System.Char.MinValue
  - System.Char.Parse(System.String)
  - System.Char.System#IComparable#CompareTo(System.Object)
  - System.Char.System#IConvertible#GetTypeCode
  - System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Char.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Char.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Char.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Char.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Char.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Char.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Char.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Char.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Char.System#IConvertible#ToString(System.IFormatProvider)
  - System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Char.ToLower(System.Char)
  - System.Char.ToLowerInvariant(System.Char)
  - System.Char.ToString
  - System.Char.ToString(System.Char)
  - System.Char.ToUpper(System.Char)
  - System.Char.ToUpperInvariant(System.Char)
  - System.Char.TryParse(System.String,System.Char@)
  langs:
  - csharp
  - vb
  name: Char
  fullName: System.Char
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Char
    path: src/mscorlib/src/System/Char.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxxx x xxxxxxxxx xx x XXX$00 xxxx xxxx.$$x$$x"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      [StructLayout(LayoutKind.Sequential)]

      public struct Char : IComparable, IConvertible, IComparable<char>, IEquatable<char>
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      <StructLayout(LayoutKind.Sequential)>

      Public Structure Char
          Implements IComparable, IConvertible, IComparable(Of Char), IEquatable(Of Char)
  seealso:
  - type: System.IComparable
    commentId: T:System.IComparable
  - type: System.IConvertible
    commentId: T:System.IConvertible
  - type: System.String
    commentId: T:System.String
  implements:
  - System.IComparable
  - System.IComparable{System.Char}
  - System.IConvertible
  - System.IEquatable{System.Char}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Char
- uid: System.Char.MaxValue
  commentId: F:System.Char.MaxValue
  id: MaxValue
  parent: System.Char
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Char.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/Char.cs
    startLine: 36
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  syntax:
    content: public const char MaxValue = '\uffff'
    content.vb: Public Const MaxValue As Char = ChrW(65535)
    return:
      type: System.Char
  seealso:
  - type: System.Char.MinValue
    commentId: F:System.Char.MinValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Char.MaxValue
- uid: System.Char.MinValue
  commentId: F:System.Char.MinValue
  id: MinValue
  parent: System.Char
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Char.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/Char.cs
    startLine: 38
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  syntax:
    content: public const char MinValue = '\0'
    content.vb: Public Const MinValue As Char = vbNullChar
    return:
      type: System.Char
  seealso:
  - type: System.Char.MaxValue
    commentId: F:System.Char.MaxValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Char.MinValue
- uid: System.Char.CompareTo(System.Char)
  commentId: M:System.Char.CompareTo(System.Char)
  id: CompareTo(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: CompareTo(Char)
  fullName: System.Char.CompareTo(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/Char.cs
    startLine: 138
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int CompareTo(char value)
    content.vb: Public Function CompareTo(value As Char) As Integer
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>A <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object to compare. </p>\n"
    return:
      type: System.Int32
      description: "$x$x$X xxxxxx xxxxxx xxxxxxxxxx xxx xxxxxxxx xx xxxx xxxxxxxx xx xxx xxxx xxxxx xx xxxxxxxx xx xxx $xx$xxxxx$$xx$ xxxxxxxxx.$$x$$x$x$Xxxxxx Xxxxx $$x$$x$x$Xxxxxxxxxxx $$x$$x$xxxxx$$xxxxx$$xx$$xx$$x$x$Xxxx xxxx xxxx $$x$$x$$xx$$xx$$x$x$Xxxx xxxxxxxx xxxxxxxx $xx$xxxxx$$xx$. $$x$$x$$xx$$$xx$$xx$$xx$$x$x$Xxxx $$x$$x$$xx$$xx$$x$x$Xxxx xxxxxxxx xxx xxx xxxx xxxxxxxx xx xxx xxxx xxxxx xx $xx$xxxxx$$xx$. $$x$$x$$xx$$$xx$$xx$$xx$$x$x$Xxxxxxx xxxx xxxx $$x$$x$$xx$$xx$$x$x$Xxxx xxxxxxxx xxxxxxx $xx$xxxxx$$xx$. $$x$$x$$xx$$$xx$$$xxxxx$$$xxxxx$$x"
  seealso:
  - type: System.IComparable
    commentId: T:System.IComparable
  - type: System.Char.Equals(System.Object)
    commentId: M:System.Char.Equals(System.Object)
  implements:
  - System.IComparable{System.Char}.CompareTo(System.Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Char.CompareTo(Char)
- uid: System.Char.ConvertFromUtf32(System.Int32)
  commentId: M:System.Char.ConvertFromUtf32(System.Int32)
  id: ConvertFromUtf32(System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ConvertFromUtf32(Int32)
  fullName: System.Char.ConvertFromUtf32(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ConvertFromUtf32
    path: src/mscorlib/src/System/Char.cs
    startLine: 916
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxx xxxxx xxxx x XXX$00 xxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static string ConvertFromUtf32(int utf32)
    content.vb: Public Shared Function ConvertFromUtf32(utf32 As Integer) As String
    parameters:
    - id: utf32
      type: System.Int32
      description: "$x$x$X 00$xxx Xxxxxxx xxxx xxxxx. $$x$$x"
    return:
      type: System.String
      description: "\n<p>A string consisting of one <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object or a surrogate pair of <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> objects equivalent to the code point specified by the <em>utf32</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxx00$$xx$ xx xxx x xxxxx 00$xxx Xxxxxxx xxxx xxxxx xxxxxxx xxxx X$0 xxxxxxx X$00XXXX$ xxxxxxxxx xxx xxxxxxxxx xxxx xxxxx xxxx X$X000 xxxxxxx X$XXXX. $$x$$x"
  seealso:
  - type: System.Char.ConvertToUtf32(System.Char,System.Char)
    commentId: M:System.Char.ConvertToUtf32(System.Char,System.Char)
  - type: System.Text.UTF32Encoding
    commentId: T:System.Text.UTF32Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ConvertFromUtf32(Int32)
- uid: System.Char.ConvertToUtf32(System.Char,System.Char)
  commentId: M:System.Char.ConvertToUtf32(System.Char,System.Char)
  id: ConvertToUtf32(System.Char,System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ConvertToUtf32(Char, Char)
  fullName: System.Char.ConvertToUtf32(System.Char, System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ConvertToUtf32
    path: src/mscorlib/src/System/Char.cs
    startLine: 942
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x XXX$00 xxxxxxx xxxxxxxxx xxxx xxxx x Xxxxxxx xxxx xxxxx.$$x$$x"
  syntax:
    content: public static int ConvertToUtf32(char highSurrogate, char lowSurrogate)
    content.vb: Public Shared Function ConvertToUtf32(highSurrogate As Char, lowSurrogate As Char) As Integer
    parameters:
    - id: highSurrogate
      type: System.Char
      description: "$x$x$X xxxx xxxxxxxxx xxxx xxxx $xxxx xx$ x xxxx xxxx xxxxxxx xxxx X$X000 xxxxxxx X$XXXX$. $$x$$x"
    - id: lowSurrogate
      type: System.Char
      description: "$x$x$X xxx xxxxxxxxx xxxx xxxx $xxxx xx$ x xxxx xxxx xxxxxxx xxxx X$XX00 xxxxxxx X$XXXX$. $$x$$x"
    return:
      type: System.Int32
      description: "$x$x$Xxx 00$xxx Xxxxxxx xxxx xxxxx xxxxxxxxxxx xx xxx $xx$xxxxXxxxxxxxx$$xx$ xxx $xx$xxxXxxxxxxxx$$xx$ xxxxxxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxXxxxxxxxx$$xx$ xx xxx xx xxx xxxxx X$X000 xxxxxxx X$XXXX$ xx $xx$xxxXxxxxxxxx$$xx$ xx xxx xx xxx xxxxx X$XX00 xxxxxxx X$XXXX. $$x$$x"
  seealso:
  - type: System.Char.ConvertFromUtf32(System.Int32)
    commentId: M:System.Char.ConvertFromUtf32(System.Int32)
  - type: System.Text.UTF32Encoding
    commentId: T:System.Text.UTF32Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ConvertToUtf32(Char, Char)
- uid: System.Char.ConvertToUtf32(System.String,System.Int32)
  commentId: M:System.Char.ConvertToUtf32(System.String,System.Int32)
  id: ConvertToUtf32(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ConvertToUtf32(String, Int32)
  fullName: System.Char.ConvertToUtf32(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ConvertToUtf32
    path: src/mscorlib/src/System/Char.cs
    startLine: 961
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x XXX$00 xxxxxxx xxxxxxxxx xx xxxxxxxxx xxxx xx x xxxxxxxxx xxxxxxxx xx x xxxxxx xxxx x Xxxxxxx xxxx xxxxx.$$x$$x"
  syntax:
    content: public static int ConvertToUtf32(string s, int index)
    content.vb: Public Shared Function ConvertToUtf32(s As String, index As Integer) As Integer
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxxxxx xx xxxxxxxxx xxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxxx xxxx xx $xx$x$$xx$.$$x$$x"
    return:
      type: System.Int32
      description: "$x$x$Xxx 00$xxx Xxxxxxx xxxx xxxxx xxxxxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxxx xxxx xx xxx xxxxxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxxxxx xx xxx $xx$xxxxx$$xx$ xxxxxxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxx $xx$x$$xx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "$x$x$Xxx xxxxxxxxx xxxxx xxxxxxxx xxxxxxxx x xxxxxxxxx xxxx$ xxx xxxxxx xxx xxxxx xxxxxxxxx xx xxx xxxx xx xxx x xxxxx xxxx xxxxxxxxx xx xxx xxxxxx xxxxxxxxx xx xxx xxxx xx xxx x xxxxx xxx xxxxxxxxx. $$x$$x"
  seealso:
  - type: System.Char.ConvertFromUtf32(System.Int32)
    commentId: M:System.Char.ConvertFromUtf32(System.Int32)
  - type: System.Text.UTF32Encoding
    commentId: T:System.Text.UTF32Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ConvertToUtf32(String, Int32)
- uid: System.Char.Equals(System.Char)
  commentId: M:System.Char.Equals(System.Char)
  id: Equals(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: Equals(Char)
  fullName: System.Char.Equals(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Char.cs
    startLine: 114
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether this instance is equal to the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public bool Equals(char obj)
    content.vb: >-
      <NonVersionable>

      Public Function Equals(obj As Char) As Boolean
    parameters:
    - id: obj
      type: System.Char
      description: "$x$x$Xx xxxxxx xx xxxxxxx xx xxxx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx $xx$xxx$$xx$ xxxxxxxxx xxxxxx xxx xxxxx xx xxxx xxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Char.Equals(System.Object)
    commentId: M:System.Char.Equals(System.Object)
  implements:
  - System.IEquatable{System.Char}.Equals(System.Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Char.Equals(Char)
- uid: System.Char.Equals(System.Object)
  commentId: M:System.Char.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Char.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Char.cs
    startLine: 107
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxx x xxxxx xxxx xxxxxxxxx xxxxxxx xxxx xxxxxxxx xx xxxxx xx x xxxxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "$x$x$Xx xxxxxx xx xxxxxxx xxxx xxxx xxxxxxxx xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is an instance of <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.Char.CompareTo(System.Object)
    commentId: M:System.Char.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Char.Equals(Object)
- uid: System.Char.GetHashCode
  commentId: M:System.Char.GetHashCode
  id: GetHashCode
  parent: System.Char
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Char.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Char.cs
    startLine: 101
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxx xxx xxxx xxxx xxx xxxx xxxxxxxx.$$x$$x"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xxxx.$$x$$x"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Char.GetHashCode()
- uid: System.Char.GetNumericValue(System.Char)
  commentId: M:System.Char.GetNumericValue(System.Char)
  id: GetNumericValue(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: GetNumericValue(Char)
  fullName: System.Char.GetNumericValue(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetNumericValue
    path: src/mscorlib/src/System/Char.cs
    startLine: 819
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxxx Xxxxxxx xxxxxxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static double GetNumericValue(char c)
    content.vb: Public Shared Function GetNumericValue(c As Char) As Double
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.Double
      description: "$x$x$Xxx xxxxxxx xxxxx xx $xx$x$$xx$ xx xxxx xxxxxxxxx xxxxxxxxxx x xxxxxx$ xxxxxxxxx$ $0.0.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.GetNumericValue(Char)
- uid: System.Char.GetNumericValue(System.String,System.Int32)
  commentId: M:System.Char.GetNumericValue(System.String,System.Int32)
  id: GetNumericValue(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: GetNumericValue(String, Int32)
  fullName: System.Char.GetNumericValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetNumericValue
    path: src/mscorlib/src/System/Char.cs
    startLine: 824
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static double GetNumericValue(string s, int index)
    content.vb: Public Shared Function GetNumericValue(s As String, index As Integer) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Double
      description: "$x$x$Xxx xxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx xxxx xxxxxxxxx xxxxxxxxxx x xxxxxx$ xxxxxxxxx$ $0.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.GetNumericValue(String, Int32)
- uid: System.Char.IsControl(System.Char)
  commentId: M:System.Char.IsControl(System.Char)
  id: IsControl(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsControl(Char)
  fullName: System.Char.IsControl(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsControl
    path: src/mscorlib/src/System/Char.cs
    startLine: 503
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsControl(char c)
    content.vb: Public Shared Function IsControl(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsControl(Char)
- uid: System.Char.IsControl(System.String,System.Int32)
  commentId: M:System.Char.IsControl(System.String,System.Int32)
  id: IsControl(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsControl(String, Int32)
  fullName: System.Char.IsControl(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsControl
    path: src/mscorlib/src/System/Char.cs
    startLine: 511
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsControl(string s, int index)
    content.vb: Public Shared Function IsControl(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsControl(String, Int32)
- uid: System.Char.IsDigit(System.Char)
  commentId: M:System.Char.IsDigit(System.Char)
  id: IsDigit(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsDigit(Char)
  fullName: System.Char.IsDigit(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsDigit
    path: src/mscorlib/src/System/Char.cs
    startLine: 202
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsDigit(char c)
    content.vb: Public Shared Function IsDigit(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Char.IsNumber(System.Char)
    commentId: M:System.Char.IsNumber(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsDigit(Char)
- uid: System.Char.IsDigit(System.String,System.Int32)
  commentId: M:System.Char.IsDigit(System.String,System.Int32)
  id: IsDigit(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsDigit(String, Int32)
  fullName: System.Char.IsDigit(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsDigit
    path: src/mscorlib/src/System/Char.cs
    startLine: 526
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsDigit(string s, int index)
    content.vb: Public Shared Function IsDigit(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Char.IsNumber(System.Char)
    commentId: M:System.Char.IsNumber(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsDigit(String, Int32)
- uid: System.Char.IsHighSurrogate(System.Char)
  commentId: M:System.Char.IsHighSurrogate(System.Char)
  id: IsHighSurrogate(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsHighSurrogate(Char)
  fullName: System.Char.IsHighSurrogate(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsHighSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 839
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object is a high surrogate.</p>\n"
  syntax:
    content: public static bool IsHighSurrogate(char c)
    content.vb: Public Shared Function IsHighSurrogate(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxx xxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxx xxxx X$X000 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsHighSurrogate(Char)
- uid: System.Char.IsHighSurrogate(System.String,System.Int32)
  commentId: M:System.Char.IsHighSurrogate(System.String,System.Int32)
  id: IsHighSurrogate(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsHighSurrogate(String, Int32)
  fullName: System.Char.IsHighSurrogate(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsHighSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 844
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object at the specified position in a string is a high surrogate.</p>\n"
  syntax:
    content: public static bool IsHighSurrogate(string s, int index)
    content.vb: Public Shared Function IsHighSurrogate(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxx xxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxx xxxx X$X000 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxx $xx$x$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsHighSurrogate(String, Int32)
- uid: System.Char.IsLetter(System.Char)
  commentId: M:System.Char.IsLetter(System.Char)
  id: IsLetter(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLetter(Char)
  fullName: System.Char.IsLetter(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLetter
    path: src/mscorlib/src/System/Char.cs
    startLine: 231
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x Xxxxxxx xxxxxx. $$x$$x"
  syntax:
    content: public static bool IsLetter(char c)
    content.vb: Public Shared Function IsLetter(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLetter(Char)
- uid: System.Char.IsLetter(System.String,System.Int32)
  commentId: M:System.Char.IsLetter(System.String,System.Int32)
  id: IsLetter(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLetter(String, Int32)
  fullName: System.Char.IsLetter(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLetter
    path: src/mscorlib/src/System/Char.cs
    startLine: 541
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x Xxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsLetter(string s, int index)
    content.vb: Public Shared Function IsLetter(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLetter(String, Int32)
- uid: System.Char.IsLetterOrDigit(System.Char)
  commentId: M:System.Char.IsLetterOrDigit(System.Char)
  id: IsLetterOrDigit(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLetterOrDigit(Char)
  fullName: System.Char.IsLetterOrDigit(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLetterOrDigit
    path: src/mscorlib/src/System/Char.cs
    startLine: 354
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxx xx x xxxxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsLetterOrDigit(char c)
    content.vb: Public Shared Function IsLetterOrDigit(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxx xx x xxxxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLetterOrDigit(Char)
- uid: System.Char.IsLetterOrDigit(System.String,System.Int32)
  commentId: M:System.Char.IsLetterOrDigit(System.String,System.Int32)
  id: IsLetterOrDigit(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLetterOrDigit(String, Int32)
  fullName: System.Char.IsLetterOrDigit(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLetterOrDigit
    path: src/mscorlib/src/System/Char.cs
    startLine: 560
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxx xx x xxxxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsLetterOrDigit(string s, int index)
    content.vb: Public Shared Function IsLetterOrDigit(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxx xx x xxxxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLetterOrDigit(String, Int32)
- uid: System.Char.IsLower(System.Char)
  commentId: M:System.Char.IsLower(System.Char)
  id: IsLower(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLower(Char)
  fullName: System.Char.IsLower(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLower
    path: src/mscorlib/src/System/Char.cs
    startLine: 297
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsLower(char c)
    content.vb: Public Shared Function IsLower(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxxxxx xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Char.IsUpper(System.Char)
    commentId: M:System.Char.IsUpper(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLower(Char)
- uid: System.Char.IsLower(System.String,System.Int32)
  commentId: M:System.Char.IsLower(System.String,System.Int32)
  id: IsLower(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLower(String, Int32)
  fullName: System.Char.IsLower(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLower
    path: src/mscorlib/src/System/Char.cs
    startLine: 575
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsLower(string s, int index)
    content.vb: Public Shared Function IsLower(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxxxxx xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  - type: System.Char.IsUpper(System.Char)
    commentId: M:System.Char.IsUpper(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLower(String, Int32)
- uid: System.Char.IsLowSurrogate(System.Char)
  commentId: M:System.Char.IsLowSurrogate(System.Char)
  id: IsLowSurrogate(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLowSurrogate(Char)
  fullName: System.Char.IsLowSurrogate(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLowSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 859
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object is a low surrogate.</p>\n"
  syntax:
    content: public static bool IsLowSurrogate(char c)
    content.vb: Public Shared Function IsLowSurrogate(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxx xxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxx xxxx X$XX00 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLowSurrogate(Char)
- uid: System.Char.IsLowSurrogate(System.String,System.Int32)
  commentId: M:System.Char.IsLowSurrogate(System.String,System.Int32)
  id: IsLowSurrogate(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsLowSurrogate(String, Int32)
  fullName: System.Char.IsLowSurrogate(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLowSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 864
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object at the specified position in a string is a low surrogate.</p>\n"
  syntax:
    content: public static bool IsLowSurrogate(string s, int index)
    content.vb: Public Shared Function IsLowSurrogate(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxx xxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxx xxxx X$XX00 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxx $xx$x$$xx$. $$x$$x"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsLowSurrogate(String, Int32)
- uid: System.Char.IsNumber(System.Char)
  commentId: M:System.Char.IsNumber(System.Char)
  id: IsNumber(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsNumber(Char)
  fullName: System.Char.IsNumber(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsNumber
    path: src/mscorlib/src/System/Char.cs
    startLine: 608
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsNumber(char c)
    content.vb: Public Shared Function IsNumber(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Char.IsDigit(System.Char)
    commentId: M:System.Char.IsDigit(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsNumber(Char)
- uid: System.Char.IsNumber(System.String,System.Int32)
  commentId: M:System.Char.IsNumber(System.String,System.Int32)
  id: IsNumber(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsNumber(String, Int32)
  fullName: System.Char.IsNumber(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsNumber
    path: src/mscorlib/src/System/Char.cs
    startLine: 619
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsNumber(string s, int index)
    content.vb: Public Shared Function IsNumber(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  - type: System.Char.IsDigit(System.Char)
    commentId: M:System.Char.IsDigit(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsNumber(String, Int32)
- uid: System.Char.IsPunctuation(System.Char)
  commentId: M:System.Char.IsPunctuation(System.Char)
  id: IsPunctuation(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsPunctuation(Char)
  fullName: System.Char.IsPunctuation(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPunctuation
    path: src/mscorlib/src/System/Char.cs
    startLine: 329
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxxxxxxx xxxx.$$x$$x"
  syntax:
    content: public static bool IsPunctuation(char c)
    content.vb: Public Shared Function IsPunctuation(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxxxxxxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsPunctuation(Char)
- uid: System.Char.IsPunctuation(System.String,System.Int32)
  commentId: M:System.Char.IsPunctuation(System.String,System.Int32)
  id: IsPunctuation(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsPunctuation(String, Int32)
  fullName: System.Char.IsPunctuation(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPunctuation
    path: src/mscorlib/src/System/Char.cs
    startLine: 645
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxxxxxxx xxxx.$$x$$x"
  syntax:
    content: public static bool IsPunctuation(string s, int index)
    content.vb: Public Shared Function IsPunctuation(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxxxxxxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsPunctuation(String, Int32)
- uid: System.Char.IsSeparator(System.Char)
  commentId: M:System.Char.IsSeparator(System.Char)
  id: IsSeparator(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSeparator(Char)
  fullName: System.Char.IsSeparator(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSeparator
    path: src/mscorlib/src/System/Char.cs
    startLine: 682
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsSeparator(char c)
    content.vb: Public Shared Function IsSeparator(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Globalization.UnicodeCategory
    commentId: T:System.Globalization.UnicodeCategory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSeparator(Char)
- uid: System.Char.IsSeparator(System.String,System.Int32)
  commentId: M:System.Char.IsSeparator(System.String,System.Int32)
  id: IsSeparator(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSeparator(String, Int32)
  fullName: System.Char.IsSeparator(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSeparator
    path: src/mscorlib/src/System/Char.cs
    startLine: 690
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsSeparator(string s, int index)
    content.vb: Public Shared Function IsSeparator(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSeparator(String, Int32)
- uid: System.Char.IsSurrogate(System.Char)
  commentId: M:System.Char.IsSurrogate(System.Char)
  id: IsSurrogate(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSurrogate(Char)
  fullName: System.Char.IsSurrogate(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 705
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xxxxxxxxx xxx x xxxxxxxxx xxxx xxxx.$$x$$x"
  syntax:
    content: public static bool IsSurrogate(char c)
    content.vb: Public Shared Function IsSurrogate(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx xxxxxx x xxxx xxxxxxxxx xx x xxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Char.IsHighSurrogate(System.Char)
    commentId: M:System.Char.IsHighSurrogate(System.Char)
  - type: System.Char.IsLowSurrogate(System.Char)
    commentId: M:System.Char.IsLowSurrogate(System.Char)
  - type: System.Char.IsSurrogatePair(System.Char,System.Char)
    commentId: M:System.Char.IsSurrogatePair(System.Char,System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSurrogate(Char)
- uid: System.Char.IsSurrogate(System.String,System.Int32)
  commentId: M:System.Char.IsSurrogate(System.String,System.Int32)
  id: IsSurrogate(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSurrogate(String, Int32)
  fullName: System.Char.IsSurrogate(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSurrogate
    path: src/mscorlib/src/System/Char.cs
    startLine: 711
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xxx x xxxxxxxxx xxxx xxxx.$$x$$x"
  syntax:
    content: public static bool IsSurrogate(string s, int index)
    content.vb: Public Shared Function IsSurrogate(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxx x xxxx xxxxxxxxx xx x xxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Char.IsHighSurrogate(System.Char)
    commentId: M:System.Char.IsHighSurrogate(System.Char)
  - type: System.Char.IsLowSurrogate(System.Char)
    commentId: M:System.Char.IsLowSurrogate(System.Char)
  - type: System.Char.IsSurrogatePair(System.Char,System.Char)
    commentId: M:System.Char.IsSurrogatePair(System.Char,System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSurrogate(String, Int32)
- uid: System.Char.IsSurrogatePair(System.Char,System.Char)
  commentId: M:System.Char.IsSurrogatePair(System.Char,System.Char)
  id: IsSurrogatePair(System.Char,System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSurrogatePair(Char, Char)
  fullName: System.Char.IsSurrogatePair(System.Char, System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSurrogatePair
    path: src/mscorlib/src/System/Char.cs
    startLine: 894
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the two specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> objects form a surrogate pair.</p>\n"
  syntax:
    content: public static bool IsSurrogatePair(char highSurrogate, char lowSurrogate)
    content.vb: Public Shared Function IsSurrogatePair(highSurrogate As Char, lowSurrogate As Char) As Boolean
    parameters:
    - id: highSurrogate
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xx xxxxxxxx xx xxx xxxx xxxxxxxxx xx x xxxxxxxxx xxxx. $$x$$x"
    - id: lowSurrogate
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xx xxxxxxxx xx xxx xxx xxxxxxxxx xx x xxxxxxxxx xxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxx xxxxx xx xxx $xx$xxxxXxxxxxxxx$$xx$ xxxxxxxxx xxxxxx xxxx X$X000 xxxxxxx X$XXXX$ xxx xxx xxxxxxx xxxxx xx xxx $xx$xxxXxxxxxxxx$$xx$ xxxxxxxxx xxxxxx xxxx X$XX00 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Char.IsHighSurrogate(System.Char)
    commentId: M:System.Char.IsHighSurrogate(System.Char)
  - type: System.Char.IsLowSurrogate(System.Char)
    commentId: M:System.Char.IsLowSurrogate(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSurrogatePair(Char, Char)
- uid: System.Char.IsSurrogatePair(System.String,System.Int32)
  commentId: M:System.Char.IsSurrogatePair(System.String,System.Int32)
  id: IsSurrogatePair(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSurrogatePair(String, Int32)
  fullName: System.Char.IsSurrogatePair(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSurrogatePair
    path: src/mscorlib/src/System/Char.cs
    startLine: 879
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether two adjacent <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> objects at a specified position in a string form a surrogate pair.</p>\n"
  syntax:
    content: public static bool IsSurrogatePair(string s, int index)
    content.vb: Public Shared Function IsSurrogatePair(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xxxxxxxx xx xxx xxxx xx xxxxxxxxxx xx xxxxxxxx xxxxxx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx $xx$x$$xx$ xxxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxxxx xx xxxxxxxxx $xx$xxxxx$$xx$ xxx $xx$xxxxx$$xx$ $ 0$ xxx xxx xxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xxxxxx xxxx X$X000 xxxxxxx X$XXXX$ xxx xxx xxxxxxx xxxxx xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$$0 xxxxxx xxxx X$XX00 xxxxxxx X$XXXX$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Char.IsHighSurrogate(System.Char)
    commentId: M:System.Char.IsHighSurrogate(System.Char)
  - type: System.Char.IsLowSurrogate(System.Char)
    commentId: M:System.Char.IsLowSurrogate(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSurrogatePair(String, Int32)
- uid: System.Char.IsSymbol(System.Char)
  commentId: M:System.Char.IsSymbol(System.Char)
  id: IsSymbol(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSymbol(Char)
  fullName: System.Char.IsSymbol(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSymbol
    path: src/mscorlib/src/System/Char.cs
    startLine: 739
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx x xxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsSymbol(char c)
    content.vb: Public Shared Function IsSymbol(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx x xxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSymbol(Char)
- uid: System.Char.IsSymbol(System.String,System.Int32)
  commentId: M:System.Char.IsSymbol(System.String,System.Int32)
  id: IsSymbol(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsSymbol(String, Int32)
  fullName: System.Char.IsSymbol(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSymbol
    path: src/mscorlib/src/System/Char.cs
    startLine: 747
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx x xxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static bool IsSymbol(string s, int index)
    content.vb: Public Shared Function IsSymbol(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx x xxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsSymbol(String, Int32)
- uid: System.Char.IsUpper(System.Char)
  commentId: M:System.Char.IsUpper(System.Char)
  id: IsUpper(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsUpper(Char)
  fullName: System.Char.IsUpper(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsUpper
    path: src/mscorlib/src/System/Char.cs
    startLine: 281
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx xx xxxxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsUpper(char c)
    content.vb: Public Shared Function IsUpper(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx xx xxxxxxxxx xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Char.IsLower(System.Char)
    commentId: M:System.Char.IsLower(System.Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsUpper(Char)
- uid: System.Char.IsUpper(System.String,System.Int32)
  commentId: M:System.Char.IsUpper(System.String,System.Int32)
  id: IsUpper(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsUpper(String, Int32)
  fullName: System.Char.IsUpper(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsUpper
    path: src/mscorlib/src/System/Char.cs
    startLine: 762
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx xx xxxxxxxxx xxxxxx.$$x$$x"
  syntax:
    content: public static bool IsUpper(string s, int index)
    content.vb: Public Shared Function IsUpper(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx xx xxxxxxxxx xxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsUpper(String, Int32)
- uid: System.Char.IsWhiteSpace(System.Char)
  commentId: M:System.Char.IsWhiteSpace(System.Char)
  id: IsWhiteSpace(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsWhiteSpace(Char)
  fullName: System.Char.IsWhiteSpace(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsWhiteSpace
    path: src/mscorlib/src/System/Char.cs
    startLine: 266
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxxxxxxxxxx xx xxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsWhiteSpace(char c)
    content.vb: Public Shared Function IsWhiteSpace(c As Char) As Boolean
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx xxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.Globalization.UnicodeCategory
    commentId: T:System.Globalization.UnicodeCategory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsWhiteSpace(Char)
- uid: System.Char.IsWhiteSpace(System.String,System.Int32)
  commentId: M:System.Char.IsWhiteSpace(System.String,System.Int32)
  id: IsWhiteSpace(System.String,System.Int32)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IsWhiteSpace(String, Int32)
  fullName: System.Char.IsWhiteSpace(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsWhiteSpace
    path: src/mscorlib/src/System/Char.cs
    startLine: 781
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xx xxxxxxxxxxx xx xxxxx xxxxx.$$x$$x"
  syntax:
    content: public static bool IsWhiteSpace(string s, int index)
    content.vb: Public Shared Function IsWhiteSpace(s As String, index As Integer) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx. $$x$$x"
    - id: index
      type: System.Int32
      description: "$x$x$Xxx xxxxxxxx xx xxx xxxxxxxxx xx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxx $xx$xxxxx$$xx$ xx $xx$x$$xx$ xx xxxxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxx xxxxxxxx xx $xx$x$$xx$. $$x$$x"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.String
    commentId: T:System.String
  - type: System.Globalization.UnicodeCategory
    commentId: T:System.Globalization.UnicodeCategory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.IsWhiteSpace(String, Int32)
- uid: System.Char.Parse(System.String)
  commentId: M:System.Char.Parse(System.String)
  id: Parse(System.String)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Char.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Char.cs
    startLine: 170
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x"
  syntax:
    content: public static char Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Char
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxx xxxxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
    return:
      type: System.Char
      description: "$x$x$X Xxxxxxx xxxxxxxxx xxxxxxxxxx xx xxx xxxx xxxxxxxxx xx $xx$x$$xx$.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "$x$x$Xxx xxxxxx xx $xx$x$$xx$ xx xxx 0. $$x$$x"
  seealso:
  - type: System.Char.ToString
    commentId: M:System.Char.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.Parse(String)
- uid: System.Char.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Char.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.Char.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 365
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  nameWithType: Char.IComparable.CompareTo(Object)
  nameWithType.vb: Char.System.IComparable.CompareTo(Object)
- uid: System.Char.System#IConvertible#GetTypeCode
  commentId: M:System.Char.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.Char.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 366
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
  nameWithType: Char.IConvertible.GetTypeCode()
  nameWithType.vb: Char.System.IConvertible.GetTypeCode()
- uid: System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/Char.cs
    startLine: 429
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Note   This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx. Xx xxxxx xx xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  nameWithType: Char.IConvertible.ToBoolean(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Char.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/Char.cs
    startLine: 444
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Byte
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  nameWithType: Char.IConvertible.ToByte(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToByte(IFormatProvider)
- uid: System.Char.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/Char.cs
    startLine: 434
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Char
      description: "\n<p>The value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object unchanged.</p>\n"
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  nameWithType: Char.IConvertible.ToChar(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToChar(IFormatProvider)
- uid: System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/Char.cs
    startLine: 494
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Note   This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.DateTime
      description: "$x$x$Xx xxxxx xx xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  nameWithType: Char.IConvertible.ToDateTime(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/Char.cs
    startLine: 489
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Note   This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Decimal
      description: "$x$x$Xx xxxxx xx xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  nameWithType: Char.IConvertible.ToDecimal(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Char.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/Char.cs
    startLine: 484
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Note   This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Double
      description: "$x$x$Xx xxxxx xx xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  nameWithType: Char.IConvertible.ToDouble(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Char.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/Char.cs
    startLine: 449
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p> For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Int16
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  nameWithType: Char.IConvertible.ToInt16(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Char.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/Char.cs
    startLine: 459
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Int32
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  nameWithType: Char.IConvertible.ToInt32(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Char.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/Char.cs
    startLine: 469
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p> For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Int64
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  nameWithType: Char.IConvertible.ToInt64(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Char.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/Char.cs
    startLine: 439
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p> For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.SByte
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  nameWithType: Char.IConvertible.ToSByte(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Char.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/Char.cs
    startLine: 479
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Note   This conversion is not supported. Attempting to do so throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "$x$x$Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x"
    return:
      type: System.Single
      description: "$x$x$Xx xxxxx xx xxxxxxxx.$$x$$x"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "$x$x$Xxxx xxxxxxxxxx xx xxx xxxxxxxxx.$$x$$x"
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  nameWithType: Char.IConvertible.ToSingle(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Char.System#IConvertible#ToString(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToString(System.IFormatProvider)
  id: System#IConvertible#ToString(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToString(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 378
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: string IConvertible.ToString(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToString(provider As IFormatProvider) As String Implements IConvertible.ToString
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  name.vb: System.IConvertible.ToString(IFormatProvider)
  nameWithType: Char.IConvertible.ToString(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToString(IFormatProvider)
- uid: System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Char.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/Char.cs
    startLine: 499
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Object
      description: "$x$x$Xx xxxxxx xx xxx xxxxxxxxx xxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object cannot be converted to the type specified by the <em>type</em> parameter. </p>\n"
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  nameWithType: Char.IConvertible.ToType(Type, IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/Char.cs
    startLine: 454
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object. (Specify <strong>null</strong> because the <em>provider</em> parameter is ignored.)</p>\n"
    return:
      type: System.UInt16
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  nameWithType: Char.IConvertible.ToUInt16(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/Char.cs
    startLine: 464
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object. (Specify <strong>null</strong> because the <em>provider</em> parameter is ignored.)</p>\n"
    return:
      type: System.UInt32
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  nameWithType: Char.IConvertible.ToUInt32(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Char
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Char.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/Char.cs
    startLine: 474
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object. (Specify <strong>null</strong> because the <em>provider</em> parameter is ignored.)</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>The converted value of the current <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  nameWithType: Char.IConvertible.ToUInt64(IFormatProvider)
  nameWithType.vb: Char.System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Char.ToLower(System.Char)
  commentId: M:System.Char.ToLower(System.Char)
  id: ToLower(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToLower(Char)
  fullName: System.Char.ToLower(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToLower
    path: src/mscorlib/src/System/Char.cs
    startLine: 409
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxx.$$x$$x"
  syntax:
    content: public static char ToLower(char c)
    content.vb: Public Shared Function ToLower(c As Char) As Char
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xxxxxxxxxx xx $xx$x$$xx$$ xx xxx xxxxxxxxx xxxxx xx $xx$x$$xx$$ xx $xx$x$$xx$ xx xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx.$$x$$x"
  seealso:
  - type: System.String.ToLower
    commentId: M:System.String.ToLower
  - type: System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
    commentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ToLower(Char)
- uid: System.Char.ToLowerInvariant(System.Char)
  commentId: M:System.Char.ToLowerInvariant(System.Char)
  id: ToLowerInvariant(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToLowerInvariant(Char)
  fullName: System.Char.ToLowerInvariant(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToLowerInvariant
    path: src/mscorlib/src/System/Char.cs
    startLine: 415
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxx xxxxx xxx xxxxxx xxxxx xx xxx xxxxxxxxx xxxxxxx.$$x$$x"
  syntax:
    content: public static char ToLowerInvariant(char c)
    content.vb: Public Shared Function ToLowerInvariant(c As Char) As Char
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xxxxxxxxxx xx xxx $xx$x$$xx$ xxxxxxxxx$ xx xxx xxxxxxxxx xxxxx xx $xx$x$$xx$$ xx $xx$x$$xx$ xx xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx.$$x$$x"
  seealso:
  - type: System.String.ToLower
    commentId: M:System.String.ToLower
  - type: System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
    commentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
  - type: System.Globalization.CultureInfo.InvariantCulture
    commentId: P:System.Globalization.CultureInfo.InvariantCulture
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ToLowerInvariant(Char)
- uid: System.Char.ToString
  commentId: M:System.Char.ToString
  id: ToString
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Char.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Char.cs
    startLine: 144
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx xxxx xxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxx xx xxxx xxxxxxxx.$$x$$x"
  overridden: System.ValueType.ToString
  seealso:
  - type: System.Char.Parse(System.String)
    commentId: M:System.Char.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Char.ToString()
- uid: System.Char.ToString(System.Char)
  commentId: M:System.Char.ToString(System.Char)
  id: ToString(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToString(Char)
  fullName: System.Char.ToString(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Char.cs
    startLine: 164
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x"
  syntax:
    content: public static string ToString(char c)
    content.vb: Public Shared Function ToString(c As Char) As String
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.String
      description: "$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxx xx $xx$x$$xx$.$$x$$x"
  seealso:
  - type: System.Char.Parse(System.String)
    commentId: M:System.Char.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ToString(Char)
- uid: System.Char.ToUpper(System.Char)
  commentId: M:System.Char.ToUpper(System.Char)
  id: ToUpper(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToUpper(Char)
  fullName: System.Char.ToUpper(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUpper
    path: src/mscorlib/src/System/Char.cs
    startLine: 381
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxx.$$x$$x"
  syntax:
    content: public static char ToUpper(char c)
    content.vb: Public Shared Function ToUpper(c As Char) As Char
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xxxxxxxxxx xx $xx$x$$xx$$ xx xxx xxxxxxxxx xxxxx xx $xx$x$$xx$ xx $xx$x$$xx$ xx xxxxxxx xxxxxxxxx$ xxx xx xxxxxxxxx xxxxxxxxxx$ xx xx xxx xxxxxxxxxx.$$x$$x"
  seealso:
  - type: System.String.ToUpper
    commentId: M:System.String.ToUpper
  - type: System.Char.ToLower(System.Char,System.Globalization.CultureInfo)
    commentId: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ToUpper(Char)
- uid: System.Char.ToUpperInvariant(System.Char)
  commentId: M:System.Char.ToUpperInvariant(System.Char)
  id: ToUpperInvariant(System.Char)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: ToUpperInvariant(Char)
  fullName: System.Char.ToUpperInvariant(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUpperInvariant
    path: src/mscorlib/src/System/Char.cs
    startLine: 387
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx x Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxx xxxxx xxx xxxxxx xxxxx xx xxx xxxxxxxxx xxxxxxx.$$x$$x"
  syntax:
    content: public static char ToUpperInvariant(char c)
    content.vb: Public Shared Function ToUpperInvariant(c As Char) As Char
    parameters:
    - id: c
      type: System.Char
      description: "$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx. $$x$$x"
    return:
      type: System.Char
      description: "$x$x$Xxx xxxxxxxxx xxxxxxxxxx xx xxx $xx$x$$xx$ xxxxxxxxx$ xx xxx xxxxxxxxx xxxxx xx $xx$x$$xx$$ xx $xx$x$$xx$ xx xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx.$$x$$x"
  seealso:
  - type: System.String.ToUpper
    commentId: M:System.String.ToUpper
  - type: System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
    commentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
  - type: System.Globalization.CultureInfo.InvariantCulture
    commentId: P:System.Globalization.CultureInfo.InvariantCulture
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Char.ToUpperInvariant(Char)
- uid: System.Char.TryParse(System.String,System.Char@)
  commentId: M:System.Char.TryParse(System.String,System.Char@)
  id: TryParse(System.String,System.Char@)
  parent: System.Char
  langs:
  - csharp
  - vb
  name: TryParse(String, out Char)
  fullName: System.Char.TryParse(System.String, out System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Char.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Char.cs
    startLine: 182
  assemblies:
  - System.Runtime
  namespace: System
  summary: "$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx. X xxxxxx xxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxxx xxxxxxxxx xx xxxxxx.$$x$$x"
  syntax:
    content: public static bool TryParse(string s, out char result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Char) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxx xxxxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
    - id: result
      type: System.Char
      description: "$x$x$Xxxx xxxx xxxxxx xxxxxxx$ xxxxxxxx x Xxxxxxx xxxxxxxxx xxxxxxxxxx xx xxx xxxx xxxxxxxxx xx $xx$x$$xx$$ xx xxx xxxxxxxxxx xxxxxxxxx$ xx xx xxxxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxx. Xxx xxxxxxxxxx xxxxx xx xxx $xx$x$$xx$ xxxxxxxxx xx $xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxx xx $xx$x$$xx$ xx xxx 0. Xxxx xxxxxxxxx xx xxxxxx xxxxxxxxxxxxx. $$x$$x"
    return:
      type: System.Boolean
      description: "$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx $xx$x$$xx$ xxxxxxxxx xxx xxxxxxxxx xxxxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x"
  seealso:
  - type: System.Char.Parse(System.String)
    commentId: M:System.Char.Parse(System.String)
  - type: System.Char.ToString
    commentId: M:System.Char.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Char.TryParse(System.String, ByRef System.Char)
  name.vb: TryParse(String, ByRef Char)
  nameWithType: Char.TryParse(String, out Char)
  nameWithType.vb: Char.TryParse(String, ByRef Char)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
  nameWithType: IComparable
  commentId: T:System.IComparable
- uid: System.IComparable{System.Char}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Char>
  fullName: System.IComparable<System.Char>
  fullname.vb: System.IComparable(Of System.Char)
  name.vb: IComparable(Of Char)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IComparable<Char>
  nameWithType.vb: IComparable(Of Char)
  commentId: T:System.IComparable{System.Char}
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
  nameWithType: IConvertible
  commentId: T:System.IConvertible
- uid: System.IEquatable{System.Char}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Char>
  fullName: System.IEquatable<System.Char>
  fullname.vb: System.IEquatable(Of System.Char)
  name.vb: IEquatable(Of Char)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IEquatable<Char>
  nameWithType.vb: IEquatable(Of Char)
  commentId: T:System.IEquatable{System.Char}
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.IComparable`1
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IComparable<T>
  nameWithType.vb: IComparable(Of T)
  commentId: T:System.IComparable`1
- uid: System.IEquatable`1
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  commentId: T:System.IEquatable`1
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.IComparable{System.Char}.CompareTo(System.Char)
  parent: System.IComparable{System.Char}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Char)
  fullName: System.IComparable<System.Char>.CompareTo(System.Char)
  fullname.vb: System.IComparable(Of System.Char).CompareTo(System.Char)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.Char>.CompareTo
  - name: (
    fullName: (
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.Char).CompareTo
  - name: (
    fullName: (
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IComparable<Char>.CompareTo(Char)
  nameWithType.vb: IComparable(Of Char).CompareTo(Char)
  commentId: M:System.IComparable{System.Char}.CompareTo(System.Char)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  commentId: M:System.IComparable`1.CompareTo(`0)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IEquatable{System.Char}.Equals(System.Char)
  parent: System.IEquatable{System.Char}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Char)
  fullName: System.IEquatable<System.Char>.Equals(System.Char)
  fullname.vb: System.IEquatable(Of System.Char).Equals(System.Char)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Char>.Equals
  - name: (
    fullName: (
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Char).Equals
  - name: (
    fullName: (
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IEquatable<Char>.Equals(Char)
  nameWithType.vb: IEquatable(Of Char).Equals(Char)
  commentId: M:System.IEquatable{System.Char}.Equals(System.Char)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  commentId: M:System.IEquatable`1.Equals(`0)
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IComparable.CompareTo(Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IConvertible.GetTypeCode()
  commentId: M:System.IConvertible.GetTypeCode
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
  nameWithType: TypeCode
  commentId: T:System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToBoolean(IFormatProvider)
  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToByte(IFormatProvider)
  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToChar(IFormatProvider)
  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToDateTime(IFormatProvider)
  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToDecimal(IFormatProvider)
  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToDouble(IFormatProvider)
  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToInt16(IFormatProvider)
  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
  nameWithType: Int16
  commentId: T:System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToInt32(IFormatProvider)
  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToInt64(IFormatProvider)
  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToSByte(IFormatProvider)
  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
  nameWithType: SByte
  commentId: T:System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToSingle(IFormatProvider)
  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToString(IFormatProvider)
  commentId: M:System.IConvertible.ToString(System.IFormatProvider)
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToType(Type, IFormatProvider)
  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToUInt16(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
  nameWithType: UInt16
  commentId: T:System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToUInt32(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
  nameWithType: UInt32
  commentId: T:System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IConvertible.ToUInt64(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
  nameWithType: UInt64
  commentId: T:System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
  nameWithType: FormatException
  commentId: T:System.FormatException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
  nameWithType: InvalidCastException
  commentId: T:System.InvalidCastException
