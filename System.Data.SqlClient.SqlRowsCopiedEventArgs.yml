items:
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs
  commentId: T:System.Data.SqlClient.SqlRowsCopiedEventArgs
  id: SqlRowsCopiedEventArgs
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlRowsCopiedEventArgs
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 10
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Represents the set of arguments passed to the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventHandler\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public class SqlRowsCopiedEventArgs : EventArgs'
    content.vb: >-
      Public Class SqlRowsCopiedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: SqlRowsCopiedEventArgs
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  commentId: M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.SqlRowsCopiedEventArgs(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 15
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public SqlRowsCopiedEventArgs(long rowsCopied)
    content.vb: Public Sub New(rowsCopied As Long)
    parameters:
    - id: rowsCopied
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> that indicates the number of rows copied during the current bulk copy operation. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlRowsCopiedEventArgs.SqlRowsCopiedEventArgs(Int64)
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  id: Abort
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abort
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 20
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets or sets a value that indicates whether the bulk copy operation should be aborted.</p>\n"
  syntax:
    content: public bool Abort { get; set; }
    content.vb: Public Property Abort As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the bulk copy operation should be aborted; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: SqlRowsCopiedEventArgs.Abort
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  id: RowsCopied
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RowsCopied
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 32
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a value that returns the number of rows copied during the current bulk copy operation.</p>\n"
  syntax:
    content: public long RowsCopied { get; }
    content.vb: Public ReadOnly Property RowsCopied As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\n<strong>int</strong> that returns the number of rows copied.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlRowsCopiedEventArgs.RowsCopied
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: "XXX"
  fullName: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.EventArgs
  nameWithType: EventArgs
  commentId: T:System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: "XXX"
  fullName: System.EventArgs.Empty
  nameWithType: EventArgs.Empty
  commentId: F:System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
