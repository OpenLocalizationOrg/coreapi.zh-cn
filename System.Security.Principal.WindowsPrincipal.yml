items:
- uid: System.Security.Principal.WindowsPrincipal
  commentId: T:System.Security.Principal.WindowsPrincipal
  id: WindowsPrincipal
  parent: System.Security.Principal
  children:
  - System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  - System.Security.Principal.WindowsPrincipal.Identity
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  - System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsPrincipal
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 218
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Enables code to check the Windows group membership of a Windows user.</p>\n"
  syntax:
    content: 'public class WindowsPrincipal : ClaimsPrincipal, IPrincipal'
    content.vb: >-
      Public Class WindowsPrincipal
          Inherits ClaimsPrincipal
          Implements IPrincipal
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: WindowsPrincipal
- uid: System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  commentId: M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)
  id: '#ctor(System.Security.Principal.WindowsIdentity)'
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.WindowsPrincipal(System.Security.Principal.WindowsIdentity)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 220
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified <xref href=\"System.Security.Principal.WindowsIdentity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public WindowsPrincipal(WindowsIdentity ntIdentity)
    content.vb: Public Sub New(ntIdentity As WindowsIdentity)
    parameters:
    - id: ntIdentity
      type: System.Security.Principal.WindowsIdentity
      description: "\n<p>The object from which to construct the new instance of <xref href=\"System.Security.Principal.WindowsPrincipal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>ntIdentity</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WindowsPrincipal.WindowsPrincipal(WindowsIdentity)
- uid: System.Security.Principal.WindowsPrincipal.Identity
  commentId: P:System.Security.Principal.WindowsPrincipal.Identity
  id: Identity
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.Identity
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identity
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 221
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Gets the identity of the current principal.</p>\n"
  syntax:
    content: public override IIdentity Identity { get; }
    content.vb: Public Overrides ReadOnly Property Identity As IIdentity
    parameters: []
    return:
      type: System.Security.Principal.IIdentity
      description: "\n<p>The <xref href=\"System.Security.Principal.WindowsIdentity\" data-throw-if-not-resolved=\"false\"></xref> object of the current principal.</p>\n"
  overridden: System.Security.Claims.ClaimsPrincipal.Identity
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: WindowsPrincipal.Identity
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  id: IsInRole(System.Int32)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 222
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</p>\n"
  syntax:
    content: public virtual bool IsInRole(int rid)
    content.vb: Public Overridable Function IsInRole(rid As Integer) As Boolean
    parameters:
    - id: rid
      type: System.Int32
      description: "\n<p>The RID of the Windows user group in which to check for the principalâ€™s membership status. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WindowsPrincipal.IsInRole(Int32)
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  id: IsInRole(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 223
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</p>\n"
  syntax:
    content: public virtual bool IsInRole(SecurityIdentifier sid)
    content.vb: Public Overridable Function IsInRole(sid As SecurityIdentifier) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>A <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>  that uniquely identifies a Windows user group.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current principal is a member of the specified Windows user group; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sid</em> is <strong>null</strong>.</p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>Windows returned a Win32 error.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WindowsPrincipal.IsInRole(SecurityIdentifier)
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  id: IsInRole(System.Security.Principal.WindowsBuiltInRole)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 224
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Determines whether the current principal belongs to the Windows user group with the specified <xref href=\"System.Security.Principal.WindowsBuiltInRole\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual bool IsInRole(WindowsBuiltInRole role)
    content.vb: Public Overridable Function IsInRole(role As WindowsBuiltInRole) As Boolean
    parameters:
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "\n<p>One of the <xref href=\"System.Security.Principal.WindowsBuiltInRole\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current principal is a member of the specified Windows user group; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>role</em> is not a valid <xref href=\"System.Security.Principal.WindowsBuiltInRole\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WindowsPrincipal.IsInRole(WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  commentId: M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Security.Principal.WindowsPrincipal
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.WindowsPrincipal.IsInRole(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 225
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Determines whether the current principal belongs to the Windows user group with the specified name.</p>\n"
  syntax:
    content: public override bool IsInRole(string role)
    content.vb: Public Overrides Function IsInRole(role As String) As Boolean
    parameters:
    - id: role
      type: System.String
      description: "\n<p>The name of the Windows user group for which to check membership. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current principal is a member of the specified Windows user group; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  seealso:
  - type: System.Security.Principal.WindowsBuiltInRole
    commentId: T:System.Security.Principal.WindowsBuiltInRole
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: WindowsPrincipal.IsInRole(String)
references:
- uid: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal
  commentId: N:System.Security.Principal
  nameWithType: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  nameWithType: ClaimsPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  nameWithType: IPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.Clone()
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.Clone
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.Clone
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.Clone
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.Clone
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.Clone
  nameWithType: ClaimsPrincipal.Clone()
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryReader
    name: "XXX"
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryReader
    name: "XXX"
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  nameWithType: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
- uid: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType: ClaimsPrincipal.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity
  - name: "XXX"
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: "XXX"
    fullName: System.Security.Claims.ClaimsIdentity
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity
  - name: "XXX"
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: "XXX"
    fullName: System.Security.Claims.ClaimsIdentity
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  nameWithType: ClaimsPrincipal.AddIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  name.vb: AddIdentities(IEnumerable(Of ClaimsIdentity))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: "XXX"
    fullName: System.Security.Claims.ClaimsIdentity
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: "XXX"
    fullName: System.Security.Claims.ClaimsIdentity
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  nameWithType: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
  nameWithType.vb: ClaimsPrincipal.AddIdentities(IEnumerable(Of ClaimsIdentity))
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindAll(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  nameWithType: ClaimsPrincipal.FindAll(Predicate<Claim>)
  nameWithType.vb: ClaimsPrincipal.FindAll(Predicate(Of Claim))
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  nameWithType: ClaimsPrincipal.FindAll(String)
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindFirst(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  nameWithType: ClaimsPrincipal.FindFirst(Predicate<Claim>)
  nameWithType.vb: ClaimsPrincipal.FindFirst(Predicate(Of Claim))
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  nameWithType: ClaimsPrincipal.FindFirst(String)
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: HasClaim(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: "XXX"
    fullName: (
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: "XXX"
    fullName: System.Security.Claims.Claim
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  nameWithType: ClaimsPrincipal.HasClaim(Predicate<Claim>)
  nameWithType.vb: ClaimsPrincipal.HasClaim(Predicate(Of Claim))
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String, System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  nameWithType: ClaimsPrincipal.HasClaim(String, String)
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryWriter
    name: "XXX"
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryWriter
    name: "XXX"
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter)
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte[])
  fullname.vb: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte())
  name.vb: WriteTo(BinaryWriter, Byte())
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryWriter
    name: "XXX"
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.IO.BinaryWriter
    name: "XXX"
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter, Byte[])
  nameWithType.vb: ClaimsPrincipal.WriteTo(BinaryWriter, Byte())
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  commentId: P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  commentId: P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  commentId: P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  nameWithType: ClaimsPrincipal.CustomSerializationData
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.Claims
  commentId: P:System.Security.Claims.ClaimsPrincipal.Claims
  nameWithType: ClaimsPrincipal.Claims
- uid: System.Security.Claims.ClaimsPrincipal.Current
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.Current
  commentId: P:System.Security.Claims.ClaimsPrincipal.Current
  nameWithType: ClaimsPrincipal.Current
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.Identities
  commentId: P:System.Security.Claims.ClaimsPrincipal.Identities
  nameWithType: ClaimsPrincipal.Identities
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Claims
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims
  commentId: N:System.Security.Claims
  nameWithType: System.Security.Claims
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.WindowsIdentity
  commentId: T:System.Security.Principal.WindowsIdentity
  nameWithType: WindowsIdentity
- uid: System.Security.Claims.ClaimsPrincipal.Identity
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.Identity
  commentId: P:System.Security.Claims.ClaimsPrincipal.Identity
  nameWithType: ClaimsPrincipal.Identity
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.IIdentity
  commentId: T:System.Security.Principal.IIdentity
  nameWithType: IIdentity
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.SecurityIdentifier
  commentId: T:System.Security.Principal.SecurityIdentifier
  nameWithType: SecurityIdentifier
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.WindowsBuiltInRole
  commentId: T:System.Security.Principal.WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: "XXX"
  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
    name: "XXX"
    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  nameWithType: ClaimsPrincipal.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: "XXX"
  fullName: System.Security.SecurityException
  nameWithType: SecurityException
  commentId: T:System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
