items:
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  id: IDictionary
  parent: System.Collections
  children:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  - System.Collections.IDictionary.Clear
  - System.Collections.IDictionary.Contains(System.Object)
  - System.Collections.IDictionary.GetEnumerator
  - System.Collections.IDictionary.IsFixedSize
  - System.Collections.IDictionary.IsReadOnly
  - System.Collections.IDictionary.Item(System.Object)
  - System.Collections.IDictionary.Keys
  - System.Collections.IDictionary.Remove(System.Object)
  - System.Collections.IDictionary.Values
  langs:
  - csharp
  - vb
  name: IDictionary
  fullName: System.Collections.IDictionary
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IDictionary
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "$x$x$Xxxxxxxxxx x xxxxxxxxxx xxxxxxxxxx xx xxx$xxxxx xxxxx.$$x$$x"
  syntax:
    content: >-
      [ComVisible(true)]

      public interface IDictionary : ICollection, IEnumerable
    content.vb: >-
      <ComVisible(True)>

      Public Interface IDictionary
          Inherits ICollection
  seealso:
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  inheritedMembers:
  - System.Collections.ICollection.Count
  - System.Collections.ICollection.IsSynchronized
  - System.Collections.ICollection.SyncRoot
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IDictionary
- uid: System.Collections.IDictionary.IsFixedSize
  commentId: P:System.Collections.IDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsFixedSize
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 58
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Gets a value indicating whether the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object has a fixed size.</p>\n"
  syntax:
    content: bool IsFixedSize { get; }
    content.vb: ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object has a fixed size; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IDictionary.IsFixedSize
- uid: System.Collections.IDictionary.IsReadOnly
  commentId: P:System.Collections.IDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsReadOnly
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 55
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Gets a value indicating whether the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  syntax:
    content: bool IsReadOnly { get; }
    content.vb: ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object is read-only; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IDictionary.IsReadOnly
- uid: System.Collections.IDictionary.Item(System.Object)
  commentId: P:System.Collections.IDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Item[Object]
  fullName: System.Collections.IDictionary.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: this[]
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "$x$x$Xxxx xx xxxx xxx xxxxxxx xxxx xxx xxxxxxxxx xxx.$$x$$x"
  syntax:
    content: object this[object key] { get; set; }
    content.vb: Property Item(key As Object) As Object
    parameters:
    - id: key
      type: System.Object
      description: "$x$x$Xxx xxx xx xxx xxxxxxx xx xxx xx xxx. $$x$$x"
    return:
      type: System.Object
      description: "$x$x$Xxx xxxxxxx xxxx xxx xxxxxxxxx xxx$ xx $xxxxxx$xxxx$$xxxxxx$ xx xxx xxx xxxx xxx xxxxx.$$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The property is set and the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n<p>-or- </p>\n<p>The property is set, <em>key</em> does not exist in the collection, and the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> has a fixed size. </p>\n"
  seealso:
  - type: System.Collections.IDictionary.Add(System.Object,System.Object)
    commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Collections.IDictionary.Item(System.Object)
  name.vb: Item(Object)
  nameWithType: IDictionary.Item[Object]
  nameWithType.vb: IDictionary.Item(Object)
- uid: System.Collections.IDictionary.Keys
  commentId: P:System.Collections.IDictionary.Keys
  id: Keys
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.IDictionary.Keys
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Keys
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Gets an <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> object containing the keys of the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: ICollection Keys { get; }
    content.vb: ReadOnly Property Keys As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "\n<p>An <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> object containing the keys of the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IDictionary.Keys
- uid: System.Collections.IDictionary.Values
  commentId: P:System.Collections.IDictionary.Values
  id: Values
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Collections.IDictionary.Values
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Values
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 40
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Gets an <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> object containing the values in the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: ICollection Values { get; }
    content.vb: ReadOnly Property Values As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "\n<p>An <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> object containing the values in the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IDictionary.Values
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Adds an element with the provided key and value to the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void Add(object key, object value)
    content.vb: Sub Add(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to use as the key of the element to add. </p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to use as the value of the element to add. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An element with the same key already exists in the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> is read-only.</p>\n<p>-or- </p>\n<p>The <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> has a fixed size. </p>\n"
  seealso:
  - type: System.Collections.IDictionary.Item(System.Object)
    commentId: P:System.Collections.IDictionary.Item(System.Object)
  nameWithType: IDictionary.Add(Object, Object)
- uid: System.Collections.IDictionary.Clear
  commentId: M:System.Collections.IDictionary.Clear
  id: Clear
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clear
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 53
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Removes all elements from the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  nameWithType: IDictionary.Clear()
- uid: System.Collections.IDictionary.Contains(System.Object)
  commentId: M:System.Collections.IDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Contains
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 46
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Determines whether the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object contains an element with the specified key.</p>\n"
  syntax:
    content: bool Contains(object key)
    content.vb: Function Contains(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The key to locate in the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains an element with the key; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  nameWithType: IDictionary.Contains(Object)
- uid: System.Collections.IDictionary.GetEnumerator
  commentId: M:System.Collections.IDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEnumerator
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 62
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Returns an <xref href=\"System.Collections.IDictionaryEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object for the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: IDictionaryEnumerator GetEnumerator()
    content.vb: Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "\n<p>An <xref href=\"System.Collections.IDictionaryEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object for the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Collections.IDictionaryEnumerator
    commentId: T:System.Collections.IDictionaryEnumerator
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  nameWithType: IDictionary.GetEnumerator()
- uid: System.Collections.IDictionary.Remove(System.Object)
  commentId: M:System.Collections.IDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remove
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: "\n<p>Removes the element with the specified key from the <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void Remove(object key)
    content.vb: Sub Remove(key As Object)
    parameters:
    - id: key
      type: System.Object
      description: "$x$x$Xxx xxx xx xxx xxxxxxx xx xxxxxx. $$x$$x"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "$x$x$$x$xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$. $$x$$x"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n<p>-or- </p>\n<p>The <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> has a fixed size. </p>\n"
  nameWithType: IDictionary.Remove(Object)
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
  nameWithType: ICollection.Count
  commentId: P:System.Collections.ICollection.Count
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
  nameWithType: ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
  nameWithType: ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection.CopyTo(Array, Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
  nameWithType: ICollection
  commentId: T:System.Collections.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
