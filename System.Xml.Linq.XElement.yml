items:
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  id: XElement
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)
  - System.Xml.Linq.XElement.AncestorsAndSelf
  - System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.Attributes
  - System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.DescendantNodesAndSelf
  - System.Xml.Linq.XElement.DescendantsAndSelf
  - System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.EmptySequence
  - System.Xml.Linq.XElement.FirstAttribute
  - System.Xml.Linq.XElement.GetDefaultNamespace
  - System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  - System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XElement.HasAttributes
  - System.Xml.Linq.XElement.HasElements
  - System.Xml.Linq.XElement.IsEmpty
  - System.Xml.Linq.XElement.LastAttribute
  - System.Xml.Linq.XElement.Load(System.IO.Stream)
  - System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(System.IO.TextReader)
  - System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(System.String)
  - System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(System.Xml.XmlReader)
  - System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Name
  - System.Xml.Linq.XElement.NodeType
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  - System.Xml.Linq.XElement.Parse(System.String)
  - System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.RemoveAll
  - System.Xml.Linq.XElement.RemoveAttributes
  - System.Xml.Linq.XElement.ReplaceAll(System.Object)
  - System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  - System.Xml.Linq.XElement.Save(System.IO.Stream)
  - System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XElement.Save(System.IO.TextWriter)
  - System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)
  - System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.SetValue(System.Object)
  - System.Xml.Linq.XElement.Value
  - System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XElement
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.Manual.cs
    startLine: 10
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents an XML element.</p>\n"
  syntax:
    content: 'public class XElement : XContainer, Serialization.IXmlSerializable'
    content.vb: >-
      Public Class XElement
          Inherits XContainer
          Implements Serialization.IXmlSerializable
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  - System.Xml.Linq.XContainer
  implements:
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Xml.Linq.XContainer.FirstNode
  - System.Xml.Linq.XContainer.LastNode
  - System.Xml.Linq.XContainer.Add(System.Object)
  - System.Xml.Linq.XContainer.Add(System.Object[])
  - System.Xml.Linq.XContainer.AddFirst(System.Object)
  - System.Xml.Linq.XContainer.AddFirst(System.Object[])
  - System.Xml.Linq.XContainer.CreateWriter
  - System.Xml.Linq.XContainer.DescendantNodes
  - System.Xml.Linq.XContainer.Descendants
  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Elements
  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Nodes
  - System.Xml.Linq.XContainer.RemoveNodes
  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  - System.Xml.Linq.XNode.DocumentOrderComparer
  - System.Xml.Linq.XNode.EqualityComparer
  - System.Xml.Linq.XNode.NextNode
  - System.Xml.Linq.XNode.PreviousNode
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  - System.Xml.Linq.XNode.Ancestors
  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.CreateReader
  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.ElementsAfterSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ElementsBeforeSelf
  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.NodesAfterSelf
  - System.Xml.Linq.XNode.NodesBeforeSelf
  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  - System.Xml.Linq.XNode.Remove
  - System.Xml.Linq.XNode.ReplaceWith(System.Object)
  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(System.Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(System.Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: XElement
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  id: '#ctor(System.Xml.Linq.XElement)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XElement)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 202
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class from another <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public XElement(XElement other)
    content.vb: Public Sub New(other As XElement)
    parameters:
    - id: other
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> object to copy from.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.XElement(XElement)
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  id: '#ctor(System.Xml.Linq.XName)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 203
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name. </p>\n"
  syntax:
    content: public XElement(XName name)
    content.vb: Public Sub New(name As XName)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.XElement(XName)
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  id: '#ctor(System.Xml.Linq.XName,System.Object)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 204
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and content.</p>\n"
  syntax:
    content: public XElement(XName name, object content)
    content.vb: Public Sub New(name As XName, content As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the element name.</p>\n"
    - id: content
      type: System.Object
      description: "\n<p>The contents of the element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.XElement(XName, Object)
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  id: '#ctor(System.Xml.Linq.XName,System.Object[])'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object[])
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 205
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and content.</p>\n"
  syntax:
    content: public XElement(XName name, params object[] content)
    content.vb: Public Sub New(name As XName, ParamArray content As Object())
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the element name.</p>\n"
    - id: content
      type: System.Object[]
      description: "\n<p>The initial content of the element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object())
  name.vb: XElement(XName, Object())
  nameWithType: XElement.XElement(XName, Object[])
  nameWithType.vb: XElement.XElement(XName, Object())
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)
  id: '#ctor(System.Xml.Linq.XStreamingElement)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XStreamingElement)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 206
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class from an <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public XElement(XStreamingElement other)
    content.vb: Public Sub New(other As XStreamingElement)
    parameters:
    - id: other
      type: System.Xml.Linq.XStreamingElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> that contains unevaluated queries that will be iterated for the contents of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.XElement(XStreamingElement)
- uid: System.Xml.Linq.XElement.EmptySequence
  commentId: P:System.Xml.Linq.XElement.EmptySequence
  id: EmptySequence
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.EmptySequence
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EmptySequence
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 207
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets an empty collection of elements.</p>\n"
  syntax:
    content: public static IEnumerable<XElement> EmptySequence { get; }
    content.vb: Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XElement)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains an empty collection.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: XElement.EmptySequence
- uid: System.Xml.Linq.XElement.FirstAttribute
  commentId: P:System.Xml.Linq.XElement.FirstAttribute
  id: FirstAttribute
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.FirstAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FirstAttribute
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 208
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the first attribute of this element.</p>\n"
  syntax:
    content: public XAttribute FirstAttribute { get; }
    content.vb: Public ReadOnly Property FirstAttribute As XAttribute
    parameters: []
    return:
      type: System.Xml.Linq.XAttribute
      description: "\n<p>An <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the first attribute of this element.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XElement.FirstAttribute
- uid: System.Xml.Linq.XElement.HasAttributes
  commentId: P:System.Xml.Linq.XElement.HasAttributes
  id: HasAttributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.HasAttributes
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasAttributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 209
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets a value indicating whether this element has at least one attribute.</p>\n"
  syntax:
    content: public bool HasAttributes { get; }
    content.vb: Public ReadOnly Property HasAttributes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this element has at least one attribute; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XElement.HasAttributes
- uid: System.Xml.Linq.XElement.HasElements
  commentId: P:System.Xml.Linq.XElement.HasElements
  id: HasElements
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.HasElements
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasElements
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 210
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets a value indicating whether this element has at least one child element.</p>\n"
  syntax:
    content: public bool HasElements { get; }
    content.vb: Public ReadOnly Property HasElements As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this element has at least one child element; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XElement.HasElements
- uid: System.Xml.Linq.XElement.IsEmpty
  commentId: P:System.Xml.Linq.XElement.IsEmpty
  id: IsEmpty
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 211
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets a value indicating whether this element contains no content.</p>\n"
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this element contains no content; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XElement.IsEmpty
- uid: System.Xml.Linq.XElement.LastAttribute
  commentId: P:System.Xml.Linq.XElement.LastAttribute
  id: LastAttribute
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.LastAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastAttribute
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 212
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the last attribute of this element.</p>\n"
  syntax:
    content: public XAttribute LastAttribute { get; }
    content.vb: Public ReadOnly Property LastAttribute As XAttribute
    parameters: []
    return:
      type: System.Xml.Linq.XAttribute
      description: "\n<p>An <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the last attribute of this element.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XElement.LastAttribute
- uid: System.Xml.Linq.XElement.Name
  commentId: P:System.Xml.Linq.XElement.Name
  id: Name
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 213
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the name of this element.</p>\n"
  syntax:
    content: public XName Name { get; set; }
    content.vb: Public Property Name As XName
    parameters: []
    return:
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of this element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XElement.Name
- uid: System.Xml.Linq.XElement.NodeType
  commentId: P:System.Xml.Linq.XElement.NodeType
  id: NodeType
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 214
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the node type for this node.</p>\n"
  syntax:
    content: public override XmlNodeType NodeType { get; }
    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: "\n<p>The node type. For <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Element\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Xml.Linq.XObject.NodeType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: XElement.NodeType
- uid: System.Xml.Linq.XElement.Value
  commentId: P:System.Xml.Linq.XElement.Value
  id: Value
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 215
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the concatenated text contents of this element.</p>\n"
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XElement.Value
- uid: System.Xml.Linq.XElement.AncestorsAndSelf
  commentId: M:System.Xml.Linq.XElement.AncestorsAndSelf
  id: AncestorsAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.AncestorsAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AncestorsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 216
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a collection of elements that contain this element, and the ancestors of this element. </p>\n"
  syntax:
    content: public IEnumerable<XElement> AncestorsAndSelf()
    content.vb: Public Function AncestorsAndSelf As IEnumerable(Of XElement)
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> of elements that contain this element, and the ancestors of this element. </p>\n"
  seealso:
  - type: System.Xml.Linq.XNode.Ancestors
    commentId: M:System.Xml.Linq.XNode.Ancestors
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.AncestorsAndSelf()
- uid: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  id: AncestorsAndSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AncestorsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 217
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  syntax:
    content: public IEnumerable<XElement> AncestorsAndSelf(XName name)
    content.vb: Public Function AncestorsAndSelf(name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>The <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> to match.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contain this element, and the ancestors of this element. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  seealso:
  - type: System.Xml.Linq.XNode.Ancestors
    commentId: M:System.Xml.Linq.XNode.Ancestors
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.AncestorsAndSelf(XName)
- uid: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  id: Attribute(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attribute
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 218
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns the <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that has the specified <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XAttribute Attribute(XName name)
    content.vb: Public Function Attribute(name As XName) As XAttribute
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>The <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> to get.</p>\n"
    return:
      type: System.Xml.Linq.XAttribute
      description: "\n<p>An <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> that has the specified <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref>; <strong>null</strong> if there is no attribute with the specified name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Attribute(XName)
- uid: System.Xml.Linq.XElement.Attributes
  commentId: M:System.Xml.Linq.XElement.Attributes
  id: Attributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Attributes()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 219
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a collection of attributes of this element.</p>\n"
  syntax:
    content: public IEnumerable<XAttribute> Attributes()
    content.vb: Public Function Attributes As IEnumerable(Of XAttribute)
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> of attributes of this element.</p>\n"
  seealso:
  - type: System.Xml.Linq.XContainer.Elements
    commentId: M:System.Xml.Linq.XContainer.Elements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Attributes()
- uid: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  id: Attributes(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 220
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a filtered collection of attributes of this element. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  syntax:
    content: public IEnumerable<XAttribute> Attributes(XName name)
    content.vb: Public Function Attributes(name As XName) As IEnumerable(Of XAttribute)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>The <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> to match.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the attributes of this element. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Attributes(XName)
- uid: System.Xml.Linq.XElement.DescendantNodesAndSelf
  commentId: M:System.Xml.Linq.XElement.DescendantNodesAndSelf
  id: DescendantNodesAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.DescendantNodesAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantNodesAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 221
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.</p>\n"
  syntax:
    content: public IEnumerable<XNode> DescendantNodesAndSelf()
    content.vb: Public Function DescendantNodesAndSelf As IEnumerable(Of XNode)
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> that contain this element, and all descendant nodes of this element, in document order.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.DescendantNodesAndSelf()
- uid: System.Xml.Linq.XElement.DescendantsAndSelf
  commentId: M:System.Xml.Linq.XElement.DescendantsAndSelf
  id: DescendantsAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.DescendantsAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 222
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</p>\n"
  syntax:
    content: public IEnumerable<XElement> DescendantsAndSelf()
    content.vb: Public Function DescendantsAndSelf As IEnumerable(Of XElement)
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> of elements that contain this element, and all descendant elements of this element, in document order.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.DescendantsAndSelf()
- uid: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  id: DescendantsAndSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DescendantsAndSelf
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 223
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  syntax:
    content: public IEnumerable<XElement> DescendantsAndSelf(XName name)
    content.vb: Public Function DescendantsAndSelf(name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>The <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> to match.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> are included in the collection.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.DescendantsAndSelf(XName)
- uid: System.Xml.Linq.XElement.GetDefaultNamespace
  commentId: M:System.Xml.Linq.XElement.GetDefaultNamespace
  id: GetDefaultNamespace
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.GetDefaultNamespace()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultNamespace
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 224
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the default <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XNamespace GetDefaultNamespace()
    content.vb: Public Function GetDefaultNamespace As XNamespace
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> that contains the default namespace of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.GetDefaultNamespace()
- uid: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  commentId: M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  id: GetNamespaceOfPrefix(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNamespaceOfPrefix
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 225
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the namespace associated with a particular prefix for this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XNamespace GetNamespaceOfPrefix(string prefix)
    content.vb: Public Function GetNamespaceOfPrefix(prefix As String) As XNamespace
    parameters:
    - id: prefix
      type: System.String
      description: "\n<p>A string that contains the namespace prefix to look up.</p>\n"
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> for the namespace associated with the prefix for this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.GetNamespaceOfPrefix(String)
- uid: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  id: GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPrefixOfNamespace
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 226
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the prefix associated with a namespace for this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string GetPrefixOfNamespace(XNamespace ns)
    content.vb: Public Function GetPrefixOfNamespace(ns As XNamespace) As String
    parameters:
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to look up.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace prefix.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.GetPrefixOfNamespace(XNamespace)
- uid: System.Xml.Linq.XElement.Load(System.IO.Stream)
  commentId: M:System.Xml.Linq.XElement.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 227
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Creates a new <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> instance by using the specified stream.</p>\n"
  syntax:
    content: public static XElement Load(Stream stream)
    content.vb: Public Shared Function Load(stream As Stream) As XElement
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream that contains the XML data.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> object used to read the data that is contained in the stream.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(Stream)
- uid: System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)
  commentId: M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)
  id: Load(System.IO.Stream,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.IO.Stream, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 228
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Creates a new <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</p>\n"
  syntax:
    content: public static XElement Load(Stream stream, LoadOptions options)
    content.vb: Public Shared Function Load(stream As Stream, options As LoadOptions) As XElement
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream containing the XML data.</p>\n"
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.LoadOptions\" data-throw-if-not-resolved=\"false\"></xref> object that specifies whether to load base URI and line information.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> object used to read the data that the stream contains.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(Stream, LoadOptions)
- uid: System.Xml.Linq.XElement.Load(System.IO.TextReader)
  commentId: M:System.Xml.Linq.XElement.Load(System.IO.TextReader)
  id: Load(System.IO.TextReader)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 229
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public static XElement Load(TextReader textReader)
    content.vb: Public Shared Function Load(textReader As TextReader) As XElement
    parameters:
    - id: textReader
      type: System.IO.TextReader
      description: "\n<p>A <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> that will be read for the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML that was read from the specified <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(TextReader)
- uid: System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)
  commentId: M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)
  id: Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.IO.TextReader, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 230
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>, optionally preserving white space and retaining line information. </p>\n"
  syntax:
    content: public static XElement Load(TextReader textReader, LoadOptions options)
    content.vb: Public Shared Function Load(textReader As TextReader, options As LoadOptions) As XElement
    parameters:
    - id: textReader
      type: System.IO.TextReader
      description: "\n<p>A <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> that will be read for the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.LoadOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML that was read from the specified <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(TextReader, LoadOptions)
- uid: System.Xml.Linq.XElement.Load(System.String)
  commentId: M:System.Xml.Linq.XElement.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 231
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a file.</p>\n"
  syntax:
    content: public static XElement Load(string uri)
    content.vb: Public Shared Function Load(uri As String) As XElement
    parameters:
    - id: uri
      type: System.String
      description: "\n<p>A URI string referencing the file to load into a new <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the contents of the specified file.</p>\n"
  seealso:
  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)
    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)
  - type: System.Xml.Linq.XElement.Parse(System.String)
    commentId: M:System.Xml.Linq.XElement.Parse(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(String)
- uid: System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)
  commentId: M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)
  id: Load(System.String,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.String, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 232
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a file, optionally preserving white space, setting the base URI, and retaining line information.</p>\n"
  syntax:
    content: public static XElement Load(string uri, LoadOptions options)
    content.vb: Public Shared Function Load(uri As String, options As LoadOptions) As XElement
    parameters:
    - id: uri
      type: System.String
      description: "\n<p>A URI string referencing the file to load into an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.LoadOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the contents of the specified file.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(String, LoadOptions)
- uid: System.Xml.Linq.XElement.Load(System.Xml.XmlReader)
  commentId: M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 233
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public static XElement Load(XmlReader reader)
    content.vb: Public Shared Function Load(reader As XmlReader) As XElement
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>A <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> that will be read for the content of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML that was read from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(XmlReader)
- uid: System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)
  commentId: M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)
  id: Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Load(System.Xml.XmlReader, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Load
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 234
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Loads an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>, optionally preserving white space, setting the base URI, and retaining line information.</p>\n"
  syntax:
    content: public static XElement Load(XmlReader reader, LoadOptions options)
    content.vb: Public Shared Function Load(reader As XmlReader, options As LoadOptions) As XElement
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>A <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> that will be read for the content of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.LoadOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML that was read from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Load(XmlReader, LoadOptions)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  id: op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Boolean)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 235
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator bool (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Boolean
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Boolean)
  name.vb: Narrowing(XElement to Boolean)
  nameWithType: XElement.Explicit(XElement to Boolean)
  nameWithType.vb: XElement.Narrowing(XElement to Boolean)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  id: op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 237
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator DateTime(XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Date
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.DateTime)
  name.vb: Narrowing(XElement to DateTime)
  nameWithType: XElement.Explicit(XElement to DateTime)
  nameWithType.vb: XElement.Narrowing(XElement to DateTime)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset
  id: op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 239
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator DateTimeOffset(XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>A <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.DateTimeOffset)
  name.vb: Narrowing(XElement to DateTimeOffset)
  nameWithType: XElement.Explicit(XElement to DateTimeOffset)
  nameWithType.vb: XElement.Narrowing(XElement to DateTimeOffset)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  id: op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 241
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator decimal (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Decimal
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>A <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Decimal)
  name.vb: Narrowing(XElement to Decimal)
  nameWithType: XElement.Explicit(XElement to Decimal)
  nameWithType.vb: XElement.Narrowing(XElement to Decimal)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  id: op_Explicit(System.Xml.Linq.XElement)~System.Double
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Double)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 243
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator double (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Double
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Double
      description: "\n<p>A <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Double)
  name.vb: Narrowing(XElement to Double)
  nameWithType: XElement.Explicit(XElement to Double)
  nameWithType.vb: XElement.Narrowing(XElement to Double)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  id: op_Explicit(System.Xml.Linq.XElement)~System.Guid
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Guid)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 245
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator Guid(XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Guid
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Guid
      description: "\n<p>A <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Guid)
  name.vb: Narrowing(XElement to Guid)
  nameWithType: XElement.Explicit(XElement to Guid)
  nameWithType.vb: XElement.Narrowing(XElement to Guid)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 247
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator int (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Integer
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int32)
  name.vb: Narrowing(XElement to Int32)
  nameWithType: XElement.Explicit(XElement to Int32)
  nameWithType.vb: XElement.Narrowing(XElement to Int32)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 249
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator long (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Long
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>A <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int64)
  name.vb: Narrowing(XElement to Int64)
  nameWithType: XElement.Explicit(XElement to Int64)
  nameWithType.vb: XElement.Narrowing(XElement to Int64)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Boolean>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 251
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator bool ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Boolean?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Boolean))
  name.vb: Narrowing(XElement to Nullable(Of Boolean))
  nameWithType: XElement.Explicit(XElement to Nullable<Boolean>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Boolean))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.DateTime>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 253
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator DateTime? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Date?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.DateTime))
  name.vb: Narrowing(XElement to Nullable(Of DateTime))
  nameWithType: XElement.Explicit(XElement to Nullable<DateTime>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of DateTime))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.DateTimeOffset>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 255
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator DateTimeOffset? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to an <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.DateTimeOffset))
  name.vb: Narrowing(XElement to Nullable(Of DateTimeOffset))
  nameWithType: XElement.Explicit(XElement to Nullable<DateTimeOffset>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of DateTimeOffset))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Decimal>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 257
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator decimal ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Decimal?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Decimal}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Decimal))
  name.vb: Narrowing(XElement to Nullable(Of Decimal))
  nameWithType: XElement.Explicit(XElement to Nullable<Decimal>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Decimal))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Double>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 259
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator double ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Double?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Double}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Double))
  name.vb: Narrowing(XElement to Nullable(Of Double))
  nameWithType: XElement.Explicit(XElement to Nullable<Double>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Double))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Guid>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 261
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator Guid? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Guid?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Guid}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Guid))
  name.vb: Narrowing(XElement to Nullable(Of Guid))
  nameWithType: XElement.Explicit(XElement to Nullable<Guid>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Guid))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int32>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 263
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator int ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Integer?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Int32}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int32))
  name.vb: Narrowing(XElement to Nullable(Of Int32))
  nameWithType: XElement.Explicit(XElement to Nullable<Int32>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int32))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int64>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 265
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator long ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Long?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Int64}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int64))
  name.vb: Narrowing(XElement to Nullable(Of Int64))
  nameWithType: XElement.Explicit(XElement to Nullable<Int64>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int64))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Single>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 267
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator float ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Single?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.Single}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Single))
  name.vb: Narrowing(XElement to Nullable(Of Single))
  nameWithType: XElement.Explicit(XElement to Nullable<Single>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Single))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.TimeSpan>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 269
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator TimeSpan? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As TimeSpan?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.TimeSpan))
  name.vb: Narrowing(XElement to Nullable(Of TimeSpan))
  nameWithType: XElement.Explicit(XElement to Nullable<TimeSpan>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of TimeSpan))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt32>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 271
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator uint ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As UInteger?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.UInt32}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt32))
  name.vb: Narrowing(XElement to Nullable(Of UInt32))
  nameWithType: XElement.Explicit(XElement to Nullable<UInt32>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt32))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt64>)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 273
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ulong ? (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As ULong?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Nullable{System.UInt64}
      description: "\n<p>A <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt64))
  name.vb: Narrowing(XElement to Nullable(Of UInt64))
  nameWithType: XElement.Explicit(XElement to Nullable<UInt64>)
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt64))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  id: op_Explicit(System.Xml.Linq.XElement)~System.Single
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 275
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator float (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As Single
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Single
      description: "\n<p>A <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Single)
  name.vb: Narrowing(XElement to Single)
  nameWithType: XElement.Explicit(XElement to Single)
  nameWithType.vb: XElement.Narrowing(XElement to Single)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  id: op_Explicit(System.Xml.Linq.XElement)~System.String
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.String)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 277
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator string (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As String
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.String)
  name.vb: Narrowing(XElement to String)
  nameWithType: XElement.Explicit(XElement to String)
  nameWithType.vb: XElement.Narrowing(XElement to String)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  id: op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 279
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator TimeSpan(XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As TimeSpan
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.TimeSpan)
  name.vb: Narrowing(XElement to TimeSpan)
  nameWithType: XElement.Explicit(XElement to TimeSpan)
  nameWithType.vb: XElement.Narrowing(XElement to TimeSpan)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt32)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 281
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator uint (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As UInteger
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.UInt32
      description: "\n<p>A <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt32)
  name.vb: Narrowing(XElement to UInt32)
  nameWithType: XElement.Explicit(XElement to UInt32)
  nameWithType.vb: XElement.Narrowing(XElement to UInt32)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 283
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Cast the value of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ulong (XElement element)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(element As XElement) As ULong
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: "\n<p>The <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to cast to <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>A <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> that contains the content of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element does not contain a valid <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt64)
  name.vb: Narrowing(XElement to UInt64)
  nameWithType: XElement.Explicit(XElement to UInt64)
  nameWithType.vb: XElement.Narrowing(XElement to UInt64)
- uid: System.Xml.Linq.XElement.Parse(System.String)
  commentId: M:System.Xml.Linq.XElement.Parse(System.String)
  id: Parse(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 285
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Load an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a string that contains XML.</p>\n"
  syntax:
    content: public static XElement Parse(string text)
    content.vb: Public Shared Function Parse(text As String) As XElement
    parameters:
    - id: text
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains XML.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> populated from the string that contains XML.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Parse(String)
- uid: System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)
  commentId: M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)
  id: Parse(System.String,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Parse(System.String, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 286
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Load an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> from a string that contains XML, optionally preserving white space and retaining line information.</p>\n"
  syntax:
    content: public static XElement Parse(string text, LoadOptions options)
    content.vb: Public Shared Function Parse(text As String, options As LoadOptions) As XElement
    parameters:
    - id: text
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains XML.</p>\n"
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.LoadOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> populated from the string that contains XML.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: XElement.Parse(String, LoadOptions)
- uid: System.Xml.Linq.XElement.RemoveAll
  commentId: M:System.Xml.Linq.XElement.RemoveAll
  id: RemoveAll
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.RemoveAll()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAll
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 287
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Removes nodes and attributes from this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void RemoveAll()
    content.vb: Public Sub RemoveAll
  seealso:
  - type: System.Xml.Linq.XElement.RemoveAttributes
    commentId: M:System.Xml.Linq.XElement.RemoveAttributes
  - type: System.Xml.Linq.XContainer.RemoveNodes
    commentId: M:System.Xml.Linq.XContainer.RemoveNodes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.RemoveAll()
- uid: System.Xml.Linq.XElement.RemoveAttributes
  commentId: M:System.Xml.Linq.XElement.RemoveAttributes
  id: RemoveAttributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.RemoveAttributes()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAttributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 288
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Removes the attributes of this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void RemoveAttributes()
    content.vb: Public Sub RemoveAttributes
  seealso:
  - type: System.Xml.Linq.XElement.RemoveAttributes
    commentId: M:System.Xml.Linq.XElement.RemoveAttributes
  - type: System.Xml.Linq.XElement.RemoveAll
    commentId: M:System.Xml.Linq.XElement.RemoveAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.RemoveAttributes()
- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object)
  commentId: M:System.Xml.Linq.XElement.ReplaceAll(System.Object)
  id: ReplaceAll(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceAll
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 289
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Replaces the child nodes and the attributes of this element with the specified content.</p>\n"
  syntax:
    content: public void ReplaceAll(object content)
    content.vb: Public Sub ReplaceAll(content As Object)
    parameters:
    - id: content
      type: System.Object
      description: "\n<p>The content that will replace the child nodes and attributes of this element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.ReplaceAll(Object)
- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  commentId: M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  id: ReplaceAll(System.Object[])
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceAll
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 290
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Replaces the child nodes and the attributes of this element with the specified content.</p>\n"
  syntax:
    content: public void ReplaceAll(params object[] content)
    content.vb: Public Sub ReplaceAll(ParamArray content As Object())
    parameters:
    - id: content
      type: System.Object[]
      description: "\n<p>A parameter list of content objects.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XElement.ReplaceAll(System.Object())
  name.vb: ReplaceAll(Object())
  nameWithType: XElement.ReplaceAll(Object[])
  nameWithType.vb: XElement.ReplaceAll(Object())
- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  commentId: M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  id: ReplaceAttributes(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceAttributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 291
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Replaces the attributes of this element with the specified content.</p>\n"
  syntax:
    content: public void ReplaceAttributes(object content)
    content.vb: Public Sub ReplaceAttributes(content As Object)
    parameters:
    - id: content
      type: System.Object
      description: "\n<p>The content that will replace the attributes of this element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.ReplaceAttributes(Object)
- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  commentId: M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  id: ReplaceAttributes(System.Object[])
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceAttributes
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 292
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Replaces the attributes of this element with the specified content.</p>\n"
  syntax:
    content: public void ReplaceAttributes(params object[] content)
    content.vb: Public Sub ReplaceAttributes(ParamArray content As Object())
    parameters:
    - id: content
      type: System.Object[]
      description: "\n<p>A parameter list of content objects.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XElement.ReplaceAttributes(System.Object())
  name.vb: ReplaceAttributes(Object())
  nameWithType: XElement.ReplaceAttributes(Object[])
  nameWithType.vb: XElement.ReplaceAttributes(Object())
- uid: System.Xml.Linq.XElement.Save(System.IO.Stream)
  commentId: M:System.Xml.Linq.XElement.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Save(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 293
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Outputs this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(Stream stream)
    content.vb: Public Sub Save(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to output this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Save(Stream)
- uid: System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  commentId: M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  id: Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Save(System.IO.Stream, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 294
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Outputs this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>, optionally specifying formatting behavior.</p>\n"
  syntax:
    content: public void Save(Stream stream, SaveOptions options)
    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to output this <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> to.</p>\n"
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.SaveOptions\" data-throw-if-not-resolved=\"false\"></xref> object that specifies formatting behavior.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Save(Stream, SaveOptions)
- uid: System.Xml.Linq.XElement.Save(System.IO.TextWriter)
  commentId: M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Save(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 295
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this element to a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(TextWriter textWriter)
    content.vb: Public Sub Save(textWriter As TextWriter)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>A <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> will be written to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Save(TextWriter)
- uid: System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  commentId: M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  id: Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Save(System.IO.TextWriter, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 296
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this element to a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>, optionally disabling formatting.</p>\n"
  syntax:
    content: public void Save(TextWriter textWriter, SaveOptions options)
    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> to output the XML to.</p>\n"
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.SaveOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies formatting behavior.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Save(TextWriter, SaveOptions)
- uid: System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 297
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this element to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(XmlWriter writer)
    content.vb: Public Sub Save(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>A <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> that the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> will be written to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.Save(XmlWriter)
- uid: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  id: SetAttributeValue(System.Xml.Linq.XName,System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAttributeValue
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 298
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Sets the value of an attribute, adds an attribute, or removes an attribute. </p>\n"
  syntax:
    content: public void SetAttributeValue(XName name, object value)
    content.vb: Public Sub SetAttributeValue(name As XName, value As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the attribute to change.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The value to assign to the attribute. The attribute is removed if the value is <strong>null</strong>. Otherwise, the value is converted to its string representation and assigned to the <xref href=\"System.Xml.Linq.XAttribute.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the attribute.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>value</em> is an instance of <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)
  - type: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
    commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  - type: System.Xml.Linq.XElement.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.SetAttributeValue(XName, Object)
- uid: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  id: SetElementValue(System.Xml.Linq.XName,System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetElementValue
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 299
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Sets the value of a child element, adds a child element, or removes a child element.</p>\n"
  syntax:
    content: public void SetElementValue(XName name, object value)
    content.vb: Public Sub SetElementValue(name As XName, value As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the child element to change.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The value to assign to the child element. The child element is removed if the value is <strong>null</strong>. Otherwise, the value is converted to its string representation and assigned to the <xref href=\"System.Xml.Linq.XElement.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the child element.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>value</em> is an instance of <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)
  - type: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
    commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  - type: System.Xml.Linq.XElement.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.SetElementValue(XName, Object)
- uid: System.Xml.Linq.XElement.SetValue(System.Object)
  commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)
  id: SetValue(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.SetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetValue
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 300
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Sets the value of this element.</p>\n"
  syntax:
    content: public void SetValue(object value)
    content.vb: Public Sub SetValue(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to assign to this element. The value is converted to its string representation and assigned to the <xref href=\"System.Xml.Linq.XElement.Value\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>value</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>value</em> is an <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)
  - type: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
    commentId: M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  - type: System.Xml.Linq.XElement.SetValue(System.Object)
    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XElement.SetValue(Object)
- uid: System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 304
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Write this element to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteTo(XmlWriter writer)
    content.vb: Public Overrides Sub WriteTo(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>An <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> into which this method will write.</p>\n"
  overridden: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: XElement.WriteTo(XmlWriter)
references:
- uid: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq
  commentId: N:System.Xml.Linq
  nameWithType: System.Xml.Linq
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Xml.Linq.XObject
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject
  commentId: T:System.Xml.Linq.XObject
  nameWithType: XObject
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode
  commentId: T:System.Xml.Linq.XNode
  nameWithType: XNode
- uid: System.Xml.Linq.XContainer
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer
  commentId: T:System.Xml.Linq.XContainer
  nameWithType: XContainer
- uid: System.Xml.Serialization.IXmlSerializable
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  nameWithType: IXmlSerializable
- uid: System.Xml.Linq.XContainer.FirstNode
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.FirstNode
  commentId: P:System.Xml.Linq.XContainer.FirstNode
  nameWithType: XContainer.FirstNode
- uid: System.Xml.Linq.XContainer.LastNode
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.LastNode
  commentId: P:System.Xml.Linq.XContainer.LastNode
  nameWithType: XContainer.LastNode
- uid: System.Xml.Linq.XContainer.Add(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Add(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)
  nameWithType: XContainer.Add(Object)
- uid: System.Xml.Linq.XContainer.Add(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Add(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.Add(System.Object())
  name.vb: Add(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Add(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Add(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Add(System.Object[])
  nameWithType: XContainer.Add(Object[])
  nameWithType.vb: XContainer.Add(Object())
- uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)
  nameWithType: XContainer.AddFirst(Object)
- uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.AddFirst(System.Object())
  name.vb: AddFirst(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object[])
  nameWithType: XContainer.AddFirst(Object[])
  nameWithType.vb: XContainer.AddFirst(Object())
- uid: System.Xml.Linq.XContainer.CreateWriter
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.CreateWriter()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.CreateWriter
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.CreateWriter
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.CreateWriter
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.CreateWriter
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.CreateWriter
  nameWithType: XContainer.CreateWriter()
- uid: System.Xml.Linq.XContainer.DescendantNodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.DescendantNodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.DescendantNodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.DescendantNodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.DescendantNodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.DescendantNodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.DescendantNodes
  nameWithType: XContainer.DescendantNodes()
- uid: System.Xml.Linq.XContainer.Descendants
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Descendants()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Descendants
  nameWithType: XContainer.Descendants()
- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  nameWithType: XContainer.Descendants(XName)
- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Element
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Element
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  nameWithType: XContainer.Element(XName)
- uid: System.Xml.Linq.XContainer.Elements
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Elements()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Elements
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Elements
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Elements
  nameWithType: XContainer.Elements()
- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Elements
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Elements
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  nameWithType: XContainer.Elements(XName)
- uid: System.Xml.Linq.XContainer.Nodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.Nodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.Nodes
  nameWithType: XContainer.Nodes()
- uid: System.Xml.Linq.XContainer.RemoveNodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.RemoveNodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.RemoveNodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.RemoveNodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.RemoveNodes
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.RemoveNodes
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.RemoveNodes
  nameWithType: XContainer.RemoveNodes()
- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  nameWithType: XContainer.ReplaceNodes(Object)
- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.ReplaceNodes(System.Object())
  name.vb: ReplaceNodes(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  nameWithType: XContainer.ReplaceNodes(Object[])
  nameWithType.vb: XContainer.ReplaceNodes(Object())
- uid: System.Xml.Linq.XNode.DocumentOrderComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.DocumentOrderComparer
  commentId: P:System.Xml.Linq.XNode.DocumentOrderComparer
  nameWithType: XNode.DocumentOrderComparer
- uid: System.Xml.Linq.XNode.EqualityComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.EqualityComparer
  commentId: P:System.Xml.Linq.XNode.EqualityComparer
  nameWithType: XNode.EqualityComparer
- uid: System.Xml.Linq.XNode.NextNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.NextNode
  commentId: P:System.Xml.Linq.XNode.NextNode
  nameWithType: XNode.NextNode
- uid: System.Xml.Linq.XNode.PreviousNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.PreviousNode
  commentId: P:System.Xml.Linq.XNode.PreviousNode
  nameWithType: XNode.PreviousNode
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  nameWithType: XNode.AddAfterSelf(Object)
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())
  name.vb: AddAfterSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  nameWithType: XNode.AddAfterSelf(Object[])
  nameWithType.vb: XNode.AddAfterSelf(Object())
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  nameWithType: XNode.AddBeforeSelf(Object)
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())
  name.vb: AddBeforeSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  nameWithType: XNode.AddBeforeSelf(Object[])
  nameWithType.vb: XNode.AddBeforeSelf(Object())
- uid: System.Xml.Linq.XNode.Ancestors
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.Ancestors()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.Ancestors
  nameWithType: XNode.Ancestors()
- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  nameWithType: XNode.Ancestors(XName)
- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: 'XXX '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: 'XXX '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)
- uid: System.Xml.Linq.XNode.CreateReader
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.CreateReader()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.CreateReader
  nameWithType: XNode.CreateReader()
- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: "XXX"
    fullName: System.Xml.Linq.ReaderOptions
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: "XXX"
    fullName: System.Xml.Linq.ReaderOptions
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  nameWithType: XNode.CreateReader(ReaderOptions)
- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: 'XXX '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: 'XXX '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  nameWithType: XNode.DeepEquals(XNode, XNode)
- uid: System.Xml.Linq.XNode.ElementsAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf
  nameWithType: XNode.ElementsAfterSelf()
- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  nameWithType: XNode.ElementsAfterSelf(XName)
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf
  nameWithType: XNode.ElementsBeforeSelf()
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XName
    name: "XXX"
    fullName: System.Xml.Linq.XName
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  nameWithType: XNode.ElementsBeforeSelf(XName)
- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  nameWithType: XNode.IsAfter(XNode)
- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  nameWithType: XNode.IsBefore(XNode)
- uid: System.Xml.Linq.XNode.NodesAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.NodesAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.NodesAfterSelf
  nameWithType: XNode.NodesAfterSelf()
- uid: System.Xml.Linq.XNode.NodesBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: "XXX"
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.NodesBeforeSelf
  nameWithType: XNode.NodesBeforeSelf()
- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: "XXX"
    fullName: (
  - uid: System.Xml.XmlReader
    name: "XXX"
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: "XXX"
    fullName: (
  - uid: System.Xml.XmlReader
    name: "XXX"
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  nameWithType: XNode.ReadFrom(XmlReader)
- uid: System.Xml.Linq.XNode.Remove
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.Remove()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Remove
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Remove
    name: "XXX"
    fullName: System.Xml.Linq.XNode.Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.Remove
  nameWithType: XNode.Remove()
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object)
  nameWithType: XNode.ReplaceWith(Object)
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())
  name.vb: ReplaceWith(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  nameWithType: XNode.ReplaceWith(Object[])
  nameWithType.vb: XNode.ReplaceWith(Object())
- uid: System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ToString()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ToString
  nameWithType: XNode.ToString()
- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ToString
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: "XXX"
    fullName: System.Xml.Linq.SaveOptions
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.ToString
  - name: "XXX"
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: "XXX"
    fullName: System.Xml.Linq.SaveOptions
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  nameWithType: XNode.ToString(SaveOptions)
- uid: System.Xml.Linq.XObject.BaseUri
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.BaseUri
  commentId: P:System.Xml.Linq.XObject.BaseUri
  nameWithType: XObject.BaseUri
- uid: System.Xml.Linq.XObject.Document
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Document
  commentId: P:System.Xml.Linq.XObject.Document
  nameWithType: XObject.Document
- uid: System.Xml.Linq.XObject.Parent
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Parent
  commentId: P:System.Xml.Linq.XObject.Parent
  nameWithType: XObject.Parent
- uid: System.Xml.Linq.XObject.Changed
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Changed
  commentId: E:System.Xml.Linq.XObject.Changed
  nameWithType: XObject.Changed
- uid: System.Xml.Linq.XObject.Changing
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Changing
  commentId: E:System.Xml.Linq.XObject.Changing
  nameWithType: XObject.Changing
- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)
  nameWithType: XObject.AddAnnotation(Object)
- uid: System.Xml.Linq.XObject.Annotation(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Annotation(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotation
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotation
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)
  nameWithType: XObject.Annotation(Type)
- uid: System.Xml.Linq.XObject.Annotation``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Annotation<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()
  name.vb: Annotation(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotation<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotation(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.Annotation``1
  nameWithType: XObject.Annotation<T>()
  nameWithType.vb: XObject.Annotation(Of T)()
- uid: System.Xml.Linq.XObject.Annotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Annotations(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotations
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotations
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)
  nameWithType: XObject.Annotations(Type)
- uid: System.Xml.Linq.XObject.Annotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.Annotations<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()
  name.vb: Annotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotations<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.Annotations(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.Annotations``1
  nameWithType: XObject.Annotations<T>()
  nameWithType.vb: XObject.Annotations(Of T)()
- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
    name: "XXX"
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  nameWithType: XObject.RemoveAnnotations(Type)
- uid: System.Xml.Linq.XObject.RemoveAnnotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()
  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()
  name.vb: RemoveAnnotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: "XXX"
    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1
  nameWithType: XObject.RemoveAnnotations<T>()
  nameWithType.vb: XObject.RemoveAnnotations(Of T)()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  nameWithType: XElement
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  nameWithType: XName
- uid: System.Object[]
  name: "XXX"
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.Xml.Linq.XStreamingElement
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XStreamingElement
  commentId: T:System.Xml.Linq.XStreamingElement
  nameWithType: XStreamingElement
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  name.vb: IEnumerable(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: "XXX"
    fullName: System.Xml.Linq.XElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: "XXX"
    fullName: System.Xml.Linq.XElement
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  nameWithType: IEnumerable<XElement>
  nameWithType.vb: IEnumerable(Of XElement)
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable`1
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  commentId: N:System.Collections.Generic
  nameWithType: System.Collections.Generic
- uid: System.Xml.Linq.XAttribute
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XAttribute
  commentId: T:System.Xml.Linq.XAttribute
  nameWithType: XAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.Xml.Linq.XObject.NodeType
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XObject.NodeType
  commentId: P:System.Xml.Linq.XObject.NodeType
  nameWithType: XObject.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlNodeType
  commentId: T:System.Xml.XmlNodeType
  nameWithType: XmlNodeType
- uid: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml
  commentId: N:System.Xml
  nameWithType: System.Xml
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute)
  name.vb: IEnumerable(Of XAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: "XXX"
    fullName: System.Xml.Linq.XAttribute
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Xml.Linq.XAttribute
    name: "XXX"
    fullName: System.Xml.Linq.XAttribute
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  nameWithType: IEnumerable<XAttribute>
  nameWithType.vb: IEnumerable(Of XAttribute)
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)
  name.vb: IEnumerable(Of XNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: "XXX"
    fullName: System.Xml.Linq.XNode
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  nameWithType: IEnumerable<XNode>
  nameWithType.vb: IEnumerable(Of XNode)
- uid: System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  nameWithType: XNamespace
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.Xml.Linq.LoadOptions
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.LoadOptions
  commentId: T:System.Xml.Linq.LoadOptions
  nameWithType: LoadOptions
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextReader
  commentId: T:System.IO.TextReader
  nameWithType: TextReader
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  nameWithType: XmlReader
- uid: System.DateTime
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTime
  commentId: T:System.DateTime
  nameWithType: DateTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  nameWithType: DateTimeOffset
- uid: System.Decimal
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Decimal
  commentId: T:System.Decimal
  nameWithType: Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Double
  commentId: T:System.Double
  nameWithType: Double
- uid: System.Guid
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Guid
  commentId: T:System.Guid
  nameWithType: Guid
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  commentId: T:System.Int64
  nameWithType: Int64
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Boolean}
  nameWithType: Nullable<Boolean>
  nameWithType.vb: Nullable(Of Boolean)
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable`1
  nameWithType: Nullable<T>
  nameWithType.vb: Nullable(Of T)
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.DateTime
    name: "XXX"
    fullName: System.DateTime
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.DateTime}
  nameWithType: Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.DateTimeOffset
    name: "XXX"
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: "XXX"
    fullName: System.DateTimeOffset
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.DateTimeOffset}
  nameWithType: Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
- uid: System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Decimal>
  fullname.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Decimal}
  nameWithType: Nullable<Decimal>
  nameWithType.vb: Nullable(Of Decimal)
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Double}
  nameWithType: Nullable<Double>
  nameWithType.vb: Nullable(Of Double)
- uid: System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Guid>
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Guid
    name: "XXX"
    fullName: System.Guid
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Guid}
  nameWithType: Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Int32}
  nameWithType: Nullable<Int32>
  nameWithType.vb: Nullable(Of Int32)
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Int64}
  nameWithType: Nullable<Int64>
  nameWithType.vb: Nullable(Of Int64)
- uid: System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.Single>
  fullname.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.Single}
  nameWithType: Nullable<Single>
  nameWithType.vb: Nullable(Of Single)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.TimeSpan
    name: "XXX"
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: "XXX"
    fullName: System.TimeSpan
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.TimeSpan}
  nameWithType: Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
- uid: System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.UInt32>
  fullname.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.UInt32}
  nameWithType: Nullable<UInt32>
  nameWithType.vb: Nullable(Of UInt32)
- uid: System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: "XXX"
  fullName: System.Nullable<System.UInt64>
  fullname.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: T:System.Nullable{System.UInt64}
  nameWithType: Nullable<UInt64>
  nameWithType.vb: Nullable(Of UInt64)
- uid: System.Single
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Single
  commentId: T:System.Single
  nameWithType: Single
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.UInt32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt32
  commentId: T:System.UInt32
  nameWithType: UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt64
  commentId: T:System.UInt64
  nameWithType: UInt64
- uid: System.Xml.Linq.SaveOptions
  parent: System.Xml.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Linq.SaveOptions
  commentId: T:System.Xml.Linq.SaveOptions
  nameWithType: SaveOptions
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  nameWithType: TextWriter
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  nameWithType: XmlWriter
- uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: "XXX"
  fullName: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.Xml.XmlWriter
    name: "XXX"
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
    name: "XXX"
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: "XXX"
    fullName: (
  - uid: System.Xml.XmlWriter
    name: "XXX"
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  nameWithType: XNode.WriteTo(XmlWriter)
- uid: System.FormatException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.FormatException
  nameWithType: FormatException
  commentId: T:System.FormatException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
