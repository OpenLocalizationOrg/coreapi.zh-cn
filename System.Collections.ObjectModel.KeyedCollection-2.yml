items:
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  id: KeyedCollection`2
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  - System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  - System.Collections.ObjectModel.KeyedCollection`2.Comparer
  - System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  - System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  - System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  - System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: KeyedCollection
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 13
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Provides the abstract base class for a collection whose keys are embedded in the values.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(false)]

      [DebuggerTypeProxy(typeof (Mscorlib_KeyedCollectionDebugView<, >))]

      [DebuggerDisplay("Count = {Count}")]

      public abstract class KeyedCollection<TKey, TItem> : Collection<TItem>, IList<TItem>, ICollection<TItem>, IList, ICollection, IReadOnlyList<TItem>, IReadOnlyCollection<TItem>, IEnumerable<TItem>, IEnumerable
    content.vb: >-
      <Serializable>

      <ComVisible(False)>

      <DebuggerTypeProxy(GetType(Mscorlib_KeyedCollectionDebugView(Of , )))>

      <DebuggerDisplay("Count = {Count}")>

      Public MustInherit Class KeyedCollection(Of TKey, TItem)
          Inherits Collection(Of TItem)
          Implements IList(Of TItem), ICollection(Of TItem), IList, ICollection, IReadOnlyList(Of TItem), IReadOnlyCollection(Of TItem), IEnumerable(Of TItem), IEnumerable
    typeParameters:
    - id: TKey
      description: "\n<p>The type of keys in the collection.</p>\n"
    - id: TItem
      description: "\n<p>The type of items in the collection.</p>\n"
  seealso:
  - type: System.Collections.Specialized.StringDictionary
    commentId: T:System.Collections.Specialized.StringDictionary
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{{TItem}}
  implements:
  - System.Collections.Generic.IList{{TItem}}
  - System.Collections.Generic.ICollection{{TItem}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{TItem}}
  - System.Collections.Generic.IReadOnlyCollection{{TItem}}
  - System.Collections.Generic.IEnumerable{{TItem}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.ObjectModel.Collection{{TItem}}.Add({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Clear
  - System.Collections.ObjectModel.Collection{{TItem}}.CopyTo({TItem}[],System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.Contains({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.GetEnumerator
  - System.Collections.ObjectModel.Collection{{TItem}}.IndexOf({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Insert(System.Int32,{TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.Remove({TItem})
  - System.Collections.ObjectModel.Collection{{TItem}}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{{TItem}}.Count
  - System.Collections.ObjectModel.Collection{{TItem}}.Items
  - System.Collections.ObjectModel.Collection{{TItem}}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsFixedSize
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  nameWithType: KeyedCollection<TKey, TItem>
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Queryable.AsQueryable``1
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.ParallelEnumerable.AsParallel``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``1(System.Func{{TItem},{TItem},{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{TItem},{TAccumulate}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{TItem},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.All``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Any``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Any``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Decimal})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Double})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Int32})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Int64})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Single})
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Append``1({TItem})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Prepend``1({TItem})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Contains``1({TItem})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Contains``1({TItem},System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Count``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Count``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.DefaultIfEmpty``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.DefaultIfEmpty``1({TItem})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Distinct``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.First``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.First``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.FirstOrDefault``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``2(System.Func{{TItem},{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TItem}},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TItem}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``4(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``4(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},{TInner},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Last``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Last``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LastOrDefault``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LongCount``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LongCount``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Decimal})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Double})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Int32})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Int64})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Single})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``2(System.Func{{TItem},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Decimal})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Double})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Int32})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Int64})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Single})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``2(System.Func{{TItem},{TResult}})
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderBy``2(System.Func{{TItem},{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderBy``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{TItem},{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Reverse``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Select``2(System.Func{{TItem},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Select``2(System.Func{{TItem},System.Int32,{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``2(System.Func{{TItem},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``3(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{TItem},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``3(System.Func{{TItem},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{TItem},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Single``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Single``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SingleOrDefault``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Skip``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SkipWhile``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SkipWhile``1(System.Func{{TItem},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Decimal})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Double})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Int32})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Int64})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Single})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Take``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.TakeWhile``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.TakeWhile``1(System.Func{{TItem},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToArray``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``2(System.Func{{TItem},{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToList``1
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``2(System.Func{{TItem},{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Where``1(System.Func{{TItem},System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Where``1(System.Func{{TItem},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{TItem},{TSecond},{TResult}})
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.#ctor
  id: '#ctor'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 26
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref> class that uses the default equality comparer.</p>\n"
  syntax:
    content: protected KeyedCollection()
    content.vb: Protected Sub New
  seealso:
  - type: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection()
  nameWithType: KeyedCollection<TKey, TItem>.KeyedCollection()
  nameWithType.vb: KeyedCollection(Of TKey, TItem).KeyedCollection()
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection(System.Collections.Generic.IEqualityComparer<TKey>)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 28
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified equality comparer.</p>\n"
  syntax:
    content: protected KeyedCollection(IEqualityComparer<TKey> comparer)
    content.vb: Protected Sub New(comparer As IEqualityComparer(Of TKey))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: "\n<p>The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> generic interface to use when comparing keys, or <strong>null</strong> to use the default equality comparer for the type of the key, obtained from <xref href=\"System.Collections.Generic.EqualityComparer`1.Default\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection(System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: KeyedCollection(IEqualityComparer(Of TKey))
  nameWithType: KeyedCollection<TKey, TItem>.KeyedCollection(IEqualityComparer<TKey>)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).KeyedCollection(IEqualityComparer(Of TKey))
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.KeyedCollection(System.Collections.Generic.IEqualityComparer<TKey>, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 31
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</p>\n"
  syntax:
    content: protected KeyedCollection(IEqualityComparer<TKey> comparer, int dictionaryCreationThreshold)
    content.vb: Protected Sub New(comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: "\n<p>The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> generic interface to use when comparing keys, or <strong>null</strong> to use the default equality comparer for the type of the key, obtained from <xref href=\"System.Collections.Generic.EqualityComparer`1.Default\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: dictionaryCreationThreshold
      type: System.Int32
      description: "\n<p>The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>dictionaryCreationThreshold</em> is less than –1.</p>\n"
  seealso:
  - type: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).KeyedCollection(System.Collections.Generic.IEqualityComparer(Of TKey), System.Int32)
  name.vb: KeyedCollection(IEqualityComparer(Of TKey), Int32)
  nameWithType: KeyedCollection<TKey, TItem>.KeyedCollection(IEqualityComparer<TKey>, Int32)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).KeyedCollection(IEqualityComparer(Of TKey), Int32)
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Comparer
  id: Comparer
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Comparer
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 61
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the generic equality comparer that is used to determine equality of keys in the collection.</p>\n"
  syntax:
    content: public IEqualityComparer<TKey> Comparer { get; }
    content.vb: Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: "\n<p>The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> generic interface that is used to determine equality of keys in the collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Comparer
  nameWithType: KeyedCollection<TKey, TItem>.Comparer
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Comparer
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Dictionary
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dictionary
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 137
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the lookup dictionary of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected IDictionary<TKey, TItem> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{{TKey},{TItem}}
      description: "\n<p>The lookup dictionary of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>, if it exists; otherwise, <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.Generic.IDictionary`2
    commentId: T:System.Collections.Generic.IDictionary`2
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Dictionary
  nameWithType: KeyedCollection<TKey, TItem>.Dictionary
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: this[]
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 67
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the element with the specified key. </p>\n"
  syntax:
    content: public TItem this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TItem
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key of the element to get.</p>\n"
    return:
      type: '{TItem}'
      description: "\n<p>The element with the specified key. If an element with the specified key is not found, an exception is thrown.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>.</p>\n"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "\n<p>An element with the specified key does not exist in the collection.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item(TKey)
  name.vb: Item(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Item[TKey]
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Item(TKey)
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  id: ChangeItemKey(`1,`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ChangeItemKey
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 141
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Changes the key associated with the specified element in the lookup dictionary.</p>\n"
  syntax:
    content: protected void ChangeItemKey(TItem item, TKey newKey)
    content.vb: Protected Sub ChangeItemKey(item As TItem, newKey As TKey)
    parameters:
    - id: item
      type: '{TItem}'
      description: "\n<p>The element to change the key of.</p>\n"
    - id: newKey
      type: '{TKey}'
      description: "\n<p>The new key for <em>item</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>item</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>key</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>item</em> is not found.</p>\n<p>-or-</p>\n<p>\n<em>key</em> already exists in the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  - type: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  id: ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ClearItems
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 159
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Removes all elements from the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected override void ClearItems()
    content.vb: Protected Overrides Sub ClearItems
  overridden: System.Collections.ObjectModel.Collection{{TItem}}.ClearItems
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  - type: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems()
  nameWithType: KeyedCollection<TKey, TItem>.ClearItems()
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ClearItems()
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Contains
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 86
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Determines whether the collection contains an element with the specified key.</p>\n"
  syntax:
    content: public bool Contains(TKey key)
    content.vb: Public Function Contains(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key to locate in the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Contains(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Contains(TKey)
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  id: GetKeyForItem(`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetKeyForItem
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 168
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>When implemented in a derived class, extracts the key from the specified element.</p>\n"
  syntax:
    content: protected abstract TKey GetKeyForItem(TItem item)
    content.vb: Protected MustOverride Function GetKeyForItem(item As TItem) As TKey
    parameters:
    - id: item
      type: '{TItem}'
      description: "\n<p>The element from which to extract the key.</p>\n"
    return:
      type: '{TKey}'
      description: "\n<p>The key for the specified element.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  - type: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem(System.Int32, TItem)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InsertItem
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 170
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Inserts an element into the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  syntax:
    content: protected override void InsertItem(int index, TItem item)
    content.vb: Protected Overrides Sub InsertItem(index As Integer, item As TItem)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index at which <em>item</em> should be inserted.</p>\n"
    - id: item
      type: '{TItem}'
      description: "\n<p>The object to insert.</p>\n"
  overridden: System.Collections.ObjectModel.Collection{{TItem}}.InsertItem(System.Int32,{TItem})
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than 0.</p>\n<p>-or-</p>\n<p>\n<em>index</em> is greater than <xref href=\"System.Collections.ObjectModel.Collection`1.Count\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem(System.Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.InsertItem(Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).InsertItem(Int32, TItem)
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remove
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 115
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Removes the element with the specified key from the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool Remove(TKey key)
    content.vb: Public Function Remove(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key of the element to remove.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the element is successfully removed; otherwise, <strong>false</strong>.  This method also returns <strong>false</strong> if <em>key</em> is not found in the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  - type: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Remove(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Remove(TKey)
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveItem
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 178
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Removes the element at the specified index of the <xref href=\"System.Collections.ObjectModel.KeyedCollection`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected override void RemoveItem(int index)
    content.vb: Protected Overrides Sub RemoveItem(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index of the element to remove.</p>\n"
  overridden: System.Collections.ObjectModel.Collection{{TItem}}.RemoveItem(System.Int32)
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  - type: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem(System.Int32)
  nameWithType: KeyedCollection<TKey, TItem>.RemoveItem(Int32)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).RemoveItem(Int32)
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem(System.Int32, TItem)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetItem
    path: src/mscorlib/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 186
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Replaces the item at the specified index with the specified item.</p>\n"
  syntax:
    content: protected override void SetItem(int index, TItem item)
    content.vb: Protected Overrides Sub SetItem(index As Integer, item As TItem)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the item to be replaced.</p>\n"
    - id: item
      type: '{TItem}'
      description: "\n<p>The new item.</p>\n"
  overridden: System.Collections.ObjectModel.Collection{{TItem}}.SetItem(System.Int32,{TItem})
  seealso:
  - type: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  - type: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    commentId: M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem(System.Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.SetItem(Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).SetItem(Int32, TItem)
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.ObjectModel.Collection{{TItem}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem)
  name.vb: Collection(Of TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>
  nameWithType.vb: Collection(Of TItem)
  commentId: T:System.Collections.ObjectModel.Collection{`1}
- uid: System.Collections.Generic.IList{{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: "XXX"
  fullName: System.Collections.Generic.IList<TItem>
  fullname.vb: System.Collections.Generic.IList(Of TItem)
  name.vb: IList(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: "XXX"
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: "XXX"
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: IList<TItem>
  nameWithType.vb: IList(Of TItem)
  commentId: T:System.Collections.Generic.IList{`1}
- uid: System.Collections.Generic.ICollection{{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<TItem>
  fullname.vb: System.Collections.Generic.ICollection(Of TItem)
  name.vb: ICollection(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<TItem>
  nameWithType.vb: ICollection(Of TItem)
  commentId: T:System.Collections.Generic.ICollection{`1}
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList
  nameWithType: IList
  commentId: T:System.Collections.IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection
  nameWithType: ICollection
  commentId: T:System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyList<TItem>
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of TItem)
  name.vb: IReadOnlyList(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyList<TItem>
  nameWithType.vb: IReadOnlyList(Of TItem)
  commentId: T:System.Collections.Generic.IReadOnlyList{`1}
- uid: System.Collections.Generic.IReadOnlyCollection{{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<TItem>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of TItem)
  name.vb: IReadOnlyCollection(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyCollection<TItem>
  nameWithType.vb: IReadOnlyCollection(Of TItem)
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`1}
- uid: System.Collections.Generic.IEnumerable{{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<TItem>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TItem)
  name.vb: IEnumerable(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<TItem>
  nameWithType.vb: IEnumerable(Of TItem)
  commentId: T:System.Collections.Generic.IEnumerable{`1}
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable
  nameWithType: IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Add({TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Add(TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Add(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Add(TItem)
  nameWithType.vb: Collection(Of TItem).Add(TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Add(`1)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Clear
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Clear()
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Clear
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Clear
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Clear()
  nameWithType.vb: Collection(Of TItem).Clear()
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Clear
- uid: System.Collections.ObjectModel.Collection{{TItem}}.CopyTo({TItem}[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.CopyTo(TItem[], System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).CopyTo(TItem(), System.Int32)
  name.vb: CopyTo(TItem(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.CopyTo(TItem[], Int32)
  nameWithType.vb: Collection(Of TItem).CopyTo(TItem(), Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.CopyTo(`1[],System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Contains({TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Contains(TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Contains(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Contains(TItem)
  nameWithType.vb: Collection(Of TItem).Contains(TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Contains(`1)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.GetEnumerator()
  nameWithType.vb: Collection(Of TItem).GetEnumerator()
  commentId: M:System.Collections.ObjectModel.Collection{`1}.GetEnumerator
- uid: System.Collections.ObjectModel.Collection{{TItem}}.IndexOf({TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.IndexOf(TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).IndexOf(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IndexOf(TItem)
  nameWithType.vb: Collection(Of TItem).IndexOf(TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.IndexOf(`1)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Insert(System.Int32,{TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Insert(System.Int32, TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Insert(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Insert(Int32, TItem)
  nameWithType.vb: Collection(Of TItem).Insert(Int32, TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Insert(System.Int32,`1)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Remove({TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Remove(TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Remove(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Remove(TItem)
  nameWithType.vb: Collection(Of TItem).Remove(TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Remove(`1)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveAt(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveAt
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).RemoveAt
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.RemoveAt(Int32)
  nameWithType.vb: Collection(Of TItem).RemoveAt(Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveAt(System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of TItem).System.Collections.IEnumerable.GetEnumerator()
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.CopyTo(Array, Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.get_Item(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.get_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.get_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.get_Item(Int32)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.get_Item(Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#get_Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.set_Item(System.Int32, System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.set_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.set_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.set_Item(Int32, Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.set_Item(Int32, Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#set_Item(System.Int32,System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Add(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.Add(Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Add(Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Add(System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Contains(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.Contains(Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Contains(Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Contains(System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IndexOf(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.IndexOf(Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IndexOf(Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IndexOf(System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.Insert(Int32, Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Insert(Int32, Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Insert(System.Int32,System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Remove(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.Remove(Object)
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Remove(Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Remove(System.Object)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Count
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Count
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Count
  nameWithType: Collection<TItem>.Count
  nameWithType.vb: Collection(Of TItem).Count
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Count
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Items
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Items
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Items
  nameWithType: Collection<TItem>.Items
  nameWithType.vb: Collection(Of TItem).Items
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Items
- uid: System.Collections.ObjectModel.Collection{{TItem}}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.Item[System.Int32]
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.Item
    isExternal: true
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.Item[Int32]
  nameWithType.vb: Collection(Of TItem).Item(Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.Generic.ICollection<TItem>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: Collection<TItem>.ICollection<TItem>.IsReadOnly
  nameWithType.vb: Collection(Of TItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#Generic#ICollection{T}#IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<TItem>.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<TItem>.ICollection.SyncRoot
  nameWithType.vb: Collection(Of TItem).System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#SyncRoot
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.Item
    isExternal: true
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.IList.Item[Int32]
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.Item(Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  nameWithType: Collection<TItem>.IList.IsReadOnly
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TItem}}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  nameWithType: Collection<TItem>.IList.IsFixedSize
  nameWithType.vb: Collection(Of TItem).System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsFixedSize
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable()
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Queryable.AsQueryable``1
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<TItem>()
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TItem)()
  name.vb: AsQueryable(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable<TItem>()
  nameWithType.vb: Queryable.AsQueryable(Of TItem)()
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.ParallelEnumerable.AsParallel``1
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<TItem>()
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TItem)()
  name.vb: AsParallel(Of TItem)()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<TItem>()
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TItem)()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``1(System.Func{{TItem},{TItem},{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TItem>(System.Func<TItem, TItem, TItem>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TItem)(System.Func(Of TItem, TItem, TItem))
  name.vb: Aggregate(Of TItem)(Func(Of TItem, TItem, TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TItem>(Func<TItem, TItem, TItem>)
  nameWithType.vb: Enumerable.Aggregate(Of TItem)(Func(Of TItem, TItem, TItem))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{TItem},{TAccumulate}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TItem, TAccumulate>(TAccumulate, System.Func<TAccumulate, TItem, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TItem, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, TItem, TAccumulate))
  name.vb: Aggregate(Of TItem, TAccumulate)(TAccumulate, Func(Of TAccumulate, TItem, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TItem, TAccumulate>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TItem, TAccumulate)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TItem, TAccumulate>(TAccumulate, Func<TAccumulate, TItem, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TItem, TAccumulate)(TAccumulate, Func(Of TAccumulate, TItem, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{TItem},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TItem, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, TItem, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TItem, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, TItem, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TItem, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, TItem, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TItem, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TItem, TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TItem, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, TItem, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TItem, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, TItem, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.All``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.All<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: All(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.All<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.All(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Any``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TItem>()
  fullname.vb: System.Linq.Enumerable.Any(Of TItem)()
  name.vb: Any(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TItem>()
  nameWithType.vb: Enumerable.Any(Of TItem)()
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Any``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: Any(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.AsEnumerable``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<TItem>()
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TItem)()
  name.vb: AsEnumerable(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.AsEnumerable<TItem>()
  nameWithType.vb: Enumerable.AsEnumerable(Of TItem)()
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Decimal))
  name.vb: Average(Of TItem)(Func(Of TItem, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Double))
  name.vb: Average(Of TItem)(Func(Of TItem, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Double>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Int32))
  name.vb: Average(Of TItem)(Func(Of TItem, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Int32>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Int64))
  name.vb: Average(Of TItem)(Func(Of TItem, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Int64>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Double)))
  name.vb: Average(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Single)))
  name.vb: Average(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Average``1(System.Func{{TItem},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TItem>(System.Func<TItem, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TItem)(System.Func(Of TItem, System.Single))
  name.vb: Average(Of TItem)(Func(Of TItem, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TItem>(Func<TItem, Single>)
  nameWithType.vb: Enumerable.Average(Of TItem)(Func(Of TItem, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: Concat(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Concat<TItem>(IEnumerable<TItem>)
  nameWithType.vb: Enumerable.Concat(Of TItem)(IEnumerable(Of TItem))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Append``1({TItem})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<TItem>(TItem)
  fullname.vb: System.Linq.Enumerable.Append(Of TItem)(TItem)
  name.vb: Append(Of TItem)(TItem)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Append<TItem>(TItem)
  nameWithType.vb: Enumerable.Append(Of TItem)(TItem)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Prepend``1({TItem})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<TItem>(TItem)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TItem)(TItem)
  name.vb: Prepend(Of TItem)(TItem)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Prepend<TItem>(TItem)
  nameWithType.vb: Enumerable.Prepend(Of TItem)(TItem)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Contains``1({TItem})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TItem>(TItem)
  fullname.vb: System.Linq.Enumerable.Contains(Of TItem)(TItem)
  name.vb: Contains(Of TItem)(TItem)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TItem>(TItem)
  nameWithType.vb: Enumerable.Contains(Of TItem)(TItem)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Contains``1({TItem},System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TItem>(TItem, System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TItem)(TItem, System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: Contains(Of TItem)(TItem, IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TItem>(TItem, IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.Contains(Of TItem)(TItem, IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Count``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TItem>()
  fullname.vb: System.Linq.Enumerable.Count(Of TItem)()
  name.vb: Count(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TItem>()
  nameWithType.vb: Enumerable.Count(Of TItem)()
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Count``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: Count(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.DefaultIfEmpty``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TItem>()
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TItem)()
  name.vb: DefaultIfEmpty(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TItem>()
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TItem)()
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.DefaultIfEmpty``1({TItem})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TItem>(TItem)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TItem)(TItem)
  name.vb: DefaultIfEmpty(Of TItem)(TItem)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TItem>(TItem)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TItem)(TItem)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Distinct``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TItem>()
  fullname.vb: System.Linq.Enumerable.Distinct(Of TItem)()
  name.vb: Distinct(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TItem>()
  nameWithType.vb: Enumerable.Distinct(Of TItem)()
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TItem>(System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TItem)(System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: Distinct(Of TItem)(IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TItem>(IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.Distinct(Of TItem)(IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<TItem>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TItem)(System.Int32)
  name.vb: ElementAt(Of TItem)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAt<TItem>(Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TItem)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TItem>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TItem)(System.Int32)
  name.vb: ElementAtOrDefault(Of TItem)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<TItem>(Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TItem)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  fullname.vb: System.Linq.Enumerable.Except(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: Except(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TItem>(IEnumerable<TItem>)
  nameWithType.vb: Enumerable.Except(Of TItem)(IEnumerable(Of TItem))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.Except(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: Except(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TItem>(IEnumerable<TItem>, IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.Except(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.First``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TItem>()
  fullname.vb: System.Linq.Enumerable.First(Of TItem)()
  name.vb: First(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TItem>()
  nameWithType.vb: Enumerable.First(Of TItem)()
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.First``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: First(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.First(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.FirstOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TItem>()
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TItem)()
  name.vb: FirstOrDefault(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TItem>()
  nameWithType.vb: Enumerable.FirstOrDefault(Of TItem)()
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: FirstOrDefault(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``2(System.Func{{TItem},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey>(System.Func<TItem, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey)(System.Func(Of TItem, TKey))
  name.vb: GroupBy(Of TItem, TKey)(Func(Of TItem, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey>(Func<TItem, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey)(Func(Of TItem, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey>(System.Func<TItem, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey)(System.Func(Of TItem, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey>(Func<TItem, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement))
  name.vb: GroupBy(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TItem}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TResult>(System.Func<TItem, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TItem>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TResult)(System.Func(Of TItem, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TItem), TResult))
  name.vb: GroupBy(Of TItem, TKey, TResult)(Func(Of TItem, TKey), Func(Of TKey, IEnumerable(Of TItem), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TResult>(Func<TItem, TKey>, Func<TKey, IEnumerable<TItem>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TResult)(Func(Of TItem, TKey), Func(Of TKey, IEnumerable(Of TItem), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``3(System.Func{{TItem},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TItem}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TResult>(System.Func<TItem, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TItem>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TResult)(System.Func(Of TItem, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TItem), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TItem, TKey, TResult)(Func(Of TItem, TKey), Func(Of TKey, IEnumerable(Of TItem), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TResult>(Func<TItem, TKey>, Func<TKey, IEnumerable<TItem>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TResult)(Func(Of TItem, TKey), Func(Of TKey, IEnumerable(Of TItem), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``4(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement, TResult>(System.Func<TItem, TKey>, System.Func<TItem, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TItem, TKey, TElement, TResult)(Func(Of TItem, TKey), Func(Of TItem, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TElement, TResult>(Func<TItem, TKey>, Func<TItem, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)(Func(Of TItem, TKey), Func(Of TItem, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupBy``4(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement, TResult>(System.Func<TItem, TKey>, System.Func<TItem, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TItem, TKey, TElement, TResult)(Func(Of TItem, TKey), Func(Of TItem, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TItem, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TItem, TKey, TElement, TResult>(Func<TItem, TKey>, Func<TItem, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TItem, TKey, TElement, TResult)(Func(Of TItem, TKey), Func(Of TItem, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TItem, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TItem, TKey>, System.Func<TInner, TKey>, System.Func<TItem, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TItem, TKey), System.Func(Of TInner, TKey), System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TItem, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TItem, TInner, TKey, TResult>(IEnumerable<TInner>, Func<TItem, TKey>, Func<TInner, TKey>, Func<TItem, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TItem, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TItem, TKey>, System.Func<TInner, TKey>, System.Func<TItem, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TItem, TKey), System.Func(Of TInner, TKey), System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TItem, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TItem, TInner, TKey, TResult>(IEnumerable<TInner>, Func<TItem, TKey>, Func<TInner, TKey>, Func<TItem, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: Intersect(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TItem>(IEnumerable<TItem>)
  nameWithType.vb: Enumerable.Intersect(Of TItem)(IEnumerable(Of TItem))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: Intersect(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TItem>(IEnumerable<TItem>, IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.Intersect(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},{TInner},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TItem, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TItem, TKey>, System.Func<TInner, TKey>, System.Func<TItem, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TItem, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TItem, TKey), System.Func(Of TInner, TKey), System.Func(Of TItem, TInner, TResult))
  name.vb: Join(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TItem, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TItem, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TItem, TInner, TKey, TResult>(IEnumerable<TInner>, Func<TItem, TKey>, Func<TInner, TKey>, Func<TItem, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{TItem},{TKey}},System.Func{{TInner},{TKey}},System.Func{{TItem},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TItem, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TItem, TKey>, System.Func<TInner, TKey>, System.Func<TItem, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TItem, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TItem, TKey), System.Func(Of TInner, TKey), System.Func(Of TItem, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TItem, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TItem, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TItem, TInner, TKey, TResult>(IEnumerable<TInner>, Func<TItem, TKey>, Func<TInner, TKey>, Func<TItem, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TItem, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of TItem, TKey), Func(Of TInner, TKey), Func(Of TItem, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Last``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TItem>()
  fullname.vb: System.Linq.Enumerable.Last(Of TItem)()
  name.vb: Last(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TItem>()
  nameWithType.vb: Enumerable.Last(Of TItem)()
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Last``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: Last(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LastOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TItem>()
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TItem)()
  name.vb: LastOrDefault(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TItem>()
  nameWithType.vb: Enumerable.LastOrDefault(Of TItem)()
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: LastOrDefault(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LongCount``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TItem>()
  fullname.vb: System.Linq.Enumerable.LongCount(Of TItem)()
  name.vb: LongCount(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TItem>()
  nameWithType.vb: Enumerable.LongCount(Of TItem)()
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.LongCount``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: LongCount(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>()
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)()
  name.vb: Max(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>()
  nameWithType.vb: Enumerable.Max(Of TItem)()
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Decimal))
  name.vb: Max(Of TItem)(Func(Of TItem, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Double))
  name.vb: Max(Of TItem)(Func(Of TItem, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Double>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Int32))
  name.vb: Max(Of TItem)(Func(Of TItem, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Int32>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Int64))
  name.vb: Max(Of TItem)(Func(Of TItem, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Int64>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Double)))
  name.vb: Max(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Single)))
  name.vb: Max(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``1(System.Func{{TItem},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem>(System.Func<TItem, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem)(System.Func(Of TItem, System.Single))
  name.vb: Max(Of TItem)(Func(Of TItem, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem>(Func<TItem, Single>)
  nameWithType.vb: Enumerable.Max(Of TItem)(Func(Of TItem, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Max``2(System.Func{{TItem},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TItem, TResult>(System.Func<TItem, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TItem, TResult)(System.Func(Of TItem, TResult))
  name.vb: Max(Of TItem, TResult)(Func(Of TItem, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TItem, TResult>(Func<TItem, TResult>)
  nameWithType.vb: Enumerable.Max(Of TItem, TResult)(Func(Of TItem, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>()
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)()
  name.vb: Min(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>()
  nameWithType.vb: Enumerable.Min(Of TItem)()
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Decimal))
  name.vb: Min(Of TItem)(Func(Of TItem, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Double))
  name.vb: Min(Of TItem)(Func(Of TItem, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Double>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Int32))
  name.vb: Min(Of TItem)(Func(Of TItem, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Int32>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Int64))
  name.vb: Min(Of TItem)(Func(Of TItem, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Int64>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Double)))
  name.vb: Min(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Single)))
  name.vb: Min(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``1(System.Func{{TItem},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem>(System.Func<TItem, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem)(System.Func(Of TItem, System.Single))
  name.vb: Min(Of TItem)(Func(Of TItem, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem>(Func<TItem, Single>)
  nameWithType.vb: Enumerable.Min(Of TItem)(Func(Of TItem, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Min``2(System.Func{{TItem},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TItem, TResult>(System.Func<TItem, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TItem, TResult)(System.Func(Of TItem, TResult))
  name.vb: Min(Of TItem, TResult)(Func(Of TItem, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TItem, TResult>(Func<TItem, TResult>)
  nameWithType.vb: Enumerable.Min(Of TItem, TResult)(Func(Of TItem, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderBy``2(System.Func{{TItem},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TItem, TKey>(System.Func<TItem, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TItem, TKey)(System.Func(Of TItem, TKey))
  name.vb: OrderBy(Of TItem, TKey)(Func(Of TItem, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TItem, TKey>(Func<TItem, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TItem, TKey)(Func(Of TItem, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderBy``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TItem, TKey>(System.Func<TItem, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TItem, TKey)(System.Func(Of TItem, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TItem, TKey)(Func(Of TItem, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TItem, TKey>(Func<TItem, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TItem, TKey)(Func(Of TItem, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{TItem},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TItem, TKey>(System.Func<TItem, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TItem, TKey)(System.Func(Of TItem, TKey))
  name.vb: OrderByDescending(Of TItem, TKey)(Func(Of TItem, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TItem, TKey>(Func<TItem, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TItem, TKey)(Func(Of TItem, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TItem, TKey>(System.Func<TItem, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TItem, TKey)(System.Func(Of TItem, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TItem, TKey)(Func(Of TItem, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TItem, TKey>(Func<TItem, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TItem, TKey)(Func(Of TItem, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Reverse``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<TItem>()
  fullname.vb: System.Linq.Enumerable.Reverse(Of TItem)()
  name.vb: Reverse(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Reverse<TItem>()
  nameWithType.vb: Enumerable.Reverse(Of TItem)()
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Select``2(System.Func{{TItem},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TItem, TResult>(System.Func<TItem, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TItem, TResult)(System.Func(Of TItem, TResult))
  name.vb: Select(Of TItem, TResult)(Func(Of TItem, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TItem, TResult>(Func<TItem, TResult>)
  nameWithType.vb: Enumerable.Select(Of TItem, TResult)(Func(Of TItem, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Select``2(System.Func{{TItem},System.Int32,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TItem, TResult>(System.Func<TItem, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TItem, TResult)(System.Func(Of TItem, System.Int32, TResult))
  name.vb: Select(Of TItem, TResult)(Func(Of TItem, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TItem, TResult>(Func<TItem, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TItem, TResult)(Func(Of TItem, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``2(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TItem, TResult>(System.Func<TItem, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TItem, TResult)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TItem, TResult)(Func(Of TItem, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TItem, TResult>(Func<TItem, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TItem, TResult)(Func(Of TItem, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``2(System.Func{{TItem},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TItem, TResult>(System.Func<TItem, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TItem, TResult)(System.Func(Of TItem, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TItem, TResult)(Func(Of TItem, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TItem, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TItem, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TItem, TResult>(Func<TItem, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TItem, TResult)(Func(Of TItem, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``3(System.Func{{TItem},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{TItem},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TItem, TCollection, TResult>(System.Func<TItem, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TItem, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TItem, TCollection, TResult)(System.Func(Of TItem, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TItem, TCollection, TResult))
  name.vb: SelectMany(Of TItem, TCollection, TResult)(Func(Of TItem, IEnumerable(Of TCollection)), Func(Of TItem, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TItem, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TItem, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TItem, TCollection, TResult>(Func<TItem, IEnumerable<TCollection>>, Func<TItem, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TItem, TCollection, TResult)(Func(Of TItem, IEnumerable(Of TCollection)), Func(Of TItem, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SelectMany``3(System.Func{{TItem},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{TItem},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TItem, TCollection, TResult>(System.Func<TItem, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TItem, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TItem, TCollection, TResult)(System.Func(Of TItem, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TItem, TCollection, TResult))
  name.vb: SelectMany(Of TItem, TCollection, TResult)(Func(Of TItem, Int32, IEnumerable(Of TCollection)), Func(Of TItem, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TItem, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TItem, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TItem, TCollection, TResult>(Func<TItem, Int32, IEnumerable<TCollection>>, Func<TItem, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TItem, TCollection, TResult)(Func(Of TItem, Int32, IEnumerable(Of TCollection)), Func(Of TItem, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: SequenceEqual(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TItem>(IEnumerable<TItem>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TItem)(IEnumerable(Of TItem))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: SequenceEqual(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TItem>(IEnumerable<TItem>, IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Single``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TItem>()
  fullname.vb: System.Linq.Enumerable.Single(Of TItem)()
  name.vb: Single(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TItem>()
  nameWithType.vb: Enumerable.Single(Of TItem)()
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Single``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: Single(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SingleOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TItem>()
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TItem)()
  name.vb: SingleOrDefault(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TItem>()
  nameWithType.vb: Enumerable.SingleOrDefault(Of TItem)()
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: SingleOrDefault(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Skip``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<TItem>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TItem)(System.Int32)
  name.vb: Skip(Of TItem)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Skip<TItem>(Int32)
  nameWithType.vb: Enumerable.Skip(Of TItem)(Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SkipWhile``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: SkipWhile(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.SkipWhile``1(System.Func{{TItem},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TItem>(System.Func<TItem, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TItem)(System.Func(Of TItem, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TItem)(Func(Of TItem, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TItem>(Func<TItem, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TItem)(Func(Of TItem, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Decimal))
  name.vb: Sum(Of TItem)(Func(Of TItem, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Double))
  name.vb: Sum(Of TItem)(Func(Of TItem, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Double>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Int32))
  name.vb: Sum(Of TItem)(Func(Of TItem, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Int64))
  name.vb: Sum(Of TItem)(Func(Of TItem, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Sum``1(System.Func{{TItem},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TItem>(System.Func<TItem, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TItem)(System.Func(Of TItem, System.Single))
  name.vb: Sum(Of TItem)(Func(Of TItem, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TItem>(Func<TItem, Single>)
  nameWithType.vb: Enumerable.Sum(Of TItem)(Func(Of TItem, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Take``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<TItem>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TItem)(System.Int32)
  name.vb: Take(Of TItem)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Take<TItem>(Int32)
  nameWithType.vb: Enumerable.Take(Of TItem)(Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.TakeWhile``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: TakeWhile(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.TakeWhile``1(System.Func{{TItem},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TItem>(System.Func<TItem, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TItem)(System.Func(Of TItem, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TItem)(Func(Of TItem, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TItem>(Func<TItem, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TItem)(Func(Of TItem, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToArray``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<TItem>()
  fullname.vb: System.Linq.Enumerable.ToArray(Of TItem)()
  name.vb: ToArray(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToArray<TItem>()
  nameWithType.vb: Enumerable.ToArray(Of TItem)()
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``2(System.Func{{TItem},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey>(System.Func<TItem, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TItem, TKey)(System.Func(Of TItem, TKey))
  name.vb: ToDictionary(Of TItem, TKey)(Func(Of TItem, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TItem, TKey>(Func<TItem, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TItem, TKey)(Func(Of TItem, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey>(System.Func<TItem, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TItem, TKey)(System.Func(Of TItem, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TItem, TKey>(Func<TItem, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement))
  name.vb: ToDictionary(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToDictionary``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToList``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<TItem>()
  fullname.vb: System.Linq.Enumerable.ToList(Of TItem)()
  name.vb: ToList(Of TItem)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<TItem>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of TItem)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToList<TItem>()
  nameWithType.vb: Enumerable.ToList(Of TItem)()
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``2(System.Func{{TItem},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TItem, TKey>(System.Func<TItem, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TItem, TKey)(System.Func(Of TItem, TKey))
  name.vb: ToLookup(Of TItem, TKey)(Func(Of TItem, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TItem, TKey>(Func<TItem, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TItem, TKey)(Func(Of TItem, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``2(System.Func{{TItem},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TItem, TKey>(System.Func<TItem, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TItem, TKey)(System.Func(Of TItem, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TItem, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TItem, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TItem, TKey>(Func<TItem, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TItem, TKey)(Func(Of TItem, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement))
  name.vb: ToLookup(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.ToLookup``3(System.Func{{TItem},{TKey}},System.Func{{TItem},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TItem, TKey, TElement>(System.Func<TItem, TKey>, System.Func<TItem, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TItem, TKey, TElement)(System.Func(Of TItem, TKey), System.Func(Of TItem, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TItem, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TItem, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TItem, TKey, TElement>(Func<TItem, TKey>, Func<TItem, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TItem, TKey, TElement)(Func(Of TItem, TKey), Func(Of TItem, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TItem>(System.Collections.Generic.IEnumerable<TItem>)
  fullname.vb: System.Linq.Enumerable.Union(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem))
  name.vb: Union(Of TItem)(IEnumerable(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TItem>(IEnumerable<TItem>)
  nameWithType.vb: Enumerable.Union(Of TItem)(IEnumerable(Of TItem))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{TItem}},System.Collections.Generic.IEqualityComparer{{TItem}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TItem>(System.Collections.Generic.IEnumerable<TItem>, System.Collections.Generic.IEqualityComparer<TItem>)
  fullname.vb: System.Linq.Enumerable.Union(Of TItem)(System.Collections.Generic.IEnumerable(Of TItem), System.Collections.Generic.IEqualityComparer(Of TItem))
  name.vb: Union(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TItem>(IEnumerable<TItem>, IEqualityComparer<TItem>)
  nameWithType.vb: Enumerable.Union(Of TItem)(IEnumerable(Of TItem), IEqualityComparer(Of TItem))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Where``1(System.Func{{TItem},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TItem>(System.Func<TItem, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TItem)(System.Func(Of TItem, System.Boolean))
  name.vb: Where(Of TItem)(Func(Of TItem, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TItem>(Func<TItem, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TItem)(Func(Of TItem, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Where``1(System.Func{{TItem},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TItem>(System.Func<TItem, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TItem)(System.Func(Of TItem, System.Int32, System.Boolean))
  name.vb: Where(Of TItem)(Func(Of TItem, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TItem>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TItem)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TItem>(Func<TItem, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TItem)(Func(Of TItem, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`1}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{TItem},{TSecond},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<TItem, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TItem, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TItem, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TItem, TSecond, TResult))
  name.vb: Zip(Of TItem, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of TItem, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<TItem, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of TItem, TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TItem
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Zip<TItem, TSecond, TResult>(IEnumerable<TSecond>, Func<TItem, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TItem, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of TItem, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>
  fullname.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>
  nameWithType.vb: Collection(Of T)
  commentId: T:System.Collections.ObjectModel.Collection`1
- uid: System.Collections.Generic.IList`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: "XXX"
    fullName: System.Collections.Generic.IList
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: "XXX"
    fullName: System.Collections.Generic.IList
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IList<T>
  nameWithType.vb: IList(Of T)
  commentId: T:System.Collections.Generic.IList`1
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection`1
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyList<T>
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyList
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyList
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  commentId: T:System.Collections.Generic.IReadOnlyList`1
- uid: System.Collections.Generic.IReadOnlyCollection`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable`1
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
- uid: System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Insert(Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.RemoveAt(Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.get_Item(Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.Add(Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.Contains(Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.IndexOf(Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.Remove(Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
- uid: System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Count
  nameWithType: Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
- uid: System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Items
  nameWithType: Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.Item[Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.IList.Item[Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable(IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Queryable
  nameWithType: Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Enumerable
  nameWithType: Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq
  nameWithType: System.Linq
  commentId: N:System.Linq
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: "XXX"
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  nameWithType: IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
- uid: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  commentId: T:System.Collections.Generic.IEqualityComparer`1
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Collections.Generic.IDictionary{{TKey},{TItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: "XXX"
  fullName: System.Collections.Generic.IDictionary<TKey, TItem>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TItem)
  name.vb: IDictionary(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: "XXX"
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: "XXX"
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: IDictionary<TKey, TItem>
  nameWithType.vb: IDictionary(Of TKey, TItem)
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: "XXX"
    fullName: System.Collections.Generic.IDictionary
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: "XXX"
    fullName: System.Collections.Generic.IDictionary
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TValue
  - name: "XXX"
    fullName: )
  nameWithType: IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  commentId: T:System.Collections.Generic.IDictionary`2
- uid: '{TKey}'
  definition: TKey
  name: "XXX"
  fullName: TKey
  nameWithType: TKey
  commentId: '!:TKey'
- uid: '{TItem}'
  definition: TItem
  name: "XXX"
  fullName: TItem
  nameWithType: TItem
  commentId: '!:TItem'
- uid: TKey
  isExternal: false
  name: "XXX"
  fullName: TKey
  nameWithType: TKey
- uid: TItem
  isExternal: false
  name: "XXX"
  fullName: TItem
  nameWithType: TItem
- uid: System.Collections.ObjectModel.Collection{{TItem}}.ClearItems
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.ClearItems
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.ClearItems()
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.ClearItems
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).ClearItems
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.ClearItems()
  nameWithType.vb: Collection(Of TItem).ClearItems()
  commentId: M:System.Collections.ObjectModel.Collection{`1}.ClearItems
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).ClearItems
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.ClearItems()
  nameWithType.vb: Collection(Of T).ClearItems()
  commentId: M:System.Collections.ObjectModel.Collection`1.ClearItems
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Collections.ObjectModel.Collection{{TItem}}.InsertItem(System.Int32,{TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.InsertItem(System.Int32, TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).InsertItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.InsertItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).InsertItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.InsertItem(Int32, TItem)
  nameWithType.vb: Collection(Of TItem).InsertItem(Int32, TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.InsertItem(System.Int32,`1)
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(System.Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.InsertItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).InsertItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.InsertItem(Int32, T)
  nameWithType.vb: Collection(Of T).InsertItem(Int32, T)
  commentId: M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveItem(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.RemoveItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).RemoveItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.RemoveItem(Int32)
  nameWithType.vb: Collection(Of TItem).RemoveItem(Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveItem(System.Int32)
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(System.Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.RemoveItem(Int32)
  nameWithType.vb: Collection(Of T).RemoveItem(Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
- uid: System.Collections.ObjectModel.Collection{{TItem}}.SetItem(System.Int32,{TItem})
  parent: System.Collections.ObjectModel.Collection{{TItem}}
  definition: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<TItem>.SetItem(System.Int32, TItem)
  fullname.vb: System.Collections.ObjectModel.Collection(Of TItem).SetItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<TItem>.SetItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of TItem).SetItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TItem
  - name: "XXX"
    fullName: )
  nameWithType: Collection<TItem>.SetItem(Int32, TItem)
  nameWithType.vb: Collection(Of TItem).SetItem(Int32, TItem)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.SetItem(System.Int32,`1)
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(System.Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection<T>.SetItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: "XXX"
    fullName: System.Collections.ObjectModel.Collection(Of T).SetItem
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Collection<T>.SetItem(Int32, T)
  nameWithType.vb: Collection(Of T).SetItem(Int32, T)
  commentId: M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.KeyNotFoundException
  nameWithType: KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
