items:
- uid: System.Text.EncodingProvider
  commentId: T:System.Text.EncodingProvider
  id: EncodingProvider
  parent: System.Text
  children:
  - System.Text.EncodingProvider.#ctor
  - System.Text.EncodingProvider.GetEncoding(System.Int32)
  - System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.EncodingProvider.GetEncoding(System.String)
  - System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EncodingProvider
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 10
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform. </p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public abstract class EncodingProvider
    content.vb: >-
      <ComVisible(True)>

      Public MustInherit Class EncodingProvider
  seealso:
  - type: System.Text.Encoding.GetEncoding(System.String)
    commentId: M:System.Text.Encoding.GetEncoding(System.String)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: EncodingProvider
- uid: System.Text.EncodingProvider.#ctor
  commentId: M:System.Text.EncodingProvider.#ctor
  id: '#ctor'
  parent: System.Text.EncodingProvider
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider.EncodingProvider()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 13
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.EncodingProvider\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public EncodingProvider()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: EncodingProvider.EncodingProvider()
- uid: System.Text.EncodingProvider.GetEncoding(System.Int32)
  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32)
  id: GetEncoding(System.Int32)
  parent: System.Text.EncodingProvider
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider.GetEncoding(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 15
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns the encoding associated with the specified code page identifier. </p>\n"
  syntax:
    content: public abstract Encoding GetEncoding(int codepage)
    content.vb: Public MustOverride Function GetEncoding(codepage As Integer) As Encoding
    parameters:
    - id: codepage
      type: System.Int32
      description: "\n<p>The code page identifier of the requested encoding. </p>\n"
    return:
      type: System.Text.Encoding
      description: "\n<p>The encoding that is associated with the specified code page, or <strong>null</strong> if this <xref href=\"System.Text.EncodingProvider\" data-throw-if-not-resolved=\"false\"></xref> cannot return a valid encoding that corresponds to <em>codepage</em>. </p>\n"
  seealso:
  - type: System.Text.Encoding.GetEncoding(System.Int32)
    commentId: M:System.Text.Encoding.GetEncoding(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncodingProvider.GetEncoding(Int32)
- uid: System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  id: GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.EncodingProvider
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider.GetEncoding(System.Int32, System.Text.EncoderFallback, System.Text.DecoderFallback)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 31
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded. </p>\n"
  syntax:
    content: public virtual Encoding GetEncoding(int codepage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
    content.vb: Public Overridable Function GetEncoding(codepage As Integer, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding
    parameters:
    - id: codepage
      type: System.Int32
      description: "\n<p>The code page identifier of the requested encoding. </p>\n"
    - id: encoderFallback
      type: System.Text.EncoderFallback
      description: "\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding. </p>\n"
    - id: decoderFallback
      type: System.Text.DecoderFallback
      description: "\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding. </p>\n"
    return:
      type: System.Text.Encoding
      description: "\n<p>The encoding that is associated with the specified code page, or <strong>null</strong> if this <xref href=\"System.Text.EncodingProvider\" data-throw-if-not-resolved=\"false\"></xref> cannot return a valid encoding that corresponds to <em>codepage</em>. </p>\n"
  seealso:
  - type: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
    commentId: M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)
- uid: System.Text.EncodingProvider.GetEncoding(System.String)
  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String)
  id: GetEncoding(System.String)
  parent: System.Text.EncodingProvider
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider.GetEncoding(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 14
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns the encoding with the specified name. </p>\n"
  syntax:
    content: public abstract Encoding GetEncoding(string name)
    content.vb: Public MustOverride Function GetEncoding(name As String) As Encoding
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the requested encoding. </p>\n"
    return:
      type: System.Text.Encoding
      description: "\n<p>The encoding that is associated with the specified name, or <strong>null</strong> if this <xref href=\"System.Text.EncodingProvider\" data-throw-if-not-resolved=\"false\"></xref> cannot return a valid encoding that corresponds to <em>name</em>.</p>\n"
  seealso:
  - type: System.Text.Encoding.GetEncoding(System.String)
    commentId: M:System.Text.Encoding.GetEncoding(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncodingProvider.GetEncoding(String)
- uid: System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  id: GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.EncodingProvider
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncodingProvider.GetEncoding(System.String, System.Text.EncoderFallback, System.Text.DecoderFallback)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncodingProvider.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/EncodingProvider.cs
    startLine: 18
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded. </p>\n"
  syntax:
    content: public virtual Encoding GetEncoding(string name, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
    content.vb: Public Overridable Function GetEncoding(name As String, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the preferred encoding. </p>\n"
    - id: encoderFallback
      type: System.Text.EncoderFallback
      description: "\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding. </p>\n"
    - id: decoderFallback
      type: System.Text.DecoderFallback
      description: "\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding. </p>\n"
    return:
      type: System.Text.Encoding
      description: "\n<p>The encoding that is associated with the specified name, or <strong>null</strong> if this <xref href=\"System.Text.EncodingProvider\" data-throw-if-not-resolved=\"false\"></xref> cannot return a valid encoding that corresponds to <em>name</em>. </p>\n"
  seealso:
  - type: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
    commentId: M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)
references:
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.Encoding
  nameWithType: Encoding
  commentId: T:System.Text.Encoding
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.EncoderFallback
  nameWithType: EncoderFallback
  commentId: T:System.Text.EncoderFallback
- uid: System.Text.DecoderFallback
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.DecoderFallback
  nameWithType: DecoderFallback
  commentId: T:System.Text.DecoderFallback
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
