items:
- uid: System.Xml.XmlReaderSettings
  commentId: T:System.Xml.XmlReaderSettings
  id: XmlReaderSettings
  parent: System.Xml
  children:
  - System.Xml.XmlReaderSettings.#ctor
  - System.Xml.XmlReaderSettings.Async
  - System.Xml.XmlReaderSettings.CheckCharacters
  - System.Xml.XmlReaderSettings.Clone
  - System.Xml.XmlReaderSettings.CloseInput
  - System.Xml.XmlReaderSettings.ConformanceLevel
  - System.Xml.XmlReaderSettings.DtdProcessing
  - System.Xml.XmlReaderSettings.IgnoreComments
  - System.Xml.XmlReaderSettings.IgnoreProcessingInstructions
  - System.Xml.XmlReaderSettings.IgnoreWhitespace
  - System.Xml.XmlReaderSettings.LineNumberOffset
  - System.Xml.XmlReaderSettings.LinePositionOffset
  - System.Xml.XmlReaderSettings.MaxCharactersFromEntities
  - System.Xml.XmlReaderSettings.MaxCharactersInDocument
  - System.Xml.XmlReaderSettings.NameTable
  - System.Xml.XmlReaderSettings.Reset
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings
  type: Class
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlReaderSettings
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 353
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Specifies a set of features to support on the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> object created by the <xref href=\"System.Xml.XmlReader.Create(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public sealed class XmlReaderSettings
    content.vb: Public NotInheritable Class XmlReaderSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: XmlReaderSettings
- uid: System.Xml.XmlReaderSettings.#ctor
  commentId: M:System.Xml.XmlReaderSettings.#ctor
  id: '#ctor'
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.XmlReaderSettings()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 355
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.XmlReaderSettings\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlReaderSettings()
    content.vb: Public Sub New
  seealso:
  - type: System.Xml.XmlReader
    commentId: T:System.Xml.XmlReader
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.XmlReaderSettings()
- uid: System.Xml.XmlReaderSettings.Async
  commentId: P:System.Xml.XmlReaderSettings.Async
  id: Async
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.Async
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Async
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 356
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets whether asynchronous <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> methods can be used on a particular <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public bool Async { get; set; }
    content.vb: Public Property Async As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if asynchronous methods can be used; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.Async
- uid: System.Xml.XmlReaderSettings.CheckCharacters
  commentId: P:System.Xml.XmlReaderSettings.CheckCharacters
  id: CheckCharacters
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.CheckCharacters
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckCharacters
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 357
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating whether to do character checking.</p>\n"
  syntax:
    content: public bool CheckCharacters { get; set; }
    content.vb: Public Property CheckCharacters As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to do character checking; otherwise <strong>false</strong>. The default is <strong>true</strong>.</p>\n<p>If the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> is processing text data, it always checks that the XML names and text content are valid, regardless of the property setting. Setting <xref href=\"System.Xml.XmlReaderSettings.CheckCharacters\" data-throw-if-not-resolved=\"false\"></xref> to <strong>false</strong> turns off character checking for character entity references.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.CheckCharacters
- uid: System.Xml.XmlReaderSettings.CloseInput
  commentId: P:System.Xml.XmlReaderSettings.CloseInput
  id: CloseInput
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.CloseInput
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseInput
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 358
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating whether the underlying stream or <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> should be closed when the reader is closed.</p>\n"
  syntax:
    content: public bool CloseInput { get; set; }
    content.vb: Public Property CloseInput As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to close the underlying stream or <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> when the reader is closed; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.CloseInput
- uid: System.Xml.XmlReaderSettings.ConformanceLevel
  commentId: P:System.Xml.XmlReaderSettings.ConformanceLevel
  id: ConformanceLevel
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.ConformanceLevel
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConformanceLevel
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 359
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the level of conformance which the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> will comply.</p>\n"
  syntax:
    content: public ConformanceLevel ConformanceLevel { get; set; }
    content.vb: Public Property ConformanceLevel As ConformanceLevel
    parameters: []
    return:
      type: System.Xml.ConformanceLevel
      description: "\n<p>One of the enumeration values that specifies the level of conformance that the XML reader will enforce. The default is <xref href=\"System.Xml.ConformanceLevel.Document\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.ConformanceLevel
- uid: System.Xml.XmlReaderSettings.DtdProcessing
  commentId: P:System.Xml.XmlReaderSettings.DtdProcessing
  id: DtdProcessing
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.DtdProcessing
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DtdProcessing
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 360
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value that determines the processing of DTDs.</p>\n"
  syntax:
    content: public DtdProcessing DtdProcessing { get; set; }
    content.vb: Public Property DtdProcessing As DtdProcessing
    parameters: []
    return:
      type: System.Xml.DtdProcessing
      description: "\n<p>One of the enumeration values that determines the processing of DTDs. The default is <xref href=\"System.Xml.DtdProcessing.Prohibit\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.DtdProcessing
- uid: System.Xml.XmlReaderSettings.IgnoreComments
  commentId: P:System.Xml.XmlReaderSettings.IgnoreComments
  id: IgnoreComments
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.IgnoreComments
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreComments
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 361
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating whether to ignore comments.</p>\n"
  syntax:
    content: public bool IgnoreComments { get; set; }
    content.vb: Public Property IgnoreComments As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to ignore comments; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.IgnoreComments
- uid: System.Xml.XmlReaderSettings.IgnoreProcessingInstructions
  commentId: P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions
  id: IgnoreProcessingInstructions
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.IgnoreProcessingInstructions
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreProcessingInstructions
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 362
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating whether to ignore processing instructions.</p>\n"
  syntax:
    content: public bool IgnoreProcessingInstructions { get; set; }
    content.vb: Public Property IgnoreProcessingInstructions As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to ignore processing instructions; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.IgnoreProcessingInstructions
- uid: System.Xml.XmlReaderSettings.IgnoreWhitespace
  commentId: P:System.Xml.XmlReaderSettings.IgnoreWhitespace
  id: IgnoreWhitespace
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.IgnoreWhitespace
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreWhitespace
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 363
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating whether to ignore insignificant white space.</p>\n"
  syntax:
    content: public bool IgnoreWhitespace { get; set; }
    content.vb: Public Property IgnoreWhitespace As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to ignore white space; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.IgnoreWhitespace
- uid: System.Xml.XmlReaderSettings.LineNumberOffset
  commentId: P:System.Xml.XmlReaderSettings.LineNumberOffset
  id: LineNumberOffset
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.LineNumberOffset
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LineNumberOffset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 364
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets line number offset of the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int LineNumberOffset { get; set; }
    content.vb: Public Property LineNumberOffset As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The line number offset. The default is 0.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.LineNumberOffset
- uid: System.Xml.XmlReaderSettings.LinePositionOffset
  commentId: P:System.Xml.XmlReaderSettings.LinePositionOffset
  id: LinePositionOffset
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.LinePositionOffset
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LinePositionOffset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 365
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets line position offset of the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int LinePositionOffset { get; set; }
    content.vb: Public Property LinePositionOffset As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The line position offset. The default is 0.</p>\n"
  seealso:
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.LinePositionOffset
- uid: System.Xml.XmlReaderSettings.MaxCharactersFromEntities
  commentId: P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities
  id: MaxCharactersFromEntities
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.MaxCharactersFromEntities
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxCharactersFromEntities
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 366
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.</p>\n"
  syntax:
    content: public long MaxCharactersFromEntities { get; set; }
    content.vb: Public Property MaxCharactersFromEntities As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum allowable number of characters from expanded entities. The default is 0.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.MaxCharactersFromEntities
- uid: System.Xml.XmlReaderSettings.MaxCharactersInDocument
  commentId: P:System.Xml.XmlReaderSettings.MaxCharactersInDocument
  id: MaxCharactersInDocument
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.MaxCharactersInDocument
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxCharactersInDocument
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 367
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets a value indicating the maximum allowable number of characters in an XML document. A zero (0) value means no limits on the size of the XML document. A non-zero value specifies the maximum size, in characters.</p>\n"
  syntax:
    content: public long MaxCharactersInDocument { get; set; }
    content.vb: Public Property MaxCharactersInDocument As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum allowable number of characters in an XML document. The default is 0.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.MaxCharactersInDocument
- uid: System.Xml.XmlReaderSettings.NameTable
  commentId: P:System.Xml.XmlReaderSettings.NameTable
  id: NameTable
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.NameTable
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameTable
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 368
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> used for atomized string comparisons.</p>\n"
  syntax:
    content: public XmlNameTable NameTable { get; set; }
    content.vb: Public Property NameTable As XmlNameTable
    parameters: []
    return:
      type: System.Xml.XmlNameTable
      description: "\n<p>The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> that stores all the atomized strings used by all <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> instances created using this <xref href=\"System.Xml.XmlReaderSettings\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>The default is <strong>null</strong>. The created <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> instance will use a new empty <xref href=\"System.Xml.NameTable\" data-throw-if-not-resolved=\"false\"></xref> if this value is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.NameTable
- uid: System.Xml.XmlReaderSettings.Clone
  commentId: M:System.Xml.XmlReaderSettings.Clone
  id: Clone
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.Clone()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 369
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Creates a copy of the <xref href=\"System.Xml.XmlReaderSettings\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public XmlReaderSettings Clone()
    content.vb: Public Function Clone As XmlReaderSettings
    return:
      type: System.Xml.XmlReaderSettings
      description: "\n<p>The cloned <xref href=\"System.Xml.XmlReaderSettings\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Xml.XmlReader
    commentId: T:System.Xml.XmlReader
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.Clone()
- uid: System.Xml.XmlReaderSettings.Reset
  commentId: M:System.Xml.XmlReaderSettings.Reset
  id: Reset
  parent: System.Xml.XmlReaderSettings
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings.Reset()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 370
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Resets the members of the settings class to their default values.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  seealso:
  - type: System.Xml.XmlReader
    commentId: T:System.Xml.XmlReader
  - type: System.Xml.XmlReader.Create(System.String)
    commentId: M:System.Xml.XmlReader.Create(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlReaderSettings.Reset()
references:
- uid: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml
  commentId: N:System.Xml
  nameWithType: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.Xml.ConformanceLevel
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.ConformanceLevel
  commentId: T:System.Xml.ConformanceLevel
  nameWithType: ConformanceLevel
- uid: System.Xml.DtdProcessing
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.DtdProcessing
  commentId: T:System.Xml.DtdProcessing
  nameWithType: DtdProcessing
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  commentId: T:System.Int64
  nameWithType: Int64
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlNameTable
  commentId: T:System.Xml.XmlNameTable
  nameWithType: XmlNameTable
- uid: System.Xml.XmlReaderSettings
  parent: System.Xml
  isExternal: false
  name: "XXX"
  fullName: System.Xml.XmlReaderSettings
  commentId: T:System.Xml.XmlReaderSettings
  nameWithType: XmlReaderSettings
