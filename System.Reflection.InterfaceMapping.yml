items:
- uid: System.Reflection.InterfaceMapping
  commentId: T:System.Reflection.InterfaceMapping
  id: InterfaceMapping
  parent: System.Reflection
  children:
  - System.Reflection.InterfaceMapping.InterfaceMethods
  - System.Reflection.InterfaceMapping.InterfaceType
  - System.Reflection.InterfaceMapping.TargetMethods
  - System.Reflection.InterfaceMapping.TargetType
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.InterfaceMapping
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InterfaceMapping
    path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
    startLine: 15
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: "\n<p>Retrieves the mapping of an interface into the actual methods on a class that implements that interface.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public struct InterfaceMapping
    content.vb: >-
      <ComVisible(True)>

      Public Structure InterfaceMapping
  seealso:
  - type: System.Type.GetInterfaceMap(System.Type)
    commentId: M:System.Type.GetInterfaceMap(System.Type)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: InterfaceMapping
- uid: System.Reflection.InterfaceMapping.InterfaceMethods
  commentId: F:System.Reflection.InterfaceMapping.InterfaceMethods
  id: InterfaceMethods
  parent: System.Reflection.InterfaceMapping
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.InterfaceMapping.InterfaceMethods
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InterfaceMethods
    path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
    startLine: 24
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: "\n<p>Shows the methods that are defined on the interface.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public MethodInfo[] InterfaceMethods
    content.vb: >-
      <ComVisible(True)>

      Public InterfaceMethods As MethodInfo()
    return:
      type: System.Reflection.MethodInfo[]
  seealso:
  - type: System.Reflection.MethodInfo
    commentId: T:System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InterfaceMapping.InterfaceMethods
- uid: System.Reflection.InterfaceMapping.InterfaceType
  commentId: F:System.Reflection.InterfaceMapping.InterfaceType
  id: InterfaceType
  parent: System.Reflection.InterfaceMapping
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.InterfaceMapping.InterfaceType
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InterfaceType
    path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
    startLine: 20
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: "\n<p>Shows the type that represents the interface.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public Type InterfaceType
    content.vb: >-
      <ComVisible(True)>

      Public InterfaceType As Type
    return:
      type: System.Type
  seealso:
  - type: System.Type
    commentId: T:System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InterfaceMapping.InterfaceType
- uid: System.Reflection.InterfaceMapping.TargetMethods
  commentId: F:System.Reflection.InterfaceMapping.TargetMethods
  id: TargetMethods
  parent: System.Reflection.InterfaceMapping
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.InterfaceMapping.TargetMethods
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TargetMethods
    path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
    startLine: 22
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: "\n<p>Shows the methods that implement the interface.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public MethodInfo[] TargetMethods
    content.vb: >-
      <ComVisible(True)>

      Public TargetMethods As MethodInfo()
    return:
      type: System.Reflection.MethodInfo[]
  seealso:
  - type: System.Reflection.MethodInfo
    commentId: T:System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InterfaceMapping.TargetMethods
- uid: System.Reflection.InterfaceMapping.TargetType
  commentId: F:System.Reflection.InterfaceMapping.TargetType
  id: TargetType
  parent: System.Reflection.InterfaceMapping
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Reflection.InterfaceMapping.TargetType
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TargetType
    path: src/mscorlib/src/System/Reflection/InterfaceMapping.cs
    startLine: 18
  assemblies:
  - System.Reflection.Extensions
  namespace: System.Reflection
  summary: "\n<p>Represents the type that was used to create the interface mapping.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public Type TargetType
    content.vb: >-
      <ComVisible(True)>

      Public TargetType As Type
    return:
      type: System.Type
  seealso:
  - type: System.Type
    commentId: T:System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InterfaceMapping.TargetType
references:
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: "XXX"
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.ValueType
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection.MethodInfo[]
  name: "XXX"
  fullName: System.Reflection.MethodInfo[]
  fullname.vb: System.Reflection.MethodInfo()
  name.vb: MethodInfo()
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.MethodInfo
    name: "XXX"
    fullName: System.Reflection.MethodInfo
  - name: "XXX"
    fullName: ()
  nameWithType: MethodInfo[]
  nameWithType.vb: MethodInfo()
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
