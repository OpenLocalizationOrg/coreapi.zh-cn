items:
- uid: System.IO.Compression.ZipArchiveEntry
  commentId: T:System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  parent: System.IO.Compression
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ZipArchiveEntry
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 77
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Represents a compressed file within a zip archive.</p>\n"
  syntax:
    content: public class ZipArchiveEntry
    content.vb: Public Class ZipArchiveEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: ZipArchiveEntry
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  commentId: P:System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Archive
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 80
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets the zip archive that the entry belongs to.</p>\n"
  syntax:
    content: public ZipArchive Archive { get; }
    content.vb: Public ReadOnly Property Archive As ZipArchive
    parameters: []
    return:
      type: System.IO.Compression.ZipArchive
      description: "\n<p>The zip archive that the entry belongs to, or <strong>null</strong> if the entry has been deleted.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  commentId: P:System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompressedLength
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 81
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets the compressed size of the entry in the zip archive.</p>\n"
  syntax:
    content: public long CompressedLength { get; }
    content.vb: Public ReadOnly Property CompressedLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The compressed size of the entry in the zip archive.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The value of the property is not available because the entry has been modified.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ZipArchiveEntry.CompressedLength
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  commentId: P:System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullName
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 82
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets the relative path of the entry in the zip archive.</p>\n"
  syntax:
    content: public string FullName { get; }
    content.vb: Public ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The relative path of the entry in the zip archive.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ZipArchiveEntry.FullName
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  commentId: P:System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastWriteTime
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 83
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets or sets the last time the entry in the zip archive was changed.</p>\n"
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    content.vb: Public Property LastWriteTime As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\n<p>The last time the entry in the zip archive was changed.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The attempt to set this property failed, because the zip archive for the entry is in <xref href=\"System.IO.Compression.ZipArchiveMode.Read\" data-throw-if-not-resolved=\"false\"></xref> mode.</p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Create\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>- or -</p>\n<p>The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref> and the entry has been opened.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ZipArchiveEntry.LastWriteTime
- uid: System.IO.Compression.ZipArchiveEntry.Length
  commentId: P:System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 84
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets the uncompressed size of the entry in the zip archive.</p>\n"
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The uncompressed size of the entry in the zip archive.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The value of the property is not available because the entry has been modified.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name
  commentId: P:System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 85
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Gets the file name of the entry in the zip archive.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The file name of the entry in the zip archive.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  commentId: M:System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 86
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Deletes the entry from the zip archive.</p>\n"
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>The entry is already open for reading or writing.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The zip archive for this entry was opened in a mode other than <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The zip archive for this entry has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ZipArchiveEntry.Delete()
- uid: System.IO.Compression.ZipArchiveEntry.Open
  commentId: M:System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 87
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Opens the entry from the zip archive.</p>\n"
  syntax:
    content: public Stream Open()
    content.vb: Public Function Open As Stream
    return:
      type: System.IO.Stream
      description: "\n<p>The stream that represents the contents of the entry.</p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>The entry is already currently open for writing.</p>\n<p>-or-</p>\n<p>The entry has been deleted from the archive.</p>\n<p>-or-</p>\n<p>The archive for this entry was opened with the <xref href=\"System.IO.Compression.ZipArchiveMode.Create\" data-throw-if-not-resolved=\"false\"></xref> mode, and this entry has already been written to. </p>\n"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "\n<p>The entry is either missing from the archive or is corrupt and cannot be read. </p>\n<p>-or-</p>\n<p>The entry has been compressed by using a compression method that is not supported.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The zip archive for this entry has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ZipArchiveEntry.Open()
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  commentId: M:System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 88
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Retrieves the relative path of the entry in the zip archive.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The relative path of the entry, which is the value stored in the <xref href=\"System.IO.Compression.ZipArchiveEntry.FullName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: ZipArchiveEntry.ToString()
references:
- uid: System.IO.Compression
  isExternal: false
  name: "XXX"
  fullName: System.IO.Compression
  commentId: N:System.IO.Compression
  nameWithType: System.IO.Compression
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: "XXX"
  fullName: System.IO.Compression.ZipArchive
  commentId: T:System.IO.Compression.ZipArchive
  nameWithType: ZipArchive
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  commentId: T:System.Int64
  nameWithType: Int64
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  nameWithType: DateTimeOffset
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.IOException
  nameWithType: IOException
  commentId: T:System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.IO.InvalidDataException
  isExternal: false
  name: "XXX"
  fullName: System.IO.InvalidDataException
  nameWithType: InvalidDataException
  commentId: T:System.IO.InvalidDataException
