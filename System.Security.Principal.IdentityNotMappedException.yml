items:
- uid: System.Security.Principal.IdentityNotMappedException
  commentId: T:System.Security.Principal.IdentityNotMappedException
  id: IdentityNotMappedException
  parent: System.Security.Principal
  children:
  - System.Security.Principal.IdentityNotMappedException.#ctor
  - System.Security.Principal.IdentityNotMappedException.#ctor(System.String)
  - System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)
  - System.Security.Principal.IdentityNotMappedException.UnmappedIdentities
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.IdentityNotMappedException
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IdentityNotMappedException
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 22
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Represents an exception for a principal whose identity could not be mapped to a known identity.</p>\n"
  syntax:
    content: 'public sealed class IdentityNotMappedException : Exception, ISerializable, _Exception'
    content.vb: >-
      Public NotInheritable Class IdentityNotMappedException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: IdentityNotMappedException
- uid: System.Security.Principal.IdentityNotMappedException.#ctor
  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor
  id: '#ctor'
  parent: System.Security.Principal.IdentityNotMappedException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 24
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.IdentityNotMappedException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public IdentityNotMappedException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IdentityNotMappedException.IdentityNotMappedException()
- uid: System.Security.Principal.IdentityNotMappedException.#ctor(System.String)
  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.IdentityNotMappedException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 25
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.IdentityNotMappedException\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified error message.</p>\n"
  syntax:
    content: public IdentityNotMappedException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IdentityNotMappedException.IdentityNotMappedException(String)
- uid: System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)
  commentId: M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.Principal.IdentityNotMappedException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.IdentityNotMappedException.IdentityNotMappedException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 26
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.IdentityNotMappedException\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified error message and inner exception.</p>\n"
  syntax:
    content: public IdentityNotMappedException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception.</p>\n"
    - id: inner
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If <em>inner</em> is not null, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IdentityNotMappedException.IdentityNotMappedException(String, Exception)
- uid: System.Security.Principal.IdentityNotMappedException.UnmappedIdentities
  commentId: P:System.Security.Principal.IdentityNotMappedException.UnmappedIdentities
  id: UnmappedIdentities
  parent: System.Security.Principal.IdentityNotMappedException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Principal.IdentityNotMappedException.UnmappedIdentities
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnmappedIdentities
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 27
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Represents the collection of unmapped identities for an <xref href=\"System.Security.Principal.IdentityNotMappedException\" data-throw-if-not-resolved=\"false\"></xref> exception.</p>\n"
  syntax:
    content: public IdentityReferenceCollection UnmappedIdentities { get; }
    content.vb: Public ReadOnly Property UnmappedIdentities As IdentityReferenceCollection
    parameters: []
    return:
      type: System.Security.Principal.IdentityReferenceCollection
      description: "\n<p>The collection of unmapped identities.</p>\n"
  seealso:
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: IdentityNotMappedException.UnmappedIdentities
references:
- uid: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal
  commentId: N:System.Security.Principal
  nameWithType: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Exception
  commentId: T:System.Exception
  nameWithType: Exception
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  nameWithType: ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  nameWithType: _Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: "XXX"
    fullName: System.Exception.GetBaseException
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: "XXX"
    fullName: System.Exception.GetBaseException
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Exception.GetBaseException
  nameWithType: Exception.GetBaseException()
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: "XXX"
    fullName: System.Exception.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: "XXX"
    fullName: System.Exception.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Exception.ToString
  nameWithType: Exception.ToString()
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: "XXX"
    fullName: System.Exception.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: "XXX"
    fullName: System.Exception.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Exception.GetType
  nameWithType: Exception.GetType()
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Message
  commentId: P:System.Exception.Message
  nameWithType: Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Data
  commentId: P:System.Exception.Data
  nameWithType: Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  nameWithType: Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  nameWithType: Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  nameWithType: Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  nameWithType: Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Source
  commentId: P:System.Exception.Source
  nameWithType: Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.HResult
  commentId: P:System.Exception.HResult
  nameWithType: Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  nameWithType: Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Security.Principal.IdentityReferenceCollection
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.IdentityReferenceCollection
  commentId: T:System.Security.Principal.IdentityReferenceCollection
  nameWithType: IdentityReferenceCollection
