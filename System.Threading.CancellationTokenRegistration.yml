items:
- uid: System.Threading.CancellationTokenRegistration
  commentId: T:System.Threading.CancellationTokenRegistration
  id: CancellationTokenRegistration
  parent: System.Threading
  children:
  - System.Threading.CancellationTokenRegistration.Dispose
  - System.Threading.CancellationTokenRegistration.Equals(System.Object)
  - System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)
  - System.Threading.CancellationTokenRegistration.GetHashCode
  - System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  - System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CancellationTokenRegistration
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 19
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Represents a callback delegate that has been registered with a <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: >-
      [HostProtection(Synchronization = true, ExternalThreading = true)]

      public struct CancellationTokenRegistration : IEquatable<CancellationTokenRegistration>, IDisposable
    content.vb: >-
      <HostProtection(Synchronization:=True, ExternalThreading:=True)>

      Public Structure CancellationTokenRegistration
          Implements IEquatable(Of CancellationTokenRegistration), IDisposable
  implements:
  - System.IDisposable
  - System.IEquatable{System.Threading.CancellationTokenRegistration}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: CancellationTokenRegistration
- uid: System.Threading.CancellationTokenRegistration.Dispose
  commentId: M:System.Threading.CancellationTokenRegistration.Dispose
  id: Dispose
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 61
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Releases all resources used by the current instance of the <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CancellationTokenRegistration.Dispose()
- uid: System.Threading.CancellationTokenRegistration.Equals(System.Object)
  commentId: M:System.Threading.CancellationTokenRegistration.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 126
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The other object to which to compare this instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True, if both this and <em>obj</em> are equal. False, otherwise.</p>\n<p>Two <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: CancellationTokenRegistration.Equals(Object)
- uid: System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)
  commentId: M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)
  id: Equals(System.Threading.CancellationTokenRegistration)
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 141
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool Equals(CancellationTokenRegistration other)
    content.vb: Public Function Equals(other As CancellationTokenRegistration) As Boolean
    parameters:
    - id: other
      type: System.Threading.CancellationTokenRegistration
      description: "\n<p>The other <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> to which to compare this instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True, if both this and <em>other</em> are equal. False, otherwise.</p>\n<p> Two <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IEquatable{System.Threading.CancellationTokenRegistration}.Equals(System.Threading.CancellationTokenRegistration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CancellationTokenRegistration.Equals(CancellationTokenRegistration)
- uid: System.Threading.CancellationTokenRegistration.GetHashCode
  commentId: M:System.Threading.CancellationTokenRegistration.GetHashCode
  id: GetHashCode
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 152
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Serves as a hash function for a <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: CancellationTokenRegistration.GetHashCode()
- uid: System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  commentId: M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  id: op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.Equality(System.Threading.CancellationTokenRegistration, System.Threading.CancellationTokenRegistration)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 100
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.</p>\n"
  syntax:
    content: public static bool operator ==(CancellationTokenRegistration left, CancellationTokenRegistration right)
    content.vb: Public Shared Operator =(left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean
    parameters:
    - id: left
      type: System.Threading.CancellationTokenRegistration
      description: "\n<p>The first instance.</p>\n"
    - id: right
      type: System.Threading.CancellationTokenRegistration
      description: "\n<p>The second instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the instances are equal; otherwise, false.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: CancellationTokenRegistration.Equality(CancellationTokenRegistration, CancellationTokenRegistration)
- uid: System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  commentId: M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  id: op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)
  parent: System.Threading.CancellationTokenRegistration
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration.Inequality(System.Threading.CancellationTokenRegistration, System.Threading.CancellationTokenRegistration)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Threading/CancellationTokenRegistration.cs
    startLine: 111
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading
  summary: "\n<p>Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.</p>\n"
  syntax:
    content: public static bool operator !=(CancellationTokenRegistration left, CancellationTokenRegistration right)
    content.vb: Public Shared Operator <>(left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean
    parameters:
    - id: left
      type: System.Threading.CancellationTokenRegistration
      description: "\n<p>The first instance.</p>\n"
    - id: right
      type: System.Threading.CancellationTokenRegistration
      description: "\n<p>The second instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the instances are not equal; otherwise, false.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: CancellationTokenRegistration.Inequality(CancellationTokenRegistration, CancellationTokenRegistration)
references:
- uid: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.IEquatable{System.Threading.CancellationTokenRegistration}
  parent: System
  definition: System.IEquatable`1
  name: "XXX"
  fullName: System.IEquatable<System.Threading.CancellationTokenRegistration>
  fullname.vb: System.IEquatable(Of System.Threading.CancellationTokenRegistration)
  name.vb: IEquatable(Of CancellationTokenRegistration)
  spec.csharp:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Threading.CancellationTokenRegistration
    name: "XXX"
    fullName: System.Threading.CancellationTokenRegistration
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Threading.CancellationTokenRegistration
    name: "XXX"
    fullName: System.Threading.CancellationTokenRegistration
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<CancellationTokenRegistration>
  nameWithType.vb: IEquatable(Of CancellationTokenRegistration)
  commentId: T:System.IEquatable{System.Threading.CancellationTokenRegistration}
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IEquatable`1
  isExternal: false
  name: "XXX"
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  commentId: T:System.IEquatable`1
- uid: System.ValueType
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: "XXX"
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IEquatable{System.Threading.CancellationTokenRegistration}.Equals(System.Threading.CancellationTokenRegistration)
  parent: System.IEquatable{System.Threading.CancellationTokenRegistration}
  definition: System.IEquatable`1.Equals(`0)
  name: "XXX"
  fullName: System.IEquatable<System.Threading.CancellationTokenRegistration>.Equals(System.Threading.CancellationTokenRegistration)
  fullname.vb: System.IEquatable(Of System.Threading.CancellationTokenRegistration).Equals(System.Threading.CancellationTokenRegistration)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable<System.Threading.CancellationTokenRegistration>.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Threading.CancellationTokenRegistration
    name: "XXX"
    fullName: System.Threading.CancellationTokenRegistration
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable(Of System.Threading.CancellationTokenRegistration).Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Threading.CancellationTokenRegistration
    name: "XXX"
    fullName: System.Threading.CancellationTokenRegistration
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<CancellationTokenRegistration>.Equals(CancellationTokenRegistration)
  nameWithType.vb: IEquatable(Of CancellationTokenRegistration).Equals(CancellationTokenRegistration)
  commentId: M:System.IEquatable{System.Threading.CancellationTokenRegistration}.Equals(System.Threading.CancellationTokenRegistration)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading.CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  commentId: T:System.Threading.CancellationTokenRegistration
- uid: System.IEquatable`1.Equals(`0)
  isExternal: false
  name: "XXX"
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable<T>.Equals
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable(Of T).Equals
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  commentId: M:System.IEquatable`1.Equals(`0)
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
