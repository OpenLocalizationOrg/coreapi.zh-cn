items:
- uid: System.Security.Cryptography.ECPoint
  commentId: T:System.Security.Cryptography.ECPoint
  id: ECPoint
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ECPoint.X
  - System.Security.Cryptography.ECPoint.Y
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: ECPoint
  fullName: System.Security.Cryptography.ECPoint
  type: Struct
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ECPoint
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 106
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct ECPoint
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure ECPoint
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Security.Cryptography.ECPoint.X
  commentId: F:System.Security.Cryptography.ECPoint.X
  id: X
  parent: System.Security.Cryptography.ECPoint
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: ECPoint.X
  fullName: System.Security.Cryptography.ECPoint.X
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 109
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] X
    content.vb: Public X As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECPoint.Y
  commentId: F:System.Security.Cryptography.ECPoint.Y
  id: Y
  parent: System.Security.Cryptography.ECPoint
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: ECPoint.Y
  fullName: System.Security.Cryptography.ECPoint.Y
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 110
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Y
    content.vb: Public Y As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: "XXX"
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: "XXX"
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: "XXX"
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: "XXX"
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: "XXX"
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  name: "XXX"
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: "XXX"
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: "XXX"
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    nameWithType: ()
    fullName: ()
