items:
- uid: System.ComponentModel.TypeDescriptor
  commentId: T:System.ComponentModel.TypeDescriptor
  id: TypeDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptor.InterfaceType
  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  - System.ComponentModel.TypeDescriptor.Refreshed
  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.</p>\n"
  syntax:
    content: public sealed class TypeDescriptor
    content.vb: Public NotInheritable Class TypeDescriptor
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.Reflection
    commentId: N:System.Reflection
  - type: System.ComponentModel.IComponent
    commentId: T:System.ComponentModel.IComponent
  - type: System.ComponentModel.ISite
    commentId: T:System.ComponentModel.ISite
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: TypeDescriptor
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  commentId: P:System.ComponentModel.TypeDescriptor.InterfaceType
  id: InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InterfaceType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 85
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a type that represents a type description provider for all interface types. </p>\n"
  syntax:
    content: public static Type InterfaceType { get; }
    content.vb: Public Shared ReadOnly Property InterfaceType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents a custom type description provider for all interface types. </p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  id: Refreshed
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
  type: Event
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refreshed
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 109
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Occurs when the cache for a component is cleared.</p>\n"
  syntax:
    content: public static event RefreshEventHandler Refreshed
    content.vb: Public Shared Event Refreshed As RefreshEventHandler
    return:
      type: System.ComponentModel.RefreshEventHandler
  seealso:
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.Refreshed
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  id: AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 150
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds class-level attributes to the target component instance.</p>\n"
  syntax:
    content: public static TypeDescriptionProvider AddAttributes(object instance, params Attribute[] attributes)
    content.vb: Public Shared Function AddAttributes(instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> objects to add to the component's class.</p>\n"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> that was used to add the specified attributes.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute())
  name.vb: AddAttributes(Object, Attribute())
  nameWithType: TypeDescriptor.AddAttributes(Object, Attribute[])
  nameWithType.vb: TypeDescriptor.AddAttributes(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  id: AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 121
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds class-level attributes to the target component type.</p>\n"
  syntax:
    content: public static TypeDescriptionProvider AddAttributes(Type type, params Attribute[] attributes)
    content.vb: Public Shared Function AddAttributes(type As Type, ParamArray attributes As Attribute()) As TypeDescriptionProvider
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> objects to add to the component's class.</p>\n"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> that was used to add the specified attributes.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute())
  name.vb: AddAttributes(Type, Attribute())
  nameWithType: TypeDescriptor.AddAttributes(Type, Attribute[])
  nameWithType.vb: TypeDescriptor.AddAttributes(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  id: AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type, System.Collections.Hashtable)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddEditorTable
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 176
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds an editor table for the given editor base type. </p>\n"
  syntax:
    content: public static void AddEditorTable(Type editorBaseType, Hashtable table)
    content.vb: Public Shared Sub AddEditorTable(editorBaseType As Type, table As Hashtable)
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "\n<p>The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing. </p>\n"
    - id: table
      type: System.Collections.Hashtable
      description: "\n<p>The <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> to add. </p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.AddEditorTable(Type, Hashtable)
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 225
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds a type description provider for a single instance of a component.</p>\n"
  syntax:
    content: public static void AddProvider(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider, Object)
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 191
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds a type description provider for a component class.</p>\n"
  syntax:
    content: public static void AddProvider(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider, Type)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 299
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds a type description provider for a single instance of a component.</p>\n"
  syntax:
    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.TypeDescriptorPermission
    commentId: T:System.Security.Permissions.TypeDescriptorPermission
  - type: System.Reflection.Assembly.PermissionSet
    commentId: P:System.Reflection.Assembly.PermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider, Object)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 271
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Adds a type description provider for a component class.</p>\n"
  syntax:
    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.TypeDescriptorPermission
    commentId: T:System.Security.Permissions.TypeDescriptorPermission
  - type: System.Reflection.Assembly.PermissionSet
    commentId: P:System.Reflection.Assembly.PermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider, Type)
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  id: CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateAssociation
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 394
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates a primary-secondary association between two objects.</p>\n"
  syntax:
    content: public static void CreateAssociation(object primary, object secondary)
    content.vb: Public Shared Sub CreateAssociation(primary As Object, secondary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: "\n<p>The primary <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: secondary
      type: System.Object
      description: "\n<p>The secondary <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>primary</em> is equal to <em>secondary</em>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.CreateAssociation(Object, Object)
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 467
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, params Attribute[] attributes)
    content.vb: Public Shared Function CreateEvent(componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The type of the component for which to create the new event. </p>\n"
    - id: oldEventDescriptor
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>The existing event information. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>The new attributes. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>A new <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that has merged the specified metadata attributes with the existing metadata attributes.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute())
  name.vb: CreateEvent(Type, EventDescriptor, Attribute())
  nameWithType: TypeDescriptor.CreateEvent(Type, EventDescriptor, Attribute[])
  nameWithType.vb: TypeDescriptor.CreateEvent(Type, EventDescriptor, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 458
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</p>\n"
  syntax:
    content: public static EventDescriptor CreateEvent(Type componentType, string name, Type type, params Attribute[] attributes)
    content.vb: Public Shared Function CreateEvent(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The type of the component the event lives on. </p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the event. </p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The type of the delegate that handles the event. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>The attributes for this event. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that is bound to a type.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute())
  name.vb: CreateEvent(Type, String, Type, Attribute())
  nameWithType: TypeDescriptor.CreateEvent(Type, String, Type, Attribute[])
  nameWithType.vb: TypeDescriptor.CreateEvent(Type, String, Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type[], System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateInstance
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 477
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates an object that can substitute for another data type. </p>\n"
  syntax:
    content: public static object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args)
    content.vb: Public Shared Function CreateInstance(provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "\n<p>The service provider that provides a <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> service. This parameter can be <strong>null</strong>.</p>\n"
    - id: objectType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of object to create.</p>\n"
    - id: argTypes
      type: System.Type[]
      description: "\n<p>An optional array of parameter types to be passed to the object's constructor. This parameter can be <strong>null</strong> or an array of zero length.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An optional array of parameter values to pass to the object's constructor. If not <strong>null</strong>, the number of elements must be the same as <em>argTypes</em>. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the substitute data type if an associated <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> is found; otherwise, <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>objectType</em> is <strong>null</strong>, or <em>args</em> is <strong>null</strong> when <em>argTypes</em> is not <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>argTypes</em> and <em>args</em> have different number of elements.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type(), System.Object())
  name.vb: CreateInstance(IServiceProvider, Type, Type(), Object())
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider, Type, Type[], Object[])
  nameWithType.vb: TypeDescriptor.CreateInstance(IServiceProvider, Type, Type(), Object())
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 529
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates a new property descriptor from an existing property descriptor, using the specified existing <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and attribute array.</p>\n"
  syntax:
    content: public static PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes)
    content.vb: Public Shared Function CreateProperty(componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the component that the property is a member of. </p>\n"
    - id: oldPropertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>The existing property descriptor. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>The new attributes for this property. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A new <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that has the specified metadata attributes merged with the existing metadata attributes.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute())
  name.vb: CreateProperty(Type, PropertyDescriptor, Attribute())
  nameWithType: TypeDescriptor.CreateProperty(Type, PropertyDescriptor, Attribute[])
  nameWithType.vb: TypeDescriptor.CreateProperty(Type, PropertyDescriptor, Attribute())
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 520
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</p>\n"
  syntax:
    content: public static PropertyDescriptor CreateProperty(Type componentType, string name, Type type, params Attribute[] attributes)
    content.vb: Public Shared Function CreateProperty(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the component that the property is a member of. </p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the property. </p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the property. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>The new attributes for this property. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute())
  name.vb: CreateProperty(Type, String, Type, Attribute())
  nameWithType: TypeDescriptor.CreateProperty(Type, String, Type, Attribute[])
  nameWithType.vb: TypeDescriptor.CreateProperty(Type, String, Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  id: GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAssociation
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 608
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an instance of the type associated with the specified primary object.</p>\n"
  syntax:
    content: public static object GetAssociation(Type type, object primary)
    content.vb: Public Shared Function GetAssociation(type As Type, primary As Object) As Object
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    - id: primary
      type: System.Object
      description: "\n<p>The primary object of the association.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <em>primary</em> if no specified association exists.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
    commentId: M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - type: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetAssociation(Type, Object)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 710
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of attributes for the specified component.</p>\n"
  syntax:
    content: public static AttributeCollection GetAttributes(object component)
    content.vb: Public Shared Function GetAttributes(component As Object) As AttributeCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component for which you want to get attributes. </p>\n"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the attributes for the component. If <em>component</em> is <strong>null</strong>, this method returns an empty collection.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetAttributes(Object)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  id: GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 718
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</p>\n"
  syntax:
    content: public static AttributeCollection GetAttributes(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetAttributes(component As Object, noCustomTypeDesc As Boolean) As AttributeCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component for which you want to get attributes. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to use a baseline set of attributes from the custom type descriptor if <em>component</em> is of type <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> with the attributes for the component. If the component is <strong>null</strong>, this method returns an empty collection.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetAttributes(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  id: GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 695
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of attributes for the specified type of component.</p>\n"
  syntax:
    content: public static AttributeCollection GetAttributes(Type componentType)
    content.vb: Public Shared Function GetAttributes(componentType As Type) As AttributeCollection
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component. </p>\n"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> with the attributes for the type of the component. If the component is <strong>null</strong>, this method returns an empty collection.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetAttributes(Type)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 812
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the class for the specified component using the default type descriptor.</p>\n"
  syntax:
    content: public static string GetClassName(object component)
    content.vb: Public Shared Function GetClassName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> for which you want the class name. </p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the name of the class for the specified component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetClassName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  id: GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 820
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the class for the specified component using a custom type descriptor.</p>\n"
  syntax:
    content: public static string GetClassName(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetClassName(component As Object, noCustomTypeDesc As Boolean) As String
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> for which you want the class name. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the name of the class for the specified component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetClassName(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  id: GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 829
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the class for the specified type.</p>\n"
  syntax:
    content: public static string GetClassName(Type componentType)
    content.vb: Public Shared Function GetClassName(componentType As Type) As String
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the name of the class for the specified component type.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>componentType</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetClassName(Type)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  id: GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 837
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the specified component using the default type descriptor.</p>\n"
  syntax:
    content: public static string GetComponentName(object component)
    content.vb: Public Shared Function GetComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> for which you want the class name. </p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the name of the specified component, or <strong>null</strong> if there is no component name.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.CustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  id: GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 845
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the specified component using a custom type descriptor.</p>\n"
  syntax:
    content: public static string GetComponentName(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetComponentName(component As Object, noCustomTypeDesc As Boolean) As String
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> for which you want the class name. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.String
      description: "\n<p>The name of the class for the specified component, or <strong>null</strong> if there is no component name.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.CustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetComponentName(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 854
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for the type of the specified component.</p>\n"
  syntax:
    content: public static TypeConverter GetConverter(object component)
    content.vb: Public Shared Function GetConverter(component As Object) As TypeConverter
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the converter for. </p>\n"
    return:
      type: System.ComponentModel.TypeConverter
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> for the specified component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeConverterAttribute
    commentId: T:System.ComponentModel.TypeConverterAttribute
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetConverter(Object)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  id: GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 861
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for the type of the specified component with a custom type descriptor.</p>\n"
  syntax:
    content: public static TypeConverter GetConverter(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetConverter(component As Object, noCustomTypeDesc As Boolean) As TypeConverter
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the converter for. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.TypeConverter
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> for the specified component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeConverterAttribute
    commentId: T:System.ComponentModel.TypeConverterAttribute
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetConverter(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 871
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for the specified type.</p>\n"
  syntax:
    content: public static TypeConverter GetConverter(Type type)
    content.vb: Public Shared Function GetConverter(type As Type) As TypeConverter
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component. </p>\n"
    return:
      type: System.ComponentModel.TypeConverter
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> for the specified type.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.TypeConverterAttribute
    commentId: T:System.ComponentModel.TypeConverterAttribute
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetConverter(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 894
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default event for the specified component.</p>\n"
  syntax:
    content: public static EventDescriptor GetDefaultEvent(object component)
    content.vb: Public Shared Function GetDefaultEvent(component As Object) As EventDescriptor
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the event for. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.DefaultEventAttribute
    commentId: T:System.ComponentModel.DefaultEventAttribute
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  id: GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 902
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default event for a component with a custom type descriptor.</p>\n"
  syntax:
    content: public static EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetDefaultEvent(component As Object, noCustomTypeDesc As Boolean) As EventDescriptor
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the event for. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.DefaultEventAttribute
    commentId: T:System.ComponentModel.DefaultEventAttribute
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultEvent(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  id: GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 880
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default event for the specified type of component.</p>\n"
  syntax:
    content: public static EventDescriptor GetDefaultEvent(Type componentType)
    content.vb: Public Shared Function GetDefaultEvent(componentType As Type) As EventDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.DefaultEventAttribute
    commentId: T:System.ComponentModel.DefaultEventAttribute
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 931
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default property for the specified component.</p>\n"
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(object component)
    content.vb: Public Shared Function GetDefaultProperty(component As Object) As PropertyDescriptor
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the default property for. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.DefaultPropertyAttribute
    commentId: T:System.ComponentModel.DefaultPropertyAttribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  id: GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 939
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default property for the specified component with a custom type descriptor.</p>\n"
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetDefaultProperty(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the default property for. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.DefaultPropertyAttribute
    commentId: T:System.ComponentModel.DefaultPropertyAttribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultProperty(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  id: GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 917
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default property for the specified type of component.</p>\n"
  syntax:
    content: public static PropertyDescriptor GetDefaultProperty(Type componentType)
    content.vb: Public Shared Function GetDefaultProperty(componentType As Type) As PropertyDescriptor
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the class to get the property for. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\n"
  seealso:
  - type: System.ComponentModel.DefaultPropertyAttribute
    commentId: T:System.ComponentModel.DefaultPropertyAttribute
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1011
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets an editor with the specified base type for the specified component.</p>\n"
  syntax:
    content: public static object GetEditor(object component, Type editorBaseType)
    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type) As Object
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the editor for. </p>\n"
    - id: editorBaseType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the base type of the editor you want to find. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEditor(Object, Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  id: GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1020
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</p>\n"
  syntax:
    content: public static object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component to get the editor for. </p>\n"
    - id: editorBaseType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the base type of the editor you want to find. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>A flag indicating whether custom type description information should be considered.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEditor(Object, Type, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  id: GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1034
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an editor with the specified base type for the specified type.</p>\n"
  syntax:
    content: public static object GetEditor(Type type, Type editorBaseType)
    content.vb: Public Shared Function GetEditor(type As Type, editorBaseType As Type) As Object
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    - id: editorBaseType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the base type of the editor you are trying to find. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the editor object that can be cast to the given base type, or <strong>null</strong> if no editor of the requested type can be found.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEditor(Type, Type)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1087
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for the specified component.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component)
    content.vb: Public Shared Function GetEvents(component As Object) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the events for. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events for this component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEvents(Object)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1105
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for a specified component using a specified array of attributes as a filter.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes)
    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the events for. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that you can use as a filter. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events that match the specified attributes for this component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute())
  name.vb: GetEvents(Object, Attribute())
  nameWithType: TypeDescriptor.GetEvents(Object, Attribute[])
  nameWithType.vb: TypeDescriptor.GetEvents(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  id: GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1114
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the events for. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> to use as a filter. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events that match the specified attributes for this component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute(), System.Boolean)
  name.vb: GetEvents(Object, Attribute(), Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object, Attribute[], Boolean)
  nameWithType.vb: TypeDescriptor.GetEvents(Object, Attribute(), Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  id: GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1095
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for a specified component with a custom type descriptor.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetEvents(component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the events for. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events for this component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEvents(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  id: GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1047
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for a specified type of component.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(Type componentType)
    content.vb: Public Shared Function GetEvents(componentType As Type) As EventDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events for this component.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetEvents(Type)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  id: GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1062
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</p>\n"
  syntax:
    content: public static EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes)
    content.vb: Public Shared Function GetEvents(componentType As Type, attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that you can use as a filter. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events that match the specified attributes for this component.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute())
  name.vb: GetEvents(Type, Attribute())
  nameWithType: TypeDescriptor.GetEvents(Type, Attribute[])
  nameWithType.vb: TypeDescriptor.GetEvents(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFullComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1245
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the fully qualified name of the component.</p>\n"
  syntax:
    content: public static string GetFullComponentName(object component)
    content.vb: Public Shared Function GetFullComponentName(component As Object) As String
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The <xref href=\"System.ComponentModel.Component\" data-throw-if-not-resolved=\"false\"></xref> to find the name for.</p>\n"
    return:
      type: System.String
      description: "\n<p>The fully qualified name of the specified component, or <strong>null</strong> if the component has no name.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>component</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1308
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified component.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component)
    content.vb: Public Shared Function GetProperties(component As Object) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the properties for. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the properties for the specified component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetProperties(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1327
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)
    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the properties for. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> to use as a filter. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the properties that match the specified attributes for the specified component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute())
  name.vb: GetProperties(Object, Attribute())
  nameWithType: TypeDescriptor.GetProperties(Object, Attribute[])
  nameWithType.vb: TypeDescriptor.GetProperties(Object, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  id: GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1337
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the properties for. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> to use as a filter. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the events that match the specified attributes for the specified component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute(), System.Boolean)
  name.vb: GetProperties(Object, Attribute(), Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object, Attribute[], Boolean)
  nameWithType.vb: TypeDescriptor.GetProperties(Object, Attribute(), Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  id: GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1316
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified component using the default type descriptor.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc)
    content.vb: Public Shared Function GetProperties(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component to get the properties for. </p>\n"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to not consider custom type description information; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the properties for a specified component.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>component</em> is a cross-process remoted object.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetProperties(Object, Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1268
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified type of component.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(Type componentType)
    content.vb: Public Shared Function GetProperties(componentType As Type) As PropertyDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the component to get properties for.</p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the properties for a specified type of component.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetProperties(Type)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  id: GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1283
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</p>\n"
  syntax:
    content: public static PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes)
    content.vb: Public Shared Function GetProperties(componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: componentType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> to use as a filter. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> with the properties that match the specified attributes for this type of component.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute())
  name.vb: GetProperties(Type, Attribute())
  nameWithType: TypeDescriptor.GetProperties(Type, Attribute[])
  nameWithType.vb: TypeDescriptor.GetProperties(Type, Attribute())
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  id: GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1456
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the type description provider for the specified component.</p>\n"
  syntax:
    content: public static TypeDescriptionProvider GetProvider(object instance)
    content.vb: Public Shared Function GetProvider(instance As Object) As TypeDescriptionProvider
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetProvider(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  id: GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1438
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the type description provider for the specified type.</p>\n"
  syntax:
    content: public static TypeDescriptionProvider GetProvider(Type type)
    content.vb: Public Shared Function GetProvider(type As Type) As TypeDescriptionProvider
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified type.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  - type: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetProvider(Type)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1497
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that can be used to perform reflection, given an object.</p>\n"
  syntax:
    content: public static Type GetReflectionType(object instance)
    content.vb: Public Shared Function GetReflectionType(instance As Object) As Type
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> for the specified object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetReflectionType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 1482
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that can be used to perform reflection, given a class type.</p>\n"
  syntax:
    content: public static Type GetReflectionType(Type type)
    content.vb: Public Shared Function GetReflectionType(type As Type) As Type
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the specified class.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  id: Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2193
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Clears the properties and events for the specified component from the cache.</p>\n"
  syntax:
    content: public static void Refresh(object component)
    content.vb: Public Shared Sub Refresh(component As Object)
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>A component for which the properties or events have changed. </p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refreshed
    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.Refresh(Object)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  id: Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2424
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Clears the properties and events for the specified assembly from the cache.</p>\n"
  syntax:
    content: public static void Refresh(Assembly assembly)
    content.vb: Public Shared Sub Refresh(assembly As Assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "\n<p>The <xref href=\"System.Reflection.Assembly\" data-throw-if-not-resolved=\"false\"></xref> that represents the assembly to refresh. Each <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> in this assembly will be refreshed. </p>\n"
  seealso:
  - type: System.Reflection.Assembly
    commentId: T:System.Reflection.Assembly
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.IExtenderProvider
    commentId: T:System.ComponentModel.IExtenderProvider
  - type: System.ComponentModel.Design.IDesigner
    commentId: T:System.ComponentModel.Design.IDesigner
  - type: System.ComponentModel.TypeDescriptor.Refreshed
    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.Refresh(Assembly)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  id: Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2355
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Clears the properties and events for the specified module from the cache.</p>\n"
  syntax:
    content: public static void Refresh(Module module)
    content.vb: Public Shared Sub Refresh(module As  Module)
    parameters:
    - id: module
      type: System.Reflection.Module
      description: "\n<p>The <xref href=\"System.Reflection.Module\" data-throw-if-not-resolved=\"false\"></xref> that represents the module to refresh. Each <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> in this module will be refreshed. </p>\n"
  seealso:
  - type: System.Reflection.Module
    commentId: T:System.Reflection.Module
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.IExtenderProvider
    commentId: T:System.ComponentModel.IExtenderProvider
  - type: System.ComponentModel.Design.IDesigner
    commentId: T:System.ComponentModel.Design.IDesigner
  - type: System.ComponentModel.TypeDescriptor.Refreshed
    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.Refresh(Module)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  id: Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2287
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Clears the properties and events for the specified type of component from the cache.</p>\n"
  syntax:
    content: public static void Refresh(Type type)
    content.vb: Public Shared Sub Refresh(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.IExtenderProvider
    commentId: T:System.ComponentModel.IExtenderProvider
  - type: System.ComponentModel.Design.IDesigner
    commentId: T:System.ComponentModel.Design.IDesigner
  - type: System.ComponentModel.TypeDescriptor.Refreshed
    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.Refresh(Type)
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  id: RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAssociation
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2441
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes an association between two objects.</p>\n"
  syntax:
    content: public static void RemoveAssociation(object primary, object secondary)
    content.vb: Public Shared Sub RemoveAssociation(primary As Object, secondary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: "\n<p>The primary <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: secondary
      type: System.Object
      description: "\n<p>The secondary <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveAssociation(Object, Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  id: RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAssociations
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2482
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes all associations for a primary object.</p>\n"
  syntax:
    content: public static void RemoveAssociations(object primary)
    content.vb: Public Shared Sub RemoveAssociations(primary As Object)
    parameters:
    - id: primary
      type: System.Object
      description: "\n<p>The primary <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> in an association.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>primary</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2527
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes a previously added type description provider that is associated with the specified object.</p>\n"
  syntax:
    content: public static void RemoveProvider(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to remove.</p>\n"
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider, Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProvider
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2503
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes a previously added type description provider that is associated with the specified type.</p>\n"
  syntax:
    content: public static void RemoveProvider(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to remove.</p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider, Type)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2584
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes a previously added type description provider that is associated with the specified object.</p>\n"
  syntax:
    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, object instance)
    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, instance As Object)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to remove.</p>\n"
    - id: instance
      type: System.Object
      description: "\n<p>An instance of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.TypeDescriptorPermission
    commentId: T:System.Security.Permissions.TypeDescriptorPermission
  - type: System.Reflection.Assembly.PermissionSet
    commentId: P:System.Reflection.Assembly.PermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider, Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveProviderTransparent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2557
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Removes a previously added type description provider that is associated with the specified type.</p>\n"
  syntax:
    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, Type type)
    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, type As Type)
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "\n<p>The <xref href=\"System.ComponentModel.TypeDescriptionProvider\" data-throw-if-not-resolved=\"false\"></xref> to remove.</p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the target component.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>One or both of the parameters are <strong>null</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.TypeDescriptorPermission
    commentId: T:System.Security.Permissions.TypeDescriptorPermission
  - type: System.Reflection.Assembly.PermissionSet
    commentId: P:System.Reflection.Assembly.PermissionSet
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider, Type)
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  commentId: M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  id: SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SortDescriptorArray
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs
    startLine: 2629
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Sorts descriptors using the name of the descriptor.</p>\n"
  syntax:
    content: public static void SortDescriptorArray(IList infos)
    content.vb: Public Shared Sub SortDescriptorArray(infos As IList)
    parameters:
    - id: infos
      type: System.Collections.IList
      description: "\n<p>An <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that contains the descriptors to sort. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>infos</em> is <strong>null</strong>.</p>\n"
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.Collections.IList
    commentId: T:System.Collections.IList
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.ComponentModel.RefreshEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.RefreshEventHandler
  nameWithType: RefreshEventHandler
  commentId: T:System.ComponentModel.RefreshEventHandler
- uid: System.Attribute[]
  name: "XXX"
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Attribute[]
  nameWithType.vb: Attribute()
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  commentId: T:System.ComponentModel.TypeDescriptionProvider
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Hashtable
  nameWithType: Hashtable
  commentId: T:System.Collections.Hashtable
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor
  nameWithType: EventDescriptor
  commentId: T:System.ComponentModel.EventDescriptor
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IServiceProvider
  nameWithType: IServiceProvider
  commentId: T:System.IServiceProvider
- uid: System.Type[]
  name: "XXX"
  fullName: System.Type[]
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: "XXX"
    fullName: ()
  nameWithType: Type[]
  nameWithType.vb: Type()
- uid: System.Object[]
  name: "XXX"
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptor
  nameWithType: PropertyDescriptor
  commentId: T:System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.AttributeCollection
  nameWithType: AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.TypeConverter
  nameWithType: TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  commentId: T:System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  commentId: T:System.ComponentModel.PropertyDescriptorCollection
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.Assembly
  nameWithType: Assembly
  commentId: T:System.Reflection.Assembly
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.Module
  nameWithType: Module
  commentId: T:System.Reflection.Module
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList
  nameWithType: IList
  commentId: T:System.Collections.IList
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
