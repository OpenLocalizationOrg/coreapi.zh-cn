items:
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  id: BinaryWriter
  parent: System.IO
  children:
  - System.IO.BinaryWriter.#ctor
  - System.IO.BinaryWriter.#ctor(System.IO.Stream)
  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  - System.IO.BinaryWriter.BaseStream
  - System.IO.BinaryWriter.Dispose
  - System.IO.BinaryWriter.Dispose(System.Boolean)
  - System.IO.BinaryWriter.Flush
  - System.IO.BinaryWriter.Null
  - System.IO.BinaryWriter.OutStream
  - System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  - System.IO.BinaryWriter.Write(System.Boolean)
  - System.IO.BinaryWriter.Write(System.Byte)
  - System.IO.BinaryWriter.Write(System.Byte[])
  - System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.Char)
  - System.IO.BinaryWriter.Write(System.Char[])
  - System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.Decimal)
  - System.IO.BinaryWriter.Write(System.Double)
  - System.IO.BinaryWriter.Write(System.Int16)
  - System.IO.BinaryWriter.Write(System.Int32)
  - System.IO.BinaryWriter.Write(System.Int64)
  - System.IO.BinaryWriter.Write(System.SByte)
  - System.IO.BinaryWriter.Write(System.Single)
  - System.IO.BinaryWriter.Write(System.String)
  - System.IO.BinaryWriter.Write(System.UInt16)
  - System.IO.BinaryWriter.Write(System.UInt32)
  - System.IO.BinaryWriter.Write(System.UInt64)
  - System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BinaryWriter
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 26
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes primitive types in binary to a stream and supports writing strings in a specific encoding.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public class BinaryWriter : IDisposable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Class BinaryWriter
          Implements IDisposable
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: BinaryWriter
- uid: System.IO.BinaryWriter.Null
  commentId: F:System.IO.BinaryWriter.Null
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  fullName: System.IO.BinaryWriter.Null
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 30
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Specifies a <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> with no backing store.</p>\n"
  syntax:
    content: public static readonly BinaryWriter Null
    content.vb: Public Shared ReadOnly Null As BinaryWriter
    return:
      type: System.IO.BinaryWriter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: BinaryWriter.Null
- uid: System.IO.BinaryWriter.OutStream
  commentId: F:System.IO.BinaryWriter.OutStream
  id: OutStream
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.OutStream
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OutStream
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 32
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Holds the underlying stream.</p>\n"
  syntax:
    content: protected Stream OutStream
    content.vb: Protected OutStream As Stream
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: BinaryWriter.OutStream
- uid: System.IO.BinaryWriter.#ctor
  commentId: M:System.IO.BinaryWriter.#ctor
  id: '#ctor'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.BinaryWriter()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 56
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class that writes to a stream.</p>\n"
  syntax:
    content: protected BinaryWriter()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: BinaryWriter.BinaryWriter()
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.BinaryWriter(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 64
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified stream and using UTF-8 encoding.</p>\n"
  syntax:
    content: public BinaryWriter(Stream output)
    content.vb: Public Sub New(output As Stream)
    parameters:
    - id: output
      type: System.IO.Stream
      description: "\n<p>The output stream. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The stream does not support writing or is already closed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>output</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Text.Encoding.UTF8
    commentId: P:System.Text.Encoding.UTF8
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: BinaryWriter.BinaryWriter(Stream)
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.BinaryWriter(System.IO.Stream, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 68
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified stream and character encoding.</p>\n"
  syntax:
    content: public BinaryWriter(Stream output, Encoding encoding)
    content.vb: Public Sub New(output As Stream, encoding As Encoding)
    parameters:
    - id: output
      type: System.IO.Stream
      description: "\n<p>The output stream. </p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The character encoding to use. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The stream does not support writing or is already closed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>output</em> or <em>encoding</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding)
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.BinaryWriter(System.IO.Stream, System.Text.Encoding, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 72
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.</p>\n"
  syntax:
    content: public BinaryWriter(Stream output, Encoding encoding, bool leaveOpen)
    content.vb: Public Sub New(output As Stream, encoding As Encoding, leaveOpen As Boolean)
    parameters:
    - id: output
      type: System.IO.Stream
      description: "\n<p>The output stream.</p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The character encoding to use.</p>\n"
    - id: leaveOpen
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to leave the stream open after the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> object is disposed; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The stream does not support writing or is already closed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>output</em> or <em>encoding</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)
- uid: System.IO.BinaryWriter.BaseStream
  commentId: P:System.IO.BinaryWriter.BaseStream
  id: BaseStream
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.BaseStream
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BaseStream
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 117
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets the underlying stream of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual Stream BaseStream { get; }
    content.vb: Public Overridable ReadOnly Property BaseStream As Stream
    parameters: []
    return:
      type: System.IO.Stream
      description: "\n<p>The underlying stream associated with the <strong>BinaryWriter</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: BinaryWriter.BaseStream
- uid: System.IO.BinaryWriter.Dispose
  commentId: M:System.IO.BinaryWriter.Dispose
  id: Dispose
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 107
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: BinaryWriter.Dispose()
- uid: System.IO.BinaryWriter.Dispose(System.Boolean)
  commentId: M:System.IO.BinaryWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 97
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: BinaryWriter.Dispose(Boolean)
- uid: System.IO.BinaryWriter.Flush
  commentId: M:System.IO.BinaryWriter.Flush
  id: Flush
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Flush()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Flush
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 126
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</p>\n"
  syntax:
    content: public virtual void Flush()
    content.vb: Public Overridable Sub Flush
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Flush()
- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  commentId: M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  id: Seek(System.Int32,System.IO.SeekOrigin)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Seek(System.Int32, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Seek
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 131
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Sets the position within the current stream.</p>\n"
  syntax:
    content: public virtual long Seek(int offset, SeekOrigin origin)
    content.vb: Public Overridable Function Seek(offset As Integer, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int32
      description: "\n<p>A byte offset relative to <em>origin</em>. </p>\n"
    - id: origin
      type: System.IO.SeekOrigin
      description: "\n<p>A field of <xref href=\"System.IO.SeekOrigin\" data-throw-if-not-resolved=\"false\"></xref> indicating the reference point from which the new position is to be obtained. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The position with the current stream.</p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>The file pointer was moved to an invalid location. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.IO.SeekOrigin\" data-throw-if-not-resolved=\"false\"></xref> value is invalid. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Seek(Int32, SeekOrigin)
- uid: System.IO.BinaryWriter.Write(System.Boolean)
  commentId: M:System.IO.BinaryWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 139
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a one-byte <strong>Boolean</strong> value to the current stream, with 0 representing <strong>false</strong> and 1 representing <strong>true</strong>.</p>\n"
  syntax:
    content: public virtual void Write(bool value)
    content.vb: Public Overridable Sub Write(value As Boolean)
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>The <strong>Boolean</strong> value to write (0 or 1). </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Boolean)
- uid: System.IO.BinaryWriter.Write(System.Byte)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte)
  id: Write(System.Byte)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 147
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an unsigned byte to the current stream and advances the stream position by one byte.</p>\n"
  syntax:
    content: public virtual void Write(byte value)
    content.vb: Public Overridable Sub Write(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>The unsigned byte to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Byte)
- uid: System.IO.BinaryWriter.Write(System.Byte[])
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 166
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a byte array to the underlying stream.</p>\n"
  syntax:
    content: public virtual void Write(byte[] buffer)
    content.vb: Public Overridable Sub Write(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A byte array containing the data to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryWriter.Write(System.Byte())
  name.vb: Write(Byte())
  nameWithType: BinaryWriter.Write(Byte[])
  nameWithType.vb: BinaryWriter.Write(Byte())
- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 178
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a region of a byte array to the current stream.</p>\n"
  syntax:
    content: public virtual void Write(byte[] buffer, int index, int count)
    content.vb: Public Overridable Sub Write(buffer As Byte(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A byte array containing the data to write. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The starting point in <em>buffer</em> at which to begin writing. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to write. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryWriter.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  nameWithType: BinaryWriter.Write(Byte[], Int32, Int32)
  nameWithType.vb: BinaryWriter.Write(Byte(), Int32, Int32)
- uid: System.IO.BinaryWriter.Write(System.Char)
  commentId: M:System.IO.BinaryWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 187
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the <strong>Encoding</strong> used and the specific characters being written to the stream.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public virtual void Write(char ch)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overridable Sub Write(ch As Char)
    parameters:
    - id: ch
      type: System.Char
      description: "\n<p>The non-surrogate, Unicode character to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>ch</em> is a single surrogate character.</p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Char)
- uid: System.IO.BinaryWriter.Write(System.Char[])
  commentId: M:System.IO.BinaryWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 206
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character array to the current stream and advances the current position of the stream in accordance with the <strong>Encoding</strong> used and the specific characters being written to the stream.</p>\n"
  syntax:
    content: public virtual void Write(char[] chars)
    content.vb: Public Overridable Sub Write(chars As Char())
    parameters:
    - id: chars
      type: System.Char[]
      description: "\n<p>A character array containing the data to write. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>chars</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryWriter.Write(System.Char())
  name.vb: Write(Char())
  nameWithType: BinaryWriter.Write(Char[])
  nameWithType.vb: BinaryWriter.Write(Char())
- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 221
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the <strong>Encoding</strong> used and perhaps the specific characters being written to the stream.</p>\n"
  syntax:
    content: public virtual void Write(char[] chars, int index, int count)
    content.vb: Public Overridable Sub Write(chars As Char(), index As Integer, count As Integer)
    parameters:
    - id: chars
      type: System.Char[]
      description: "\n<p>A character array containing the data to write. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The starting point in <em>chars</em> from which to begin writing. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to write. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>chars</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  nameWithType: BinaryWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: BinaryWriter.Write(Char(), Int32, Int32)
- uid: System.IO.BinaryWriter.Write(System.Decimal)
  commentId: M:System.IO.BinaryWriter.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 246
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a decimal value to the current stream and advances the stream position by sixteen bytes.</p>\n"
  syntax:
    content: public virtual void Write(decimal value)
    content.vb: Public Overridable Sub Write(value As Decimal)
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal value to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Decimal)
- uid: System.IO.BinaryWriter.Write(System.Double)
  commentId: M:System.IO.BinaryWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 231
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public virtual void Write(double value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overridable Sub Write(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The eight-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Double)
- uid: System.IO.BinaryWriter.Write(System.Int16)
  commentId: M:System.IO.BinaryWriter.Write(System.Int16)
  id: Write(System.Int16)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 255
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.</p>\n"
  syntax:
    content: public virtual void Write(short value)
    content.vb: Public Overridable Sub Write(value As Short)
    parameters:
    - id: value
      type: System.Int16
      description: "\n<p>The two-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Int16)
- uid: System.IO.BinaryWriter.Write(System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 276
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.</p>\n"
  syntax:
    content: public virtual void Write(int value)
    content.vb: Public Overridable Sub Write(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The four-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Int32)
- uid: System.IO.BinaryWriter.Write(System.Int64)
  commentId: M:System.IO.BinaryWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 301
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.</p>\n"
  syntax:
    content: public virtual void Write(long value)
    content.vb: Public Overridable Sub Write(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The eight-byte signed integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Int64)
- uid: System.IO.BinaryWriter.Write(System.SByte)
  commentId: M:System.IO.BinaryWriter.Write(System.SByte)
  id: Write(System.SByte)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 155
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a signed byte to the current stream and advances the stream position by one byte.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(sbyte value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As SByte)
    parameters:
    - id: value
      type: System.SByte
      description: "\n<p>The signed byte to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(SByte)
- uid: System.IO.BinaryWriter.Write(System.Single)
  commentId: M:System.IO.BinaryWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 334
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public virtual void Write(float value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overridable Sub Write(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The four-byte floating-point value to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(Single)
- uid: System.IO.BinaryWriter.Write(System.String)
  commentId: M:System.IO.BinaryWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 351
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a length-prefixed string to this stream in the current encoding of the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public virtual void Write(string value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overridable Sub Write(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The value to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(String)
- uid: System.IO.BinaryWriter.Write(System.UInt16)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt16)
  id: Write(System.UInt16)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 265
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(ushort value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As UShort)
    parameters:
    - id: value
      type: System.UInt16
      description: "\n<p>The two-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(UInt16)
- uid: System.IO.BinaryWriter.Write(System.UInt32)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 288
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The four-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(UInt32)
- uid: System.IO.BinaryWriter.Write(System.UInt64)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 317
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public virtual void Write(ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Overridable Sub Write(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The eight-byte unsigned integer to write. </p>\n"
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: BinaryWriter.Write(UInt64)
- uid: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  commentId: M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  id: Write7BitEncodedInt(System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write7BitEncodedInt
    path: src/mscorlib/src/System/IO/BinaryWriter.cs
    startLine: 404
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a 32-bit integer in a compressed format.</p>\n"
  syntax:
    content: protected void Write7BitEncodedInt(int value)
    content.vb: Protected Sub Write7BitEncodedInt(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The 32-bit integer to be written. </p>\n"
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "\n<p>The end of the stream is reached. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>The stream is closed. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: BinaryWriter.Write7BitEncodedInt(Int32)
references:
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.BinaryWriter
  nameWithType: BinaryWriter
  commentId: T:System.IO.BinaryWriter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.Encoding
  nameWithType: Encoding
  commentId: T:System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: "XXX"
    fullName: System.IDisposable.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.SeekOrigin
  nameWithType: SeekOrigin
  commentId: T:System.IO.SeekOrigin
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Byte
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.Byte[]
  name: "XXX"
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.Char[]
  name: "XXX"
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.Int16
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int16
  nameWithType: Int16
  commentId: T:System.Int16
- uid: System.SByte
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.SByte
  nameWithType: SByte
  commentId: T:System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.UInt16
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt16
  nameWithType: UInt16
  commentId: T:System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt32
  nameWithType: UInt32
  commentId: T:System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt64
  nameWithType: UInt64
  commentId: T:System.UInt64
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.IOException
  nameWithType: IOException
  commentId: T:System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.IO.EndOfStreamException
  isExternal: false
  name: "XXX"
  fullName: System.IO.EndOfStreamException
  nameWithType: EndOfStreamException
  commentId: T:System.IO.EndOfStreamException
