items:
- uid: System.Reflection.Metadata.AssemblyExtensions
  commentId: T:System.Reflection.Metadata.AssemblyExtensions
  id: AssemblyExtensions
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: AssemblyExtensions
  fullName: System.Reflection.Metadata.AssemblyExtensions
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Metadata/AssemblyExtensions.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AssemblyExtensions
    path: src/mscorlib/src/System/Reflection/Metadata/AssemblyExtensions.cs
    startLine: 10
  assemblies:
  - System.Runtime.Loader
  namespace: System.Reflection.Metadata
  syntax:
    content: public class AssemblyExtensions
    content.vb: Public Class AssemblyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)
  commentId: M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)
  id: TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)
  isExtensionMethod: true
  parent: System.Reflection.Metadata.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: AssemblyExtensions.TryGetRawMetadata(Assembly, out Byte*, out Int32)
  fullName: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly, out System.Byte*, out System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Metadata/AssemblyExtensions.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryGetRawMetadata
    path: src/mscorlib/src/System/Reflection/Metadata/AssemblyExtensions.cs
    startLine: 25
  assemblies:
  - System.Runtime.Loader
  namespace: System.Reflection.Metadata
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public static bool TryGetRawMetadata(this Assembly assembly, out byte *blob, out int length)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      <ExtensionAttribute>

      Public Shared Function TryGetRawMetadata(assembly As Assembly, ByRef blob As Byte *, ByRef length As Integer) As Boolean
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    - id: blob
      type: System.Byte*
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: AssemblyExtensions.TryGetRawMetadata(Assembly, ByRef Byte*, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly, ByRef System.Byte*, ByRef System.Int32)
  name.vb: TryGetRawMetadata(Assembly, ByRef Byte*, ByRef Int32)
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: "XXX"
  nameWithType: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  commentId: N:System.Reflection.Metadata
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: Object
  fullName: System.Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  nameWithType: System
  fullName: System
  commentId: N:System
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
- uid: System.Byte*
  name: "XXX"
  nameWithType: Byte*
  fullName: System.Byte*
  spec.csharp:
  - uid: System.Byte
    name: "XXX"
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Byte
    name: "XXX"
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: Int32
  fullName: System.Int32
  commentId: T:System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  nameWithType: System.Reflection
  fullName: System.Reflection
  commentId: N:System.Reflection
