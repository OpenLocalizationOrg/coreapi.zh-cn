items:
- uid: System.Linq.ILookup`2
  commentId: T:System.Linq.ILookup`2
  id: ILookup`2
  parent: System.Linq
  children:
  - System.Linq.ILookup`2.Contains(`0)
  - System.Linq.ILookup`2.Count
  - System.Linq.ILookup`2.Item(`0)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.ILookup<TKey, TElement>
  type: Interface
  source:
    remote:
      path: src/System.Linq/ref/System.Linq.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ILookup
    path: src/System.Linq/ref/System.Linq.cs
    startLine: 194
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: "\n<p>Defines an indexer, size property, and Boolean search method for data structures that map keys to <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> sequences of values.</p>\n"
  syntax:
    content: 'public interface ILookup<TKey, TElement> : IEnumerable<IGrouping<TKey, TElement>>, IEnumerable'
    content.vb: >-
      Public Interface ILookup(Of TKey, TElement)
          Inherits IEnumerable(Of IGrouping(Of TKey, TElement)), IEnumerable
    typeParameters:
    - id: TKey
      description: "\n<p>The type of the keys in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: TElement
      description: "\n<p>The type of the elements in the <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> sequences that make up the values in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Linq.Lookup`2
    commentId: T:System.Linq.Lookup`2
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Linq.ILookup(Of TKey, TElement)
  name.vb: ILookup(Of TKey, TElement)
  nameWithType: ILookup<TKey, TElement>
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Queryable.AsQueryable``1
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Linq.IGrouping{{TKey},{TElement}},System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Linq.IGrouping{{TKey},{TElement}},{TAccumulate}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Linq.IGrouping{{TKey},{TElement}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Any``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Append``1(System.Linq.IGrouping{{TKey},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Linq.IGrouping{{TKey},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Linq.IGrouping{{TKey},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Count``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Linq.IGrouping{{TKey},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Distinct``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.First``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TInner},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Last``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LongCount``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Reverse``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Single``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToArray``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToList``1
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TSecond},{TResult}})
  nameWithType.vb: ILookup(Of TKey, TElement)
- uid: System.Linq.ILookup`2.Count
  commentId: P:System.Linq.ILookup`2.Count
  id: Count
  parent: System.Linq.ILookup`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.ILookup<TKey, TElement>.Count
  type: Property
  source:
    remote:
      path: src/System.Linq/ref/System.Linq.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Linq/ref/System.Linq.cs
    startLine: 196
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: "\n<p>Gets the number of key/value collection pairs in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: int Count { get; }
    content.vb: ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of key/value collection pairs in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Count
  nameWithType: ILookup<TKey, TElement>.Count
  nameWithType.vb: ILookup(Of TKey, TElement).Count
- uid: System.Linq.ILookup`2.Item(`0)
  commentId: P:System.Linq.ILookup`2.Item(`0)
  id: Item(`0)
  parent: System.Linq.ILookup`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.ILookup<TKey, TElement>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/System.Linq/ref/System.Linq.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Linq/ref/System.Linq.cs
    startLine: 197
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: "\n<p>Gets the <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> sequence of values indexed by a specified key.</p>\n"
  syntax:
    content: IEnumerable<TElement> this[TKey key] { get; }
    content.vb: ReadOnly Property Item(key As TKey) As IEnumerable(Of TElement)
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key of the desired sequence of values.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: "\n<p>The <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> sequence of values indexed by the specified key.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Item(TKey)
  name.vb: Item(TKey)
  nameWithType: ILookup<TKey, TElement>.Item[TKey]
  nameWithType.vb: ILookup(Of TKey, TElement).Item(TKey)
- uid: System.Linq.ILookup`2.Contains(`0)
  commentId: M:System.Linq.ILookup`2.Contains(`0)
  id: Contains(`0)
  parent: System.Linq.ILookup`2
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Linq.ILookup<TKey, TElement>.Contains(TKey)
  type: Method
  source:
    remote:
      path: src/System.Linq/ref/System.Linq.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Linq/ref/System.Linq.cs
    startLine: 198
  assemblies:
  - System.Linq
  namespace: System.Linq
  summary: "\n<p>Determines whether a specified key exists in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: bool Contains(TKey key)
    content.vb: Function Contains(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key to search for in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>key</em> is in the <xref href=\"System.Linq.ILookup`2\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  fullName.vb: System.Linq.ILookup(Of TKey, TElement).Contains(TKey)
  nameWithType: ILookup<TKey, TElement>.Contains(TKey)
  nameWithType.vb: ILookup(Of TKey, TElement).Contains(TKey)
references:
- uid: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq
  commentId: N:System.Linq
  nameWithType: System.Linq
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>.GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)).GetEnumerator
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.GetEnumerator
  nameWithType: IEnumerable<IGrouping<TKey, TElement>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IGrouping(Of TKey, TElement)).GetEnumerator()
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  nameWithType: IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Queryable.AsQueryable``1
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: AsQueryable(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Queryable.AsQueryable<IGrouping<TKey, TElement>>()
  nameWithType.vb: Queryable.AsQueryable(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: AsParallel(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: ParallelEnumerable.AsParallel<IGrouping<TKey, TElement>>()
  nameWithType.vb: ParallelEnumerable.AsParallel(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Linq.IGrouping{{TKey},{TElement}},System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Linq.IGrouping<TKey, TElement>, System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Linq.IGrouping(Of TKey, TElement), System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Aggregate(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), IGrouping(Of TKey, TElement), IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  nameWithType: Enumerable.Aggregate<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, IGrouping<TKey, TElement>, IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Aggregate(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), IGrouping(Of TKey, TElement), IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Linq.IGrouping{{TKey},{TElement}},{TAccumulate}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Linq.IGrouping<TKey, TElement>, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement), TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Linq.IGrouping(Of TKey, TElement), TAccumulate))
  name.vb: Aggregate(Of IGrouping(Of TKey, TElement), TAccumulate)(TAccumulate, Func(Of TAccumulate, IGrouping(Of TKey, TElement), TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>, TAccumulate>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement), TAccumulate)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  nameWithType: Enumerable.Aggregate<IGrouping<TKey, TElement>, TAccumulate>(TAccumulate, Func<TAccumulate, IGrouping<TKey, TElement>, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of IGrouping(Of TKey, TElement), TAccumulate)(TAccumulate, Func(Of TAccumulate, IGrouping(Of TKey, TElement), TAccumulate))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Linq.IGrouping{{TKey},{TElement}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Linq.IGrouping<TKey, TElement>, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement), TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Linq.IGrouping(Of TKey, TElement), TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of IGrouping(Of TKey, TElement), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, IGrouping(Of TKey, TElement), TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<System.Linq.IGrouping<TKey, TElement>, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of System.Linq.IGrouping(Of TKey, TElement), TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  nameWithType: Enumerable.Aggregate<IGrouping<TKey, TElement>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, IGrouping<TKey, TElement>, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of IGrouping(Of TKey, TElement), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, IGrouping(Of TKey, TElement), TAccumulate), Func(Of TAccumulate, TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.All<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: All(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.All<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.All(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Any``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Any(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Any(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Any<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Any(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: Any(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Any<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.Any(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: AsEnumerable(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.AsEnumerable<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.AsEnumerable(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Decimal))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Decimal>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Double))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Double>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int64))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int64>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Decimal)))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Double)))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int32)))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int64)))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Single)))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Single))
  name.vb: Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Average<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Single>)
  nameWithType.vb: Enumerable.Average(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Concat(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Concat(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Concat<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Concat(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Append``1(System.Linq.IGrouping{{TKey},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<System.Linq.IGrouping<TKey, TElement>>(System.Linq.IGrouping<TKey, TElement>)
  fullname.vb: System.Linq.Enumerable.Append(Of System.Linq.IGrouping(Of TKey, TElement))(System.Linq.IGrouping(Of TKey, TElement))
  name.vb: Append(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Append<IGrouping<TKey, TElement>>(IGrouping<TKey, TElement>)
  nameWithType.vb: Enumerable.Append(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Linq.IGrouping{{TKey},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<System.Linq.IGrouping<TKey, TElement>>(System.Linq.IGrouping<TKey, TElement>)
  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Linq.IGrouping(Of TKey, TElement))(System.Linq.IGrouping(Of TKey, TElement))
  name.vb: Prepend(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Prepend<IGrouping<TKey, TElement>>(IGrouping<TKey, TElement>)
  nameWithType.vb: Enumerable.Prepend(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Linq.IGrouping{{TKey},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<System.Linq.IGrouping<TKey, TElement>>(System.Linq.IGrouping<TKey, TElement>)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Linq.IGrouping(Of TKey, TElement))(System.Linq.IGrouping(Of TKey, TElement))
  name.vb: Contains(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Contains<IGrouping<TKey, TElement>>(IGrouping<TKey, TElement>)
  nameWithType.vb: Enumerable.Contains(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<System.Linq.IGrouping<TKey, TElement>>(System.Linq.IGrouping<TKey, TElement>, System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Linq.IGrouping(Of TKey, TElement))(System.Linq.IGrouping(Of TKey, TElement), System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Contains(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Contains<IGrouping<TKey, TElement>>(IGrouping<TKey, TElement>, IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Contains(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Count``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Count(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Count(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Count<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Count(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: Count(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Count<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.Count(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: DefaultIfEmpty(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.DefaultIfEmpty<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Linq.IGrouping{{TKey},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Linq.IGrouping<TKey, TElement>>(System.Linq.IGrouping<TKey, TElement>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Linq.IGrouping(Of TKey, TElement))(System.Linq.IGrouping(Of TKey, TElement))
  name.vb: DefaultIfEmpty(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.DefaultIfEmpty<IGrouping<TKey, TElement>>(IGrouping<TKey, TElement>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of IGrouping(Of TKey, TElement))(IGrouping(Of TKey, TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Distinct``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Distinct(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Distinct<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Distinct(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Distinct(Of IGrouping(Of TKey, TElement))(IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Distinct<IGrouping<TKey, TElement>>(IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Distinct(Of IGrouping(Of TKey, TElement))(IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<System.Linq.IGrouping<TKey, TElement>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Linq.IGrouping(Of TKey, TElement))(System.Int32)
  name.vb: ElementAt(Of IGrouping(Of TKey, TElement))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.ElementAt<IGrouping<TKey, TElement>>(Int32)
  nameWithType.vb: Enumerable.ElementAt(Of IGrouping(Of TKey, TElement))(Int32)
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Linq.IGrouping<TKey, TElement>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))(System.Int32)
  name.vb: ElementAtOrDefault(Of IGrouping(Of TKey, TElement))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.ElementAtOrDefault<IGrouping<TKey, TElement>>(Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of IGrouping(Of TKey, TElement))(Int32)
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Except(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Except<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Except(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Except(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Except<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>, IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Except(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.First``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.First(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: First(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.First<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.First(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: First(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.First<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.First(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: FirstOrDefault(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.FirstOrDefault<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.FirstOrDefault(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: FirstOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.FirstOrDefault<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), TResult))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TKey, IEnumerable(Of IGrouping(Of TKey, TElement)), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TResult>(Func<IGrouping<TKey, TElement>, TKey>, Func<TKey, IEnumerable<IGrouping<TKey, TElement>>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TKey, IEnumerable(Of IGrouping(Of TKey, TElement)), TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TKey, IEnumerable(Of IGrouping(Of TKey, TElement)), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TResult>(Func<IGrouping<TKey, TElement>, TKey>, Func<TKey, IEnumerable<IGrouping<TKey, TElement>>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TKey, IEnumerable(Of IGrouping(Of TKey, TElement)), TResult), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TElement, TResult>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<System.Linq.IGrouping<TKey, TElement>, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<IGrouping<TKey, TElement>, TKey, TElement, TResult>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of IGrouping(Of TKey, TElement), TKey, TElement, TResult)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TInner, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  nameWithType: Enumerable.GroupJoin<IGrouping<TKey, TElement>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IGrouping<TKey, TElement>, TKey>, Func<TInner, TKey>, Func<IGrouping<TKey, TElement>, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TInner), TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TInner, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  nameWithType: Enumerable.GroupJoin<IGrouping<TKey, TElement>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IGrouping<TKey, TElement>, TKey>, Func<TInner, TKey>, Func<IGrouping<TKey, TElement>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Intersect(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Intersect<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Intersect(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Intersect(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Intersect<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>, IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Intersect(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TInner},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TInner, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TResult))
  name.vb: Join(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  nameWithType: Enumerable.Join<IGrouping<TKey, TElement>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IGrouping<TKey, TElement>, TKey>, Func<TInner, TKey>, Func<IGrouping<TKey, TElement>, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), TInner, TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<TInner, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<System.Linq.IGrouping<TKey, TElement>, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of System.Linq.IGrouping(Of TKey, TElement), TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  nameWithType: Enumerable.Join<IGrouping<TKey, TElement>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<IGrouping<TKey, TElement>, TKey>, Func<TInner, TKey>, Func<IGrouping<TKey, TElement>, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of IGrouping(Of TKey, TElement), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of TInner, TKey), Func(Of IGrouping(Of TKey, TElement), TInner, TResult), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Last``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Last(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Last(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Last<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Last(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: Last(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Last<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.Last(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: LastOrDefault(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.LastOrDefault<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.LastOrDefault(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: LastOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.LastOrDefault<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LongCount``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: LongCount(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.LongCount<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.LongCount(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: LongCount(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.LongCount<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Max(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Decimal))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Decimal>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Double))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Double>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int64))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int64>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Decimal)))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Double)))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int32)))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int64)))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Single)))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Single))
  name.vb: Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Single>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TResult))
  name.vb: Max(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Max<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, TResult>)
  nameWithType.vb: Enumerable.Max(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Min(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Decimal))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Decimal>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Double))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Double>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int64))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int64>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Decimal)))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Double)))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int32)))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int64)))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Single)))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Single))
  name.vb: Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Single>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TResult))
  name.vb: Min(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Min<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, TResult>)
  nameWithType.vb: Enumerable.Min(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey))
  name.vb: OrderBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.OrderBy<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  nameWithType: Enumerable.OrderBy<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey))
  name.vb: OrderByDescending(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.OrderByDescending<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  nameWithType: Enumerable.OrderByDescending<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Reverse``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Reverse(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Reverse<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Reverse(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TResult))
  name.vb: Select(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Select<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, TResult>)
  nameWithType.vb: Enumerable.Select(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, TResult))
  name.vb: Select(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  nameWithType: Enumerable.Select<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  nameWithType: Enumerable.SelectMany<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TResult)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  nameWithType: Enumerable.SelectMany<IGrouping<TKey, TElement>, TResult>(Func<IGrouping<TKey, TElement>, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of IGrouping(Of TKey, TElement), TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, IEnumerable(Of TResult)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult))
  name.vb: SelectMany(Of IGrouping(Of TKey, TElement), TCollection, TResult)(Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TCollection)), Func(Of IGrouping(Of TKey, TElement), TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  nameWithType: Enumerable.SelectMany<IGrouping<TKey, TElement>, TCollection, TResult>(Func<IGrouping<TKey, TElement>, IEnumerable<TCollection>>, Func<IGrouping<TKey, TElement>, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of IGrouping(Of TKey, TElement), TCollection, TResult)(Func(Of IGrouping(Of TKey, TElement), IEnumerable(Of TCollection)), Func(Of IGrouping(Of TKey, TElement), TCollection, TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult))
  name.vb: SelectMany(Of IGrouping(Of TKey, TElement), TCollection, TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, IEnumerable(Of TCollection)), Func(Of IGrouping(Of TKey, TElement), TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<System.Linq.IGrouping<TKey, TElement>, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of System.Linq.IGrouping(Of TKey, TElement), TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  nameWithType: Enumerable.SelectMany<IGrouping<TKey, TElement>, TCollection, TResult>(Func<IGrouping<TKey, TElement>, Int32, IEnumerable<TCollection>>, Func<IGrouping<TKey, TElement>, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of IGrouping(Of TKey, TElement), TCollection, TResult)(Func(Of IGrouping(Of TKey, TElement), Int32, IEnumerable(Of TCollection)), Func(Of IGrouping(Of TKey, TElement), TCollection, TResult))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: SequenceEqual(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.SequenceEqual<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.SequenceEqual(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: SequenceEqual(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.SequenceEqual<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>, IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.SequenceEqual(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Single``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.Single(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: Single(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Single<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.Single(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: Single(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Single<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.Single(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: SingleOrDefault(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.SingleOrDefault<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.SingleOrDefault(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: SingleOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.SingleOrDefault<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<System.Linq.IGrouping<TKey, TElement>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of System.Linq.IGrouping(Of TKey, TElement))(System.Int32)
  name.vb: Skip(Of IGrouping(Of TKey, TElement))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.Skip<IGrouping<TKey, TElement>>(Int32)
  nameWithType.vb: Enumerable.Skip(Of IGrouping(Of TKey, TElement))(Int32)
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: SkipWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.SkipWhile<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, System.Boolean))
  name.vb: SkipWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.SkipWhile<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Decimal))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Decimal))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Double))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Double>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Double))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int64))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int64>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int64))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Decimal)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Double)))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Double)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int32)))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int32)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Int64)))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Int64)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Nullable(Of System.Single)))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Nullable(Of Single)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Single))
  name.vb: Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Sum<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Single>)
  nameWithType.vb: Enumerable.Sum(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Single))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<System.Linq.IGrouping<TKey, TElement>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of System.Linq.IGrouping(Of TKey, TElement))(System.Int32)
  name.vb: Take(Of IGrouping(Of TKey, TElement))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.Take<IGrouping<TKey, TElement>>(Int32)
  nameWithType.vb: Enumerable.Take(Of IGrouping(Of TKey, TElement))(Int32)
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: TakeWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.TakeWhile<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, System.Boolean))
  name.vb: TakeWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.TakeWhile<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToArray``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: ToArray(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.ToArray<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.ToArray(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey))
  name.vb: ToDictionary(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.ToDictionary<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToDictionary<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement))
  name.vb: ToDictionary(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.ToDictionary<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToDictionary<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToList``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<System.Linq.IGrouping<TKey, TElement>>()
  fullname.vb: System.Linq.Enumerable.ToList(Of System.Linq.IGrouping(Of TKey, TElement))()
  name.vb: ToList(Of IGrouping(Of TKey, TElement))()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.ToList<IGrouping<TKey, TElement>>()
  nameWithType.vb: Enumerable.ToList(Of IGrouping(Of TKey, TElement))()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey))
  name.vb: ToLookup(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.ToLookup<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToLookup<IGrouping<TKey, TElement>, TKey>(Func<IGrouping<TKey, TElement>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of IGrouping(Of TKey, TElement), TKey)(Func(Of IGrouping(Of TKey, TElement), TKey), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement))
  name.vb: ToLookup(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.ToLookup<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TKey}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>(System.Func<System.Linq.IGrouping<TKey, TElement>, TKey>, System.Func<System.Linq.IGrouping<TKey, TElement>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TKey), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<System.Linq.IGrouping<TKey, TElement>, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of System.Linq.IGrouping(Of TKey, TElement), TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToLookup<IGrouping<TKey, TElement>, TKey, TElement>(Func<IGrouping<TKey, TElement>, TKey>, Func<IGrouping<TKey, TElement>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of IGrouping(Of TKey, TElement), TKey, TElement)(Func(Of IGrouping(Of TKey, TElement), TKey), Func(Of IGrouping(Of TKey, TElement), TElement), IEqualityComparer(Of TKey))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Union(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Union<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Union(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}},System.Collections.Generic.IEqualityComparer{System.Linq.IGrouping{{TKey},{TElement}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<System.Linq.IGrouping<TKey, TElement>>(System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>, System.Collections.Generic.IEqualityComparer<System.Linq.IGrouping<TKey, TElement>>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Linq.IGrouping(Of TKey, TElement))(System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement)), System.Collections.Generic.IEqualityComparer(Of System.Linq.IGrouping(Of TKey, TElement)))
  name.vb: Union(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Union<IGrouping<TKey, TElement>>(IEnumerable<IGrouping<TKey, TElement>>, IEqualityComparer<IGrouping<TKey, TElement>>)
  nameWithType.vb: Enumerable.Union(Of IGrouping(Of TKey, TElement))(IEnumerable(Of IGrouping(Of TKey, TElement)), IEqualityComparer(Of IGrouping(Of TKey, TElement)))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Boolean))
  name.vb: Where(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Where<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Boolean>)
  nameWithType.vb: Enumerable.Where(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Linq.IGrouping{{TKey},{TElement}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<System.Linq.IGrouping<TKey, TElement>>(System.Func<System.Linq.IGrouping<TKey, TElement>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Linq.IGrouping(Of TKey, TElement))(System.Func(Of System.Linq.IGrouping(Of TKey, TElement), System.Int32, System.Boolean))
  name.vb: Where(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<System.Linq.IGrouping<TKey, TElement>>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of System.Linq.IGrouping(Of TKey, TElement))
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.Where<IGrouping<TKey, TElement>>(Func<IGrouping<TKey, TElement>, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of IGrouping(Of TKey, TElement))(Func(Of IGrouping(Of TKey, TElement), Int32, Boolean))
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Linq.IGrouping{{TKey},{TElement}},{TSecond},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<System.Linq.IGrouping<TKey, TElement>, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Linq.IGrouping<TKey, TElement>, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of System.Linq.IGrouping(Of TKey, TElement), TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Linq.IGrouping(Of TKey, TElement), TSecond, TResult))
  name.vb: Zip(Of IGrouping(Of TKey, TElement), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of IGrouping(Of TKey, TElement), TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<System.Linq.IGrouping<TKey, TElement>, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of System.Linq.IGrouping(Of TKey, TElement), TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  nameWithType: Enumerable.Zip<IGrouping<TKey, TElement>, TSecond, TResult>(IEnumerable<TSecond>, Func<IGrouping<TKey, TElement>, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of IGrouping(Of TKey, TElement), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of IGrouping(Of TKey, TElement), TSecond, TResult))
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement))
  name.vb: IEnumerable(Of IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: "XXX"
    fullName: System.Linq.IGrouping
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``2}}
  nameWithType: IEnumerable<IGrouping<TKey, TElement>>
  nameWithType.vb: IEnumerable(Of IGrouping(Of TKey, TElement))
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  nameWithType: IEnumerable
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
  nameWithType: Queryable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
  nameWithType: Enumerable
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable`1
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  commentId: N:System.Collections.Generic
  nameWithType: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  commentId: N:System.Collections
  nameWithType: System.Collections
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: '{TKey}'
  definition: TKey
  name: "XXX"
  fullName: TKey
  commentId: '!:TKey'
  nameWithType: TKey
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  nameWithType: IEnumerable<TElement>
  nameWithType.vb: IEnumerable(Of TElement)
- uid: TKey
  isExternal: false
  name: "XXX"
  fullName: TKey
  nameWithType: TKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
