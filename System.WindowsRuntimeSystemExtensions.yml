items:
- uid: System.WindowsRuntimeSystemExtensions
  commentId: T:System.WindowsRuntimeSystemExtensions
  id: WindowsRuntimeSystemExtensions
  parent: System
  children:
  - System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)
  - System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})
  - System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)
  - System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})
  - System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)
  - System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  - System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})
  - System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)
  - System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})
  - System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)
  - System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  - System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})
  - System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions
  fullName: System.WindowsRuntimeSystemExtensions
  type: Class
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsRuntimeSystemExtensions
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 10
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public class WindowsRuntimeSystemExtensions
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Class WindowsRuntimeSystemExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)
  id: AsAsyncAction(System.Threading.Tasks.Task)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsAsyncAction(Task)
  fullName: System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsAsyncAction
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 14
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static IAsyncAction AsAsyncAction(this Task source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsAsyncAction(source As Task) As IAsyncAction
    parameters:
    - id: source
      type: System.Threading.Tasks.Task
    return:
      type: Windows.Foundation.IAsyncAction
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})
  id: AsAsyncOperation``1(System.Threading.Tasks.Task{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsAsyncOperation<TResult>(Task<TResult>)
  fullName: System.WindowsRuntimeSystemExtensions.AsAsyncOperation<TResult>(System.Threading.Tasks.Task<TResult>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsAsyncOperation
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 15
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static IAsyncOperation<TResult> AsAsyncOperation<TResult>(this Task<TResult> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsAsyncOperation(Of TResult)(source As Task(Of TResult)) As IAsyncOperation(Of TResult)
    parameters:
    - id: source
      type: System.Threading.Tasks.Task{{TResult}}
    typeParameters:
    - id: TResult
    return:
      type: Windows.Foundation.IAsyncOperation{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsAsyncOperation(Of TResult)(Task(Of TResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsAsyncOperation(Of TResult)(System.Threading.Tasks.Task(Of TResult))
  name.vb: AsAsyncOperation(Of TResult)(Task(Of TResult))
- uid: System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)
  id: AsTask(Windows.Foundation.IAsyncAction)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask(IAsyncAction)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 16
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask(this IAsyncAction source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(source As IAsyncAction) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncAction
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)
  id: AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask(IAsyncAction, CancellationToken)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 17
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask(this IAsyncAction source, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(source As IAsyncAction, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncAction
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  id: AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TProgress>(IAsyncActionWithProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 18
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask<TProgress>(this IAsyncActionWithProgress<TProgress> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TProgress)(source As IAsyncActionWithProgress(Of TProgress)) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
    typeParameters:
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(Windows.Foundation.IAsyncActionWithProgress(Of TProgress))
  name.vb: AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})
  id: AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TProgress>(IAsyncActionWithProgress<TProgress>, IProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.IProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 19
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask<TProgress>(this IAsyncActionWithProgress<TProgress> source, IProgress<TProgress> progress)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TProgress)(source As IAsyncActionWithProgress(Of TProgress), progress As IProgress(Of TProgress)) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
    - id: progress
      type: System.IProgress{{TProgress}}
    typeParameters:
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), IProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(Windows.Foundation.IAsyncActionWithProgress(Of TProgress), System.IProgress(Of TProgress))
  name.vb: AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), IProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)
  id: AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TProgress>(IAsyncActionWithProgress<TProgress>, CancellationToken)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 20
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask<TProgress>(this IAsyncActionWithProgress<TProgress> source, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TProgress)(source As IAsyncActionWithProgress(Of TProgress), cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(Windows.Foundation.IAsyncActionWithProgress(Of TProgress), System.Threading.CancellationToken)
  name.vb: AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), CancellationToken)
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})
  id: AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TProgress>(IAsyncActionWithProgress<TProgress>, CancellationToken, IProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>, System.Threading.CancellationToken, System.IProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 21
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task AsTask<TProgress>(this IAsyncActionWithProgress<TProgress> source, CancellationToken cancellationToken, IProgress<TProgress> progress)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TProgress)(source As IAsyncActionWithProgress(Of TProgress), cancellationToken As CancellationToken, progress As IProgress(Of TProgress)) As Task
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{{TProgress}}
    typeParameters:
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), CancellationToken, IProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TProgress)(Windows.Foundation.IAsyncActionWithProgress(Of TProgress), System.Threading.CancellationToken, System.IProgress(Of TProgress))
  name.vb: AsTask(Of TProgress)(IAsyncActionWithProgress(Of TProgress), CancellationToken, IProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})
  id: AsTask``1(Windows.Foundation.IAsyncOperation{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult>(IAsyncOperation<TResult>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult>(Windows.Foundation.IAsyncOperation<TResult>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 22
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult>(this IAsyncOperation<TResult> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult)(source As IAsyncOperation(Of TResult)) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperation{{TResult}}
    typeParameters:
    - id: TResult
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult)(IAsyncOperation(Of TResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult)(Windows.Foundation.IAsyncOperation(Of TResult))
  name.vb: AsTask(Of TResult)(IAsyncOperation(Of TResult))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)
  id: AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult>(IAsyncOperation<TResult>, CancellationToken)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult>(Windows.Foundation.IAsyncOperation<TResult>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 23
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult>(this IAsyncOperation<TResult> source, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult)(source As IAsyncOperation(Of TResult), cancellationToken As CancellationToken) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperation{{TResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResult
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult)(IAsyncOperation(Of TResult), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult)(Windows.Foundation.IAsyncOperation(Of TResult), System.Threading.CancellationToken)
  name.vb: AsTask(Of TResult)(IAsyncOperation(Of TResult), CancellationToken)
- uid: System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  id: AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(IAsyncOperationWithProgress<TResult, TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 24
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult, TProgress>(this IAsyncOperationWithProgress<TResult, TProgress> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult, TProgress)(source As IAsyncOperationWithProgress(Of TResult, TProgress)) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress))
  name.vb: AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})
  id: AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(IAsyncOperationWithProgress<TResult, TProgress>, IProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.IProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 25
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult, TProgress>(this IAsyncOperationWithProgress<TResult, TProgress> source, IProgress<TProgress> progress)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult, TProgress)(source As IAsyncOperationWithProgress(Of TResult, TProgress), progress As IProgress(Of TProgress)) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
    - id: progress
      type: System.IProgress{{TProgress}}
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), IProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress), System.IProgress(Of TProgress))
  name.vb: AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), IProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)
  id: AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(IAsyncOperationWithProgress<TResult, TProgress>, CancellationToken)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 26
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult, TProgress>(this IAsyncOperationWithProgress<TResult, TProgress> source, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult, TProgress)(source As IAsyncOperationWithProgress(Of TResult, TProgress), cancellationToken As CancellationToken) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress), System.Threading.CancellationToken)
  name.vb: AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), CancellationToken)
- uid: System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})
  commentId: M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})
  id: AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(IAsyncOperationWithProgress<TResult, TProgress>, CancellationToken, IProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.AsTask<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>, System.Threading.CancellationToken, System.IProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsTask
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 27
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static Task<TResult> AsTask<TResult, TProgress>(this IAsyncOperationWithProgress<TResult, TProgress> source, CancellationToken cancellationToken, IProgress<TProgress> progress)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of TResult, TProgress)(source As IAsyncOperationWithProgress(Of TResult, TProgress), cancellationToken As CancellationToken, progress As IProgress(Of TProgress)) As Task(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: progress
      type: System.IProgress{{TProgress}}
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), CancellationToken, IProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.AsTask(Of TResult, TProgress)(Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress), System.Threading.CancellationToken, System.IProgress(Of TProgress))
  name.vb: AsTask(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress), CancellationToken, IProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)
  commentId: M:System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)
  id: GetAwaiter(Windows.Foundation.IAsyncAction)
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.GetAwaiter(IAsyncAction)
  fullName: System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAwaiter
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 28
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static TaskAwaiter GetAwaiter(this IAsyncAction source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAwaiter(source As IAsyncAction) As TaskAwaiter
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncAction
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  id: GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.GetAwaiter<TProgress>(IAsyncActionWithProgress<TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.GetAwaiter<TProgress>(Windows.Foundation.IAsyncActionWithProgress<TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAwaiter
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 30
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static TaskAwaiter GetAwaiter<TProgress>(this IAsyncActionWithProgress<TProgress> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAwaiter(Of TProgress)(source As IAsyncActionWithProgress(Of TProgress)) As TaskAwaiter
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
    typeParameters:
    - id: TProgress
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter
  nameWithType.vb: WindowsRuntimeSystemExtensions.GetAwaiter(Of TProgress)(IAsyncActionWithProgress(Of TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.GetAwaiter(Of TProgress)(Windows.Foundation.IAsyncActionWithProgress(Of TProgress))
  name.vb: GetAwaiter(Of TProgress)(IAsyncActionWithProgress(Of TProgress))
- uid: System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})
  commentId: M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})
  id: GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.GetAwaiter<TResult>(IAsyncOperation<TResult>)
  fullName: System.WindowsRuntimeSystemExtensions.GetAwaiter<TResult>(Windows.Foundation.IAsyncOperation<TResult>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAwaiter
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 32
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static TaskAwaiter<TResult> GetAwaiter<TResult>(this IAsyncOperation<TResult> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAwaiter(Of TResult)(source As IAsyncOperation(Of TResult)) As TaskAwaiter(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperation{{TResult}}
    typeParameters:
    - id: TResult
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.GetAwaiter(Of TResult)(IAsyncOperation(Of TResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.GetAwaiter(Of TResult)(Windows.Foundation.IAsyncOperation(Of TResult))
  name.vb: GetAwaiter(Of TResult)(IAsyncOperation(Of TResult))
- uid: System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  commentId: M:System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  id: GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})
  isExtensionMethod: true
  parent: System.WindowsRuntimeSystemExtensions
  langs:
  - csharp
  - vb
  name: "XXX"
  nameWithType: WindowsRuntimeSystemExtensions.GetAwaiter<TResult, TProgress>(IAsyncOperationWithProgress<TResult, TProgress>)
  fullName: System.WindowsRuntimeSystemExtensions.GetAwaiter<TResult, TProgress>(Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAwaiter
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 34
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System
  syntax:
    content: public static TaskAwaiter<TResult> GetAwaiter<TResult, TProgress>(this IAsyncOperationWithProgress<TResult, TProgress> source)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAwaiter(Of TResult, TProgress)(source As IAsyncOperationWithProgress(Of TResult, TProgress)) As TaskAwaiter(Of TResult)
    parameters:
    - id: source
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter{{TResult}}
  nameWithType.vb: WindowsRuntimeSystemExtensions.GetAwaiter(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.WindowsRuntimeSystemExtensions.GetAwaiter(Of TResult, TProgress)(Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress))
  name.vb: GetAwaiter(Of TResult, TProgress)(IAsyncOperationWithProgress(Of TResult, TProgress))
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: "XXX"
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: "XXX"
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    nameWithType: (
    fullName: (
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Windows.Foundation.IAsyncAction
  isExternal: true
  name: "XXX"
  nameWithType: IAsyncAction
  fullName: Windows.Foundation.IAsyncAction
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: "XXX"
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: "XXX"
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation{{TResult}}
  commentId: '!:Windows.Foundation.IAsyncOperation{``0}'
  definition: Windows.Foundation.IAsyncOperation`1
  name: "XXX"
  nameWithType: IAsyncOperation<TResult>
  fullName: Windows.Foundation.IAsyncOperation<TResult>
  nameWithType.vb: IAsyncOperation(Of TResult)
  fullname.vb: Windows.Foundation.IAsyncOperation(Of TResult)
  name.vb: IAsyncOperation(Of TResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: "XXX"
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: "XXX"
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: "XXX"
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation`1
  isExternal: true
  name: "XXX"
  nameWithType: IAsyncOperation<>
  fullName: Windows.Foundation.IAsyncOperation<>
  nameWithType.vb: IAsyncOperation(Of )
  fullname.vb: Windows.Foundation.IAsyncOperation(Of )
  name.vb: IAsyncOperation(Of )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: "XXX"
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: "XXX"
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: "XXX"
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: "XXX"
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
  commentId: '!:Windows.Foundation.IAsyncActionWithProgress{``0}'
  definition: Windows.Foundation.IAsyncActionWithProgress`1
  name: "XXX"
  nameWithType: IAsyncActionWithProgress<TProgress>
  fullName: Windows.Foundation.IAsyncActionWithProgress<TProgress>
  nameWithType.vb: IAsyncActionWithProgress(Of TProgress)
  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of TProgress)
  name.vb: IAsyncActionWithProgress(Of TProgress)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: "XXX"
    nameWithType: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: "XXX"
    nameWithType: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncActionWithProgress`1
  isExternal: true
  name: "XXX"
  nameWithType: IAsyncActionWithProgress<>
  fullName: Windows.Foundation.IAsyncActionWithProgress<>
  nameWithType.vb: IAsyncActionWithProgress(Of )
  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of )
  name.vb: IAsyncActionWithProgress(Of )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: "XXX"
    nameWithType: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: "XXX"
    nameWithType: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.IProgress{{TProgress}}
  commentId: T:System.IProgress{``0}
  parent: System
  definition: System.IProgress`1
  name: "XXX"
  nameWithType: IProgress<TProgress>
  fullName: System.IProgress<TProgress>
  nameWithType.vb: IProgress(Of TProgress)
  fullname.vb: System.IProgress(Of TProgress)
  name.vb: IProgress(Of TProgress)
  spec.csharp:
  - uid: System.IProgress`1
    name: "XXX"
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: "XXX"
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: false
  name: "XXX"
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullname.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: "XXX"
    nameWithType: IProgress
    fullName: System.IProgress
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: "XXX"
    nameWithType: IProgress
    fullName: System.IProgress
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: T
    fullName: T
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
  commentId: '!:Windows.Foundation.IAsyncOperationWithProgress{``0,``1}'
  definition: Windows.Foundation.IAsyncOperationWithProgress`2
  name: "XXX"
  nameWithType: IAsyncOperationWithProgress<TResult, TProgress>
  fullName: Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>
  nameWithType.vb: IAsyncOperationWithProgress(Of TResult, TProgress)
  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress)
  name.vb: IAsyncOperationWithProgress(Of TResult, TProgress)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: "XXX"
    nameWithType: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: "XXX"
    nameWithType: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - name: "XXX"
    nameWithType: TProgress
    fullName: TProgress
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperationWithProgress`2
  isExternal: true
  name: "XXX"
  nameWithType: IAsyncOperationWithProgress<, >
  fullName: Windows.Foundation.IAsyncOperationWithProgress<, >
  nameWithType.vb: IAsyncOperationWithProgress(Of , )
  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of , )
  name.vb: IAsyncOperationWithProgress(Of , )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: "XXX"
    nameWithType: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: "<"
    nameWithType: <
    fullName: <
  - name: 
    nameWithType: 
    fullName: 
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: "XXX"
    nameWithType: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: 
    nameWithType: 
    fullName: 
  - name: 'XXX '
    nameWithType: ', '
    fullName: ', '
  - name: 
    nameWithType: 
    fullName: 
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Runtime.CompilerServices.TaskAwaiter
  commentId: T:System.Runtime.CompilerServices.TaskAwaiter
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: "XXX"
  nameWithType: TaskAwaiter
  fullName: System.Runtime.CompilerServices.TaskAwaiter
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: false
  name: "XXX"
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Runtime.CompilerServices.TaskAwaiter{{TResult}}
  commentId: T:System.Runtime.CompilerServices.TaskAwaiter{`0}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.TaskAwaiter`1
  name: "XXX"
  nameWithType: TaskAwaiter<TResult>
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
  nameWithType.vb: TaskAwaiter(Of TResult)
  fullname.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)
  name.vb: TaskAwaiter(Of TResult)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: "XXX"
    nameWithType: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: "XXX"
    nameWithType: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: "XXX"
    nameWithType: )
    fullName: )
- uid: System.Runtime.CompilerServices.TaskAwaiter`1
  commentId: T:System.Runtime.CompilerServices.TaskAwaiter`1
  isExternal: false
  name: "XXX"
  nameWithType: TaskAwaiter<TResult>
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
  nameWithType.vb: TaskAwaiter(Of TResult)
  fullname.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)
  name.vb: TaskAwaiter(Of TResult)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: "XXX"
    nameWithType: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
  - name: "<"
    nameWithType: <
    fullName: <
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.TaskAwaiter`1
    name: "XXX"
    nameWithType: TaskAwaiter
    fullName: System.Runtime.CompilerServices.TaskAwaiter
  - name: 'XXX '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: "XXX"
    nameWithType: TResult
    fullName: TResult
  - name: "XXX"
    nameWithType: )
    fullName: )
