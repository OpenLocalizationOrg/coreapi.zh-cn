items:
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  children:
  - Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  type: Class
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeMemoryMappedViewHandle
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 15
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: Microsoft.Win32.SafeHandles
  summary: "\n<p>Provides a safe handle that represents a view of a block of unmanaged memory for random access. </p>\n"
  syntax:
    content: 'public sealed class SafeMemoryMappedViewHandle : SafeBuffer, IDisposable'
    content.vb: >-
      Public NotInheritable Class SafeMemoryMappedViewHandle
          Inherits SafeBuffer
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - System.Runtime.InteropServices.SafeBuffer
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  - System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  - System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,{T}[],System.Int32,System.Int32)
  - System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,{T})
  - System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,{T}[],System.Int32,System.Int32)
  - System.Runtime.InteropServices.SafeBuffer.ByteLength
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - System.Runtime.InteropServices.SafeHandle.handle
  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - System.Runtime.InteropServices.SafeHandle.Close
  - System.Runtime.InteropServices.SafeHandle.Dispose
  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  - System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - System.Runtime.InteropServices.SafeHandle.IsClosed
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  commentId: M:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle()
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReleaseHandle
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 18
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle()
    content.vb: Protected Overrides Function ReleaseHandle As Boolean
    return:
      type: System.Boolean
  overridden: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle()
references:
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: "XXX"
  fullName: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  parent: System.Runtime.ConstrainedExecution
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  commentId: T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle
  commentId: T:System.Runtime.InteropServices.SafeHandle
  nameWithType: SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  parent: Microsoft.Win32.SafeHandles
  isExternal: true
  name: "XXX"
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  commentId: T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid
- uid: System.Runtime.InteropServices.SafeBuffer
  parent: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer
  commentId: T:System.Runtime.InteropServices.SafeBuffer
  nameWithType: SafeBuffer
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  nameWithType: SafeBuffer.Initialize(UInt64)
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32, System.UInt32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  nameWithType: SafeBuffer.Initialize(UInt32, UInt32)
- uid: System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Initialize<T>(System.UInt32)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.Initialize(Of T)(System.UInt32)
  name.vb: Initialize(Of T)(UInt32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Initialize(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  nameWithType: SafeBuffer.Initialize<T>(UInt32)
  nameWithType.vb: SafeBuffer.Initialize(Of T)(UInt32)
- uid: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.AcquirePointer
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.AcquirePointer
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  nameWithType: SafeBuffer.AcquirePointer(Byte*)
- uid: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.ReleasePointer()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  nameWithType: SafeBuffer.ReleasePointer()
- uid: System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Read<T>(System.UInt64)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.Read(Of T)(System.UInt64)
  name.vb: Read(Of T)(UInt64)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Read<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Read(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  nameWithType: SafeBuffer.Read<T>(UInt64)
  nameWithType.vb: SafeBuffer.Read(Of T)(UInt64)
- uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,{T}[],System.Int32,System.Int32)
  parent: System.Runtime.InteropServices.SafeBuffer
  definition: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.ReadArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: ReadArray(Of T)(UInt64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  nameWithType: SafeBuffer.ReadArray<T>(UInt64, T[], Int32, Int32)
  nameWithType.vb: SafeBuffer.ReadArray(Of T)(UInt64, T(), Int32, Int32)
- uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,{T})
  parent: System.Runtime.InteropServices.SafeBuffer
  definition: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Write<T>(System.UInt64, T)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.Write(Of T)(System.UInt64, T)
  name.vb: Write(Of T)(UInt64, T)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Write<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Write(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  nameWithType: SafeBuffer.Write<T>(UInt64, T)
  nameWithType.vb: SafeBuffer.Write(Of T)(UInt64, T)
- uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,{T}[],System.Int32,System.Int32)
  parent: System.Runtime.InteropServices.SafeBuffer
  definition: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.WriteArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: WriteArray(Of T)(UInt64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  nameWithType: SafeBuffer.WriteArray<T>(UInt64, T[], Int32, Int32)
  nameWithType.vb: SafeBuffer.WriteArray(Of T)(UInt64, T(), Int32, Int32)
- uid: System.Runtime.InteropServices.SafeBuffer.ByteLength
  parent: System.Runtime.InteropServices.SafeBuffer
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.ByteLength
  commentId: P:System.Runtime.InteropServices.SafeBuffer.ByteLength
  nameWithType: SafeBuffer.ByteLength
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: true
  name: "XXX"
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  commentId: P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
- uid: System.Runtime.InteropServices.SafeHandle.handle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.handle
  commentId: F:System.Runtime.InteropServices.SafeHandle.handle
  nameWithType: SafeHandle.handle
- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle
  - name: "XXX"
    fullName: (
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle
  - name: "XXX"
    fullName: (
  - uid: System.IntPtr
    name: "XXX"
    fullName: System.IntPtr
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  nameWithType: SafeHandle.SetHandle(IntPtr)
- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  nameWithType: SafeHandle.DangerousGetHandle()
- uid: System.Runtime.InteropServices.SafeHandle.Close
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.Close()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Close
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Close
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Close
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Close
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.Close
  nameWithType: SafeHandle.Close()
- uid: System.Runtime.InteropServices.SafeHandle.Dispose
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose
  nameWithType: SafeHandle.Dispose()
- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  nameWithType: SafeHandle.Dispose(Boolean)
- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  nameWithType: SafeHandle.SetHandleAsInvalid()
- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  nameWithType: SafeHandle.DangerousAddRef(Boolean)
- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousRelease
  nameWithType: SafeHandle.DangerousRelease()
- uid: System.Runtime.InteropServices.SafeHandle.IsClosed
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed
  commentId: P:System.Runtime.InteropServices.SafeHandle.IsClosed
  nameWithType: SafeHandle.IsClosed
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.ConstrainedExecution
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.ConstrainedExecution
  commentId: N:System.Runtime.ConstrainedExecution
  nameWithType: System.Runtime.ConstrainedExecution
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.ReadArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: ReadArray(Of T)(UInt64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.ReadArray(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  nameWithType: SafeBuffer.ReadArray<T>(UInt64, T[], Int32, Int32)
  nameWithType.vb: SafeBuffer.ReadArray(Of T)(UInt64, T(), Int32, Int32)
- uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.Write<T>(System.UInt64, T)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.Write(Of T)(System.UInt64, T)
  name.vb: Write(Of T)(UInt64, T)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Write<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.Write(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  nameWithType: SafeBuffer.Write<T>(UInt64, T)
  nameWithType.vb: SafeBuffer.Write(Of T)(UInt64, T)
- uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray<T>(System.UInt64, T[], System.Int32, System.Int32)
  fullname.vb: System.Runtime.InteropServices.SafeBuffer.WriteArray(Of T)(System.UInt64, T(), System.Int32, System.Int32)
  name.vb: WriteArray(Of T)(UInt64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray<T>
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeBuffer.WriteArray(Of T)
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  nameWithType: SafeBuffer.WriteArray<T>(UInt64, T[], Int32, Int32)
  nameWithType.vb: SafeBuffer.WriteArray(Of T)(UInt64, T(), Int32, Int32)
- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()
  spec.csharp:
  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
    name: "XXX"
    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle
  nameWithType: SafeHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
