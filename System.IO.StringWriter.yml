items:
- uid: System.IO.StringWriter
  commentId: T:System.IO.StringWriter
  id: StringWriter
  parent: System.IO
  children:
  - System.IO.StringWriter.#ctor
  - System.IO.StringWriter.#ctor(System.IFormatProvider)
  - System.IO.StringWriter.#ctor(System.Text.StringBuilder)
  - System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)
  - System.IO.StringWriter.Dispose(System.Boolean)
  - System.IO.StringWriter.Encoding
  - System.IO.StringWriter.FlushAsync
  - System.IO.StringWriter.GetStringBuilder
  - System.IO.StringWriter.ToString
  - System.IO.StringWriter.Write(System.Char)
  - System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.StringWriter.Write(System.String)
  - System.IO.StringWriter.WriteAsync(System.Char)
  - System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.StringWriter.WriteAsync(System.String)
  - System.IO.StringWriter.WriteLineAsync(System.Char)
  - System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.StringWriter.WriteLineAsync(System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StringWriter
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 27
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Implements a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> for writing information to a string. The information is stored in an underlying <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public class StringWriter : TextWriter, IDisposable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Class StringWriter
          Inherits TextWriter
          Implements IDisposable
  seealso:
  - type: System.Text.StringBuilder
    commentId: T:System.Text.StringBuilder
  - type: System.IO.StringReader
    commentId: T:System.IO.StringReader
  inheritance:
  - System.Object
  - System.IO.TextWriter
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.TextWriter.CoreNewLine
  - System.IO.TextWriter.Null
  - System.IO.TextWriter.FormatProvider
  - System.IO.TextWriter.NewLine
  - System.IO.TextWriter.Dispose
  - System.IO.TextWriter.Flush
  - System.IO.TextWriter.Write(System.Boolean)
  - System.IO.TextWriter.Write(System.Char[])
  - System.IO.TextWriter.Write(System.Decimal)
  - System.IO.TextWriter.Write(System.Double)
  - System.IO.TextWriter.Write(System.Int32)
  - System.IO.TextWriter.Write(System.Int64)
  - System.IO.TextWriter.Write(System.Object)
  - System.IO.TextWriter.Write(System.Single)
  - System.IO.TextWriter.Write(System.String,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object[])
  - System.IO.TextWriter.Write(System.UInt32)
  - System.IO.TextWriter.Write(System.UInt64)
  - System.IO.TextWriter.WriteAsync(System.Char[])
  - System.IO.TextWriter.WriteLine
  - System.IO.TextWriter.WriteLine(System.Boolean)
  - System.IO.TextWriter.WriteLine(System.Char)
  - System.IO.TextWriter.WriteLine(System.Char[])
  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLine(System.Decimal)
  - System.IO.TextWriter.WriteLine(System.Double)
  - System.IO.TextWriter.WriteLine(System.Int32)
  - System.IO.TextWriter.WriteLine(System.Int64)
  - System.IO.TextWriter.WriteLine(System.Object)
  - System.IO.TextWriter.WriteLine(System.Single)
  - System.IO.TextWriter.WriteLine(System.String)
  - System.IO.TextWriter.WriteLine(System.String,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object[])
  - System.IO.TextWriter.WriteLine(System.UInt32)
  - System.IO.TextWriter.WriteLine(System.UInt64)
  - System.IO.TextWriter.WriteLineAsync
  - System.IO.TextWriter.WriteLineAsync(System.Char[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: StringWriter
- uid: System.IO.StringWriter.#ctor
  commentId: M:System.IO.StringWriter.#ctor
  id: '#ctor'
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.StringWriter()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 38
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public StringWriter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StringWriter.StringWriter()
- uid: System.IO.StringWriter.#ctor(System.IFormatProvider)
  commentId: M:System.IO.StringWriter.#ctor(System.IFormatProvider)
  id: '#ctor(System.IFormatProvider)'
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.StringWriter(System.IFormatProvider)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 43
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> class with the specified format control.</p>\n"
  syntax:
    content: public StringWriter(IFormatProvider formatProvider)
    content.vb: Public Sub New(formatProvider As IFormatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object that controls formatting. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StringWriter.StringWriter(IFormatProvider)
- uid: System.IO.StringWriter.#ctor(System.Text.StringBuilder)
  commentId: M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)
  id: '#ctor(System.Text.StringBuilder)'
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.StringWriter(System.Text.StringBuilder)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 49
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public StringWriter(StringBuilder sb)
    content.vb: Public Sub New(sb As StringBuilder)
    parameters:
    - id: sb
      type: System.Text.StringBuilder
      description: "\n<p>The <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref> object to write to. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sb</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StringWriter.StringWriter(StringBuilder)
- uid: System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)
  commentId: M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)
  id: '#ctor(System.Text.StringBuilder,System.IFormatProvider)'
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 52
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref> and has the specified format provider.</p>\n"
  syntax:
    content: public StringWriter(StringBuilder sb, IFormatProvider formatProvider)
    content.vb: Public Sub New(sb As StringBuilder, formatProvider As IFormatProvider)
    parameters:
    - id: sb
      type: System.Text.StringBuilder
      description: "\n<p>The <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref> object to write to. </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object that controls formatting. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sb</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StringWriter.StringWriter(StringBuilder, IFormatProvider)
- uid: System.IO.StringWriter.Encoding
  commentId: P:System.IO.StringWriter.Encoding
  id: Encoding
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.Encoding
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Encoding
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 74
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets the <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> in which the output is written.</p>\n"
  syntax:
    content: public override Encoding Encoding { get; }
    content.vb: Public Overrides ReadOnly Property Encoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\n<p>The <strong>Encoding</strong> in which the output is written.</p>\n"
  overridden: System.IO.TextWriter.Encoding
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: StringWriter.Encoding
- uid: System.IO.StringWriter.Dispose(System.Boolean)
  commentId: M:System.IO.StringWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 65
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  overridden: System.IO.TextWriter.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: StringWriter.Dispose(Boolean)
- uid: System.IO.StringWriter.FlushAsync
  commentId: M:System.IO.StringWriter.FlushAsync
  id: FlushAsync
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.FlushAsync()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FlushAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 180
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device. </p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task FlushAsync()
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function FlushAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous flush operation.</p>\n"
  overridden: System.IO.TextWriter.FlushAsync
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.FlushAsync()
- uid: System.IO.StringWriter.GetStringBuilder
  commentId: M:System.IO.StringWriter.GetStringBuilder
  id: GetStringBuilder
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.GetStringBuilder()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetStringBuilder
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 87
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Returns the underlying <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual StringBuilder GetStringBuilder()
    content.vb: Public Overridable Function GetStringBuilder As StringBuilder
    return:
      type: System.Text.StringBuilder
      description: "\n<p>The underlying <strong>StringBuilder</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: StringWriter.GetStringBuilder()
- uid: System.IO.StringWriter.ToString
  commentId: M:System.IO.StringWriter.ToString
  id: ToString
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 191
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Returns a string containing the characters written to the current <strong>StringWriter</strong> so far.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string containing the characters written to the current <strong>StringWriter</strong>.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.ToString()
- uid: System.IO.StringWriter.Write(System.Char)
  commentId: M:System.IO.StringWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.Write(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 93
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the string.</p>\n"
  syntax:
    content: public override void Write(char value)
    content.vb: Public Overrides Sub Write(value As Char)
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write. </p>\n"
  overridden: System.IO.TextWriter.Write(System.Char)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The writer is closed. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.Write(Char)
- uid: System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 104
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the string.</p>\n"
  syntax:
    content: public override void Write(char[] buffer, int index, int count)
    content.vb: Public Overrides Sub Write(buffer As Char(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The position in the buffer at which to start reading data.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write. </p>\n"
  overridden: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>(<em>index</em> + <em>count</em>)> <em>buffer</em>. <strong>Length</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The writer is closed. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StringWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  nameWithType: StringWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: StringWriter.Write(Char(), Int32, Int32)
- uid: System.IO.StringWriter.Write(System.String)
  commentId: M:System.IO.StringWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 124
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the current string.</p>\n"
  syntax:
    content: public override void Write(string value)
    content.vb: Public Overrides Sub Write(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. </p>\n"
  overridden: System.IO.TextWriter.Write(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The writer is closed. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.Write(String)
- uid: System.IO.StringWriter.WriteAsync(System.Char)
  commentId: M:System.IO.StringWriter.WriteAsync(System.Char)
  id: WriteAsync(System.Char)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 132
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the string asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the string.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.Char)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.WriteAsync(Char)
- uid: System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  id: WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 148
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the string asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The position in the buffer at which to start reading data.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StringWriter.WriteAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteAsync(Char(), Int32, Int32)
  nameWithType: StringWriter.WriteAsync(Char[], Int32, Int32)
  nameWithType.vb: StringWriter.WriteAsync(Char(), Int32, Int32)
- uid: System.IO.StringWriter.WriteAsync(System.String)
  commentId: M:System.IO.StringWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 140
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the current string asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If <em>value</em> is <strong>null</strong>, nothing is written to the text stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.WriteAsync(String)
- uid: System.IO.StringWriter.WriteLineAsync(System.Char)
  commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char)
  id: WriteLineAsync(System.Char)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteLineAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 156
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character followed by a line terminator asynchronously to the string.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the string.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.Char)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.WriteLineAsync(Char)
- uid: System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 172
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters followed by a line terminator asynchronously to the string.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The position in the buffer at which to start reading data.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StringWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLineAsync(Char(), Int32, Int32)
  nameWithType: StringWriter.WriteLineAsync(Char[], Int32, Int32)
  nameWithType.vb: StringWriter.WriteLineAsync(Char(), Int32, Int32)
- uid: System.IO.StringWriter.WriteLineAsync(System.String)
  commentId: M:System.IO.StringWriter.WriteLineAsync(System.String)
  id: WriteLineAsync(System.String)
  parent: System.IO.StringWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StringWriter.WriteLineAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StringWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StringWriter.cs
    startLine: 164
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string followed by a line terminator asynchronously to the current string.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If the value is <strong>null</strong>, only a line terminator is written.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The string writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The string writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StringWriter.WriteLineAsync(String)
references:
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter
  nameWithType: TextWriter
  commentId: T:System.IO.TextWriter
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.IO.TextWriter.CoreNewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.CoreNewLine
  nameWithType: TextWriter.CoreNewLine
  commentId: F:System.IO.TextWriter.CoreNewLine
- uid: System.IO.TextWriter.Null
  parent: System.IO.TextWriter
  isExternal: false
  fullName: System.IO.TextWriter.Null
  nameWithType: TextWriter.Null
  commentId: F:System.IO.TextWriter.Null
- uid: System.IO.TextWriter.FormatProvider
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.FormatProvider
  nameWithType: TextWriter.FormatProvider
  commentId: P:System.IO.TextWriter.FormatProvider
- uid: System.IO.TextWriter.NewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.NewLine
  nameWithType: TextWriter.NewLine
  commentId: P:System.IO.TextWriter.NewLine
- uid: System.IO.TextWriter.Dispose
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose()
  spec.csharp:
  - uid: System.IO.TextWriter.Dispose
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Dispose
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Dispose()
  commentId: M:System.IO.TextWriter.Dispose
- uid: System.IO.TextWriter.Flush
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Flush()
  spec.csharp:
  - uid: System.IO.TextWriter.Flush
    name: "XXX"
    fullName: System.IO.TextWriter.Flush
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Flush
    name: "XXX"
    fullName: System.IO.TextWriter.Flush
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Flush()
  commentId: M:System.IO.TextWriter.Flush
- uid: System.IO.TextWriter.Write(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Boolean)
  commentId: M:System.IO.TextWriter.Write(System.Boolean)
- uid: System.IO.TextWriter.Write(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[])
  fullname.vb: System.IO.TextWriter.Write(System.Char())
  name.vb: Write(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char[])
  nameWithType.vb: TextWriter.Write(Char())
  commentId: M:System.IO.TextWriter.Write(System.Char[])
- uid: System.IO.TextWriter.Write(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Decimal)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Decimal)
  commentId: M:System.IO.TextWriter.Write(System.Decimal)
- uid: System.IO.TextWriter.Write(System.Double)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Double)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Double)
  commentId: M:System.IO.TextWriter.Write(System.Double)
- uid: System.IO.TextWriter.Write(System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Int32)
  commentId: M:System.IO.TextWriter.Write(System.Int32)
- uid: System.IO.TextWriter.Write(System.Int64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int64)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Int64)
  commentId: M:System.IO.TextWriter.Write(System.Int64)
- uid: System.IO.TextWriter.Write(System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Object)
  commentId: M:System.IO.TextWriter.Write(System.Object)
- uid: System.IO.TextWriter.Write(System.Single)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Single)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Single)
  commentId: M:System.IO.TextWriter.Write(System.Single)
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object, Object, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object[])
  fullname.vb: System.IO.TextWriter.Write(System.String, System.Object())
  name.vb: Write(String, Object())
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object[])
  nameWithType.vb: TextWriter.Write(String, Object())
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])
- uid: System.IO.TextWriter.Write(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(UInt32)
  commentId: M:System.IO.TextWriter.Write(System.UInt32)
- uid: System.IO.TextWriter.Write(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt64)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(UInt64)
  commentId: M:System.IO.TextWriter.Write(System.UInt64)
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char())
  name.vb: WriteAsync(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char[])
  nameWithType.vb: TextWriter.WriteAsync(Char())
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])
- uid: System.IO.TextWriter.WriteLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine()
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine()
  commentId: M:System.IO.TextWriter.WriteLine
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Boolean)
  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)
- uid: System.IO.TextWriter.WriteLine(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char)
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteLine(System.Char())
  name.vb: WriteLine(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char[])
  nameWithType.vb: TextWriter.WriteLine(Char())
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteLine(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLine(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLine(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Decimal)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Decimal)
  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)
- uid: System.IO.TextWriter.WriteLine(System.Double)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Double)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Double)
  commentId: M:System.IO.TextWriter.WriteLine(System.Double)
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int64)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Int64)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)
- uid: System.IO.TextWriter.WriteLine(System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.Object)
- uid: System.IO.TextWriter.WriteLine(System.Single)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Single)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Single)
  commentId: M:System.IO.TextWriter.WriteLine(System.Single)
- uid: System.IO.TextWriter.WriteLine(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String)
  commentId: M:System.IO.TextWriter.WriteLine(System.String)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object[])
  fullname.vb: System.IO.TextWriter.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object[])
  nameWithType.vb: TextWriter.WriteLine(String, Object())
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(UInt32)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt64)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(UInt64)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)
- uid: System.IO.TextWriter.WriteLineAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync()
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync()
  commentId: M:System.IO.TextWriter.WriteLineAsync
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char())
  name.vb: WriteLineAsync(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char[])
  nameWithType.vb: TextWriter.WriteLineAsync(Char())
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.StringBuilder
  nameWithType: StringBuilder
  commentId: T:System.Text.StringBuilder
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.IO.TextWriter.Encoding
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Encoding
  nameWithType: TextWriter.Encoding
  commentId: P:System.IO.TextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.Encoding
  nameWithType: Encoding
  commentId: T:System.Text.Encoding
- uid: System.IO.TextWriter.Dispose(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Dispose(Boolean)
  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IO.TextWriter.FlushAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.FlushAsync()
  spec.csharp:
  - uid: System.IO.TextWriter.FlushAsync
    name: "XXX"
    fullName: System.IO.TextWriter.FlushAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.FlushAsync
    name: "XXX"
    fullName: System.IO.TextWriter.FlushAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.FlushAsync()
  commentId: M:System.IO.TextWriter.FlushAsync
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IO.TextWriter.Write(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char)
  commentId: M:System.IO.TextWriter.Write(System.Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.Write(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
- uid: System.Char[]
  name: "XXX"
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.IO.TextWriter.Write(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String)
  commentId: M:System.IO.TextWriter.Write(System.String)
- uid: System.IO.TextWriter.WriteAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)
- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteAsync(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(String)
  commentId: M:System.IO.TextWriter.WriteAsync(System.String)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLineAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLineAsync(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteLineAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(String)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
