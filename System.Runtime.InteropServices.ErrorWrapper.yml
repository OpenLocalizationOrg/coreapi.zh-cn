items:
- uid: System.Runtime.InteropServices.ErrorWrapper
  commentId: T:System.Runtime.InteropServices.ErrorWrapper
  id: ErrorWrapper
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)
  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)
  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)
  - System.Runtime.InteropServices.ErrorWrapper.ErrorCode
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.InteropServices.ErrorWrapper
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ErrorWrapper
    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
    startLine: 18
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Wraps objects the marshaler should marshal as a <strong>VT_ERROR</strong>.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public sealed class ErrorWrapper
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public NotInheritable Class ErrorWrapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ErrorWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: ErrorWrapper
- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)
  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Runtime.InteropServices.ErrorWrapper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
    startLine: 34
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the HRESULT that corresponds to the exception supplied.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]

      public ErrorWrapper(Exception e)
    content.vb: >-
      <SecuritySafeCritical>

      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>

      Public Sub New(e As Exception)
    parameters:
    - id: e
      type: System.Exception
      description: "\n<p>The exception to be converted to an error code. </p>\n"
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ErrorWrapper.ErrorWrapper(Exception)
- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)
  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.InteropServices.ErrorWrapper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
    startLine: 22
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the HRESULT of the error.</p>\n"
  syntax:
    content: public ErrorWrapper(int errorCode)
    content.vb: Public Sub New(errorCode As Integer)
    parameters:
    - id: errorCode
      type: System.Int32
      description: "\n<p>The HRESULT of the error. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ErrorWrapper.ErrorWrapper(Int32)
- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)
  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Runtime.InteropServices.ErrorWrapper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorWrapper(System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
    startLine: 27
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with an object containing the HRESULT of the error.</p>\n"
  syntax:
    content: public ErrorWrapper(object errorCode)
    content.vb: Public Sub New(errorCode As Object)
    parameters:
    - id: errorCode
      type: System.Object
      description: "\n<p>The object containing the HRESULT of the error. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>errorCode</em> parameter is not an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: ErrorWrapper.ErrorWrapper(Object)
- uid: System.Runtime.InteropServices.ErrorWrapper.ErrorCode
  commentId: P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode
  id: ErrorCode
  parent: System.Runtime.InteropServices.ErrorWrapper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.InteropServices.ErrorWrapper.ErrorCode
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ErrorCode
    path: src/mscorlib/src/System/Runtime/InteropServices/ErrorWrapper.cs
    startLine: 43
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the error code of the wrapper.</p>\n"
  syntax:
    content: public int ErrorCode { get; }
    content.vb: Public ReadOnly Property ErrorCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The HRESULT of the error.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ErrorWrapper.ErrorCode
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Exception
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
