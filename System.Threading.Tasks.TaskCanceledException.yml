items:
- uid: System.Threading.Tasks.TaskCanceledException
  commentId: T:System.Threading.Tasks.TaskCanceledException
  id: TaskCanceledException
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.TaskCanceledException.#ctor
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskCanceledException.Task
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TaskCanceledException
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 22
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Represents an exception used to communicate task cancellation.</p>\n"
  syntax:
    content: >-
      [Serializable]

      public class TaskCanceledException : OperationCanceledException, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class TaskCanceledException
          Inherits OperationCanceledException
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.OperationCanceledException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.OperationCanceledException.CancellationToken
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: TaskCanceledException
- uid: System.Threading.Tasks.TaskCanceledException.#ctor
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 32
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a system-supplied message that describes the error.</p>\n"
  syntax:
    content: public TaskCanceledException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TaskCanceledException.TaskCanceledException()
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 41
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified message that describes the error.</p>\n"
  syntax:
    content: public TaskCanceledException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TaskCanceledException.TaskCanceledException(String)
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 52
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  syntax:
    content: public TaskCanceledException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TaskCanceledException.TaskCanceledException(String, Exception)
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  id: '#ctor(System.Threading.Tasks.Task)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.Threading.Tasks.Task)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 61
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a reference to the <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that has been canceled.</p>\n"
  syntax:
    content: public TaskCanceledException(Task task)
    content.vb: Public Sub New(task As Task)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that has been canceled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TaskCanceledException.TaskCanceledException(Task)
- uid: System.Threading.Tasks.TaskCanceledException.Task
  commentId: P:System.Threading.Tasks.TaskCanceledException.Task
  id: Task
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCanceledException.Task
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Task
    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs
    startLine: 85
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets the task associated with this exception.</p>\n"
  syntax:
    content: public Task Task { get; }
    content.vb: Public ReadOnly Property Task As Task
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A reference to the <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this exception.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TaskCanceledException.Task
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.OperationCanceledException
  nameWithType: OperationCanceledException
  commentId: T:System.OperationCanceledException
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.Serialization.ISerializable
  nameWithType: ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: "XXX"
  fullName: System.Runtime.InteropServices._Exception
  nameWithType: _Exception
  commentId: T:System.Runtime.InteropServices._Exception
- uid: System.OperationCanceledException.CancellationToken
  parent: System.OperationCanceledException
  isExternal: false
  name: "XXX"
  fullName: System.OperationCanceledException.CancellationToken
  nameWithType: OperationCanceledException.CancellationToken
  commentId: P:System.OperationCanceledException.CancellationToken
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: "XXX"
    fullName: System.Exception.GetBaseException
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: "XXX"
    fullName: System.Exception.GetBaseException
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Exception.GetBaseException()
  commentId: M:System.Exception.GetBaseException
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: "XXX"
    fullName: System.Exception.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: "XXX"
    fullName: System.Exception.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Exception.ToString()
  commentId: M:System.Exception.ToString
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: "XXX"
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: "XXX"
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: "XXX"
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: "XXX"
    fullName: System.Exception.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: "XXX"
    fullName: System.Exception.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Exception.GetType()
  commentId: M:System.Exception.GetType
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Message
  nameWithType: Exception.Message
  commentId: P:System.Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Data
  nameWithType: Exception.Data
  commentId: P:System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.InnerException
  nameWithType: Exception.InnerException
  commentId: P:System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.TargetSite
  nameWithType: Exception.TargetSite
  commentId: P:System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.StackTrace
  nameWithType: Exception.StackTrace
  commentId: P:System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.HelpLink
  nameWithType: Exception.HelpLink
  commentId: P:System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.Source
  nameWithType: Exception.Source
  commentId: P:System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: "XXX"
  fullName: System.Exception.HResult
  nameWithType: Exception.HResult
  commentId: P:System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: "XXX"
  fullName: System.Exception.SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Runtime.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
