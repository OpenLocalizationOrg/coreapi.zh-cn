items:
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  id: IEnumerable`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IEnumerable`1.GetEnumerator
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEnumerable
    path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</p>\n"
  syntax:
    content: >-
      [TypeDependency("System.SZArrayHelper")]

      public interface IEnumerable<out T> : IEnumerable
    content.vb: >-
      <TypeDependency("System.SZArrayHelper")>

      Public Interface IEnumerable(Of Out T)
          Inherits IEnumerable
    typeParameters:
    - id: T
      description: "\n<p>The type of objects to enumerate.</p>\n"
  seealso:
  - type: System.Collections.Generic.IEnumerator`1
    commentId: T:System.Collections.Generic.IEnumerator`1
  - type: System.Collections
    commentId: N:System.Collections
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEnumerator
    path: src/mscorlib/src/System/Collections/Generic/IEnumerable.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Returns an enumerator that iterates through the collection.</p>\n"
  syntax:
    content: IEnumerator<T> GetEnumerator()
    content.vb: Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: "\n<p>An enumerator that can be used to iterate through the collection.</p>\n"
  seealso:
  - type: System.Collections.Generic.IEnumerator`1
    commentId: T:System.Collections.Generic.IEnumerator`1
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
references:
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator{`0}
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator`1
