items:
- uid: System.Security.Cryptography.CngUIPolicy
  commentId: T:System.Security.Cryptography.CngUIPolicy
  id: CngUIPolicy
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.CreationTitle
  - System.Security.Cryptography.CngUIPolicy.Description
  - System.Security.Cryptography.CngUIPolicy.FriendlyName
  - System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  - System.Security.Cryptography.CngUIPolicy.UseContext
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CngUIPolicy
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 234
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Encapsulates optional configuration parameters for the user interface (UI) that Cryptography Next Generation (CNG) displays when you access a protected key.</p>\n"
  syntax:
    content: public sealed class CngUIPolicy
    content.vb: Public NotInheritable Class CngUIPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: CngUIPolicy
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  commentId: M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 236
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngUIPolicy\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified protection level.</p>\n"
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>A bitwise combination of the enumeration values that specify the protection level.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  commentId: M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 237
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngUIPolicy\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified protection level and friendly name.</p>\n"
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>A bitwise combination of the enumeration values that specify the protection level.  </p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels, String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  commentId: M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 238
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngUIPolicy\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified protection level, friendly name, and description.</p>\n"
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>A bitwise combination of the enumeration values that specify the protection level.  </p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.</p>\n"
    - id: description
      type: System.String
      description: "\n<p>The full-text description of the key. Specify a null string to use the default description.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels, String, String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  commentId: M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 239
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngUIPolicy\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified protection level, friendly name, description string, and use context.</p>\n"
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String, useContext As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>A bitwise combination of the enumeration values that specify the protection level.  </p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.</p>\n"
    - id: description
      type: System.String
      description: "\n<p>The full-text description of the key. Specify a null string to use the default description.</p>\n"
    - id: useContext
      type: System.String
      description: "\n<p>A description of how the key will be used. Specify a null string to use the default description.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels, String, String, String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  commentId: M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 240
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngUIPolicy\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified protection level, friendly name, description string, use context, and title.</p>\n"
  syntax:
    content: public CngUIPolicy(CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext, string creationTitle)
    content.vb: Public Sub New(protectionLevel As CngUIProtectionLevels, friendlyName As String, description As String, useContext As String, creationTitle As String)
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>A bitwise combination of the enumeration values that specify the protection level.  </p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>A friendly name for the key to be used in the UI prompt. Specify a null string to use the default name.</p>\n"
    - id: description
      type: System.String
      description: "\n<p>The full-text description of the key. Specify a null string to use the default description.</p>\n"
    - id: useContext
      type: System.String
      description: "\n<p>A description of how the key will be used. Specify a null string to use the default description.</p>\n"
    - id: creationTitle
      type: System.String
      description: "\n<p>The title for the dialog box that provides the UI prompt. Specify a null string to use the default title.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels, String, String, String, String)
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  commentId: P:System.Security.Cryptography.CngUIPolicy.CreationTitle
  id: CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreationTitle
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 241
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the title that is displayed by the UI prompt.</p>\n"
  syntax:
    content: public string CreationTitle { get; }
    content.vb: Public ReadOnly Property CreationTitle As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The title of the dialog box that appears when the key is accessed.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CngUIPolicy.CreationTitle
- uid: System.Security.Cryptography.CngUIPolicy.Description
  commentId: P:System.Security.Cryptography.CngUIPolicy.Description
  id: Description
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.Description
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Description
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 242
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the description string that is displayed by the UI prompt.</p>\n"
  syntax:
    content: public string Description { get; }
    content.vb: Public ReadOnly Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The description text for the dialog box that appears when the key is accessed.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CngUIPolicy.Description
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  commentId: P:System.Security.Cryptography.CngUIPolicy.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FriendlyName
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 243
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the friendly name that is displayed by the UI prompt.</p>\n"
  syntax:
    content: public string FriendlyName { get; }
    content.vb: Public ReadOnly Property FriendlyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The friendly name that is used to describe the key in the dialog box that appears when the key is accessed.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CngUIPolicy.FriendlyName
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  commentId: P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  id: ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProtectionLevel
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 244
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the UI protection level for the key.</p>\n"
  syntax:
    content: public CngUIProtectionLevels ProtectionLevel { get; }
    content.vb: Public ReadOnly Property ProtectionLevel As CngUIProtectionLevels
    parameters: []
    return:
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "\n<p>An object that describes the level of UI protection to apply to the key.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CngUIPolicy.ProtectionLevel
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  commentId: P:System.Security.Cryptography.CngUIPolicy.UseContext
  id: UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseContext
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 245
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the description of how the key will be used.</p>\n"
  syntax:
    content: public string UseContext { get; }
    content.vb: Public ReadOnly Property UseContext As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The description of how the key will be used.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: CngUIPolicy.UseContext
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: "XXX"
  fullName: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  nameWithType: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Cryptography.CngUIProtectionLevels
  parent: System.Security.Cryptography
  isExternal: false
  name: "XXX"
  fullName: System.Security.Cryptography.CngUIProtectionLevels
  commentId: T:System.Security.Cryptography.CngUIProtectionLevels
  nameWithType: CngUIProtectionLevels
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
