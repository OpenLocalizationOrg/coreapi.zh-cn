items:
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  id: IAsyncResult
  parent: System
  children:
  - System.IAsyncResult.AsyncState
  - System.IAsyncResult.AsyncWaitHandle
  - System.IAsyncResult.CompletedSynchronously
  - System.IAsyncResult.IsCompleted
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IAsyncResult
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IAsyncResult.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IAsyncResult
    path: src/mscorlib/src/System/IAsyncResult.cs
    startLine: 16
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the status of an asynchronous operation. </p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public interface IAsyncResult
    content.vb: >-
      <ComVisible(True)>

      Public Interface IAsyncResult
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IAsyncResult
- uid: System.IAsyncResult.AsyncState
  commentId: P:System.IAsyncResult.AsyncState
  id: AsyncState
  parent: System.IAsyncResult
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IAsyncResult.AsyncState
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IAsyncResult.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncState
    path: src/mscorlib/src/System/IAsyncResult.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</p>\n"
  syntax:
    content: object AsyncState { get; }
    content.vb: ReadOnly Property AsyncState As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>A user-defined object that qualifies or contains information about an asynchronous operation.</p>\n"
  seealso:
  - type: System.AsyncCallback
    commentId: T:System.AsyncCallback
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IAsyncResult.AsyncState
- uid: System.IAsyncResult.AsyncWaitHandle
  commentId: P:System.IAsyncResult.AsyncWaitHandle
  id: AsyncWaitHandle
  parent: System.IAsyncResult
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IAsyncResult.AsyncWaitHandle
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IAsyncResult.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncWaitHandle
    path: src/mscorlib/src/System/IAsyncResult.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.Threading.WaitHandle\" data-throw-if-not-resolved=\"false\"></xref> that is used to wait for an asynchronous operation to complete.</p>\n"
  syntax:
    content: WaitHandle AsyncWaitHandle { get; }
    content.vb: ReadOnly Property AsyncWaitHandle As WaitHandle
    parameters: []
    return:
      type: System.Threading.WaitHandle
      description: "\n<p>A <xref href=\"System.Threading.WaitHandle\" data-throw-if-not-resolved=\"false\"></xref> that is used to wait for an asynchronous operation to complete.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IAsyncResult.AsyncWaitHandle
- uid: System.IAsyncResult.CompletedSynchronously
  commentId: P:System.IAsyncResult.CompletedSynchronously
  id: CompletedSynchronously
  parent: System.IAsyncResult
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IAsyncResult.CompletedSynchronously
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IAsyncResult.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompletedSynchronously
    path: src/mscorlib/src/System/IAsyncResult.cs
    startLine: 26
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a value that indicates whether the asynchronous operation completed synchronously.</p>\n"
  syntax:
    content: bool CompletedSynchronously { get; }
    content.vb: ReadOnly Property CompletedSynchronously As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the asynchronous operation completed synchronously; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IAsyncResult.CompletedSynchronously
- uid: System.IAsyncResult.IsCompleted
  commentId: P:System.IAsyncResult.IsCompleted
  id: IsCompleted
  parent: System.IAsyncResult
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IAsyncResult.IsCompleted
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IAsyncResult.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsCompleted
    path: src/mscorlib/src/System/IAsyncResult.cs
    startLine: 19
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a value that indicates whether the asynchronous operation has completed.</p>\n"
  syntax:
    content: bool IsCompleted { get; }
    content.vb: ReadOnly Property IsCompleted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the operation is complete; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IAsyncResult.IsCompleted
references:
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading.WaitHandle
  nameWithType: WaitHandle
  commentId: T:System.Threading.WaitHandle
- uid: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
