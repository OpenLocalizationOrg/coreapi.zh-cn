items:
- uid: System.Text.DecoderFallbackBuffer
  commentId: T:System.Text.DecoderFallbackBuffer
  id: DecoderFallbackBuffer
  parent: System.Text
  children:
  - System.Text.DecoderFallbackBuffer.#ctor
  - System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)
  - System.Text.DecoderFallbackBuffer.GetNextChar
  - System.Text.DecoderFallbackBuffer.MovePrevious
  - System.Text.DecoderFallbackBuffer.Remaining
  - System.Text.DecoderFallbackBuffer.Reset
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DecoderFallbackBuffer
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 87
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence. </p>\n"
  syntax:
    content: public abstract class DecoderFallbackBuffer
    content.vb: Public MustInherit Class DecoderFallbackBuffer
  seealso:
  - type: System.Text.DecoderFallback
    commentId: T:System.Text.DecoderFallback
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: DecoderFallbackBuffer
- uid: System.Text.DecoderFallbackBuffer.#ctor
  commentId: M:System.Text.DecoderFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.DecoderFallbackBuffer()
  type: Constructor
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 40
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.DecoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: protected DecoderFallbackBuffer()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: DecoderFallbackBuffer.DecoderFallbackBuffer()
- uid: System.Text.DecoderFallbackBuffer.Remaining
  commentId: P:System.Text.DecoderFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.Remaining
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remaining
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 106
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, gets the number of characters in the current <xref href=\"System.Text.DecoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> object that remain to be processed.</p>\n"
  syntax:
    content: public abstract int Remaining { get; }
    content.vb: Public MustOverride ReadOnly Property Remaining As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of characters in the current fallback buffer that have not yet been processed.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: DecoderFallbackBuffer.Remaining
- uid: System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)
  commentId: M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)
  id: Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.Fallback(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Fallback
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 94
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</p>\n"
  syntax:
    content: public abstract bool Fallback(byte[] bytesUnknown, int index)
    content.vb: Public MustOverride Function Fallback(bytesUnknown As Byte(), index As Integer) As Boolean
    parameters:
    - id: bytesUnknown
      type: System.Byte[]
      description: "\n<p>An input array of bytes.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index position of a byte in <em>bytesUnknown</em>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fallback buffer can process <em>bytesUnknown</em>; <strong>false</strong> if the fallback buffer ignores <em>bytesUnknown</em>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.DecoderFallbackBuffer.Fallback(System.Byte(), System.Int32)
  name.vb: Fallback(Byte(), Int32)
  nameWithType: DecoderFallbackBuffer.Fallback(Byte[], Int32)
  nameWithType.vb: DecoderFallbackBuffer.Fallback(Byte(), Int32)
- uid: System.Text.DecoderFallbackBuffer.GetNextChar
  commentId: M:System.Text.DecoderFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.GetNextChar()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetNextChar
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 98
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, retrieves the next character in the fallback buffer.</p>\n"
  syntax:
    content: public abstract char GetNextChar()
    content.vb: Public MustOverride Function GetNextChar As Char
    return:
      type: System.Char
      description: "\n<p>The next character in the fallback buffer.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DecoderFallbackBuffer.GetNextChar()
- uid: System.Text.DecoderFallbackBuffer.MovePrevious
  commentId: M:System.Text.DecoderFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.MovePrevious()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MovePrevious
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 102
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, causes the next call to the <xref href=\"System.Text.DecoderFallbackBuffer.GetNextChar\" data-throw-if-not-resolved=\"false\"></xref> method to access the data buffer character position that is prior to the current character position. </p>\n"
  syntax:
    content: public abstract bool MovePrevious()
    content.vb: Public MustOverride Function MovePrevious As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Text.DecoderFallbackBuffer.MovePrevious\" data-throw-if-not-resolved=\"false\"></xref> operation was successful; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: DecoderFallbackBuffer.MovePrevious()
- uid: System.Text.DecoderFallbackBuffer.Reset
  commentId: M:System.Text.DecoderFallbackBuffer.Reset
  id: Reset
  parent: System.Text.DecoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.DecoderFallbackBuffer.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Text/DecoderFallback.cs
    startLine: 110
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes all data and state information pertaining to this fallback buffer.</p>\n"
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: DecoderFallbackBuffer.Reset()
references:
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Byte[]
  name: "XXX"
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: "XXX"
    fullName: System.Byte
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
