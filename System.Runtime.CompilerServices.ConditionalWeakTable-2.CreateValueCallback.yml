items:
- uid: System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback
  commentId: T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback
  id: ConditionalWeakTable`2.CreateValueCallback
  parent: System.Runtime.CompilerServices
  children: []
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.ConditionalWeakTable<TKey, TValue>.CreateValueCallback
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/ConditionalWeakTable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateValueCallback
    path: src/mscorlib/src/System/Runtime/CompilerServices/ConditionalWeakTable.cs
    startLine: 278
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Represents a method that creates a non-default value to add as part of a key/value pair to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  syntax:
    content: public delegate TValue CreateValueCallback(TKey key);
    content.vb: Public Delegate Function CreateValueCallback(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key that belongs to the value to create.</p>\n"
    return:
      type: '{TValue}'
      description: "\n<p>An instance of a reference type that represents the value to attach to the specified key.</p>\n"
  seealso:
  - type: System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)
    commentId: M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Runtime.CompilerServices.ConditionalWeakTable(Of TKey, TValue).CreateValueCallback
  name.vb: ConditionalWeakTable(Of TKey, TValue).CreateValueCallback
  nameWithType: ConditionalWeakTable<TKey, TValue>.CreateValueCallback
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  nameWithType.vb: ConditionalWeakTable(Of TKey, TValue).CreateValueCallback
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: '{TKey}'
  definition: TKey
  name: "XXX"
  fullName: TKey
  nameWithType: TKey
  commentId: '!:TKey'
- uid: '{TValue}'
  definition: TValue
  name: "XXX"
  fullName: TValue
  nameWithType: TValue
  commentId: '!:TValue'
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - uid: System.Delegate
    name: "XXX"
    fullName: System.Delegate
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: "XXX"
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: "XXX"
    fullName: (
  - uid: System.Delegate
    name: "XXX"
    fullName: System.Delegate
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
- uid: System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection.RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
- uid: TKey
  isExternal: false
  name: "XXX"
  fullName: TKey
  nameWithType: TKey
- uid: TValue
  isExternal: false
  name: "XXX"
  fullName: TValue
  nameWithType: TValue
- uid: System.Reflection
  isExternal: false
  name: "XXX"
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
