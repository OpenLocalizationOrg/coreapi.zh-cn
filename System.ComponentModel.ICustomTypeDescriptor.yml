items:
- uid: System.ComponentModel.ICustomTypeDescriptor
  commentId: T:System.ComponentModel.ICustomTypeDescriptor
  id: ICustomTypeDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ICustomTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides an interface that supplies dynamic custom type information for an object.</p>\n"
  syntax:
    content: public interface ICustomTypeDescriptor
    content.vb: Public Interface ICustomTypeDescriptor
  seealso:
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor
    commentId: T:System.ComponentModel.CustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: ICustomTypeDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 15
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of custom attributes for this instance of a component.</p>\n"
  syntax:
    content: AttributeCollection GetAttributes()
    content.vb: Function GetAttributes As AttributeCollection
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the attributes for this object.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  nameWithType: ICustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the class name of this instance of a component.</p>\n"
  syntax:
    content: string GetClassName()
    content.vb: Function GetClassName As String
    return:
      type: System.String
      description: "\n<p>The class name of the object, or <strong>null</strong> if the class does not have a name.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - type: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  nameWithType: ICustomTypeDescriptor.GetClassName()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of this instance of a component.</p>\n"
  syntax:
    content: string GetComponentName()
    content.vb: Function GetComponentName As String
    return:
      type: System.String
      description: "\n<p>The name of the object, or <strong>null</strong> if the object does not have a name.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - type: System.ComponentModel.ICustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
  nameWithType: ICustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for this instance of a component.</p>\n"
  syntax:
    content: TypeConverter GetConverter()
    content.vb: Function GetConverter As TypeConverter
    return:
      type: System.ComponentModel.TypeConverter
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> that is the converter for this object, or <strong>null</strong> if there is no <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> for this object.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  - type: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  nameWithType: ICustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 35
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default event for this instance of a component.</p>\n"
  syntax:
    content: EventDescriptor GetDefaultEvent()
    content.vb: Function GetDefaultEvent As EventDescriptor
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that represents the default event for this object, or <strong>null</strong> if this object does not have events.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 40
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default property for this instance of a component.</p>\n"
  syntax:
    content: PropertyDescriptor GetDefaultProperty()
    content.vb: Function GetDefaultProperty As PropertyDescriptor
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that represents the default property for this object, or <strong>null</strong> if this object does not have properties.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an editor of the specified type for this instance of a component.</p>\n"
  syntax:
    content: object GetEditor(Type editorBaseType)
    content.vb: Function GetEditor(editorBaseType As Type) As Object
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the editor for this object. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> of the specified type that is the editor for this object, or <strong>null</strong> if the editor cannot be found.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - type: System.ComponentModel.ICustomTypeDescriptor.GetConverter
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 50
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the events for this instance of a component.</p>\n"
  syntax:
    content: EventDescriptorCollection GetEvents()
    content.vb: Function GetEvents As EventDescriptorCollection
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the events for this component instance.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  nameWithType: ICustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 56
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the events for this instance of a component using the specified attribute array as a filter.</p>\n"
  syntax:
    content: EventDescriptorCollection GetEvents(Attribute[] attributes)
    content.vb: Function GetEvents(attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that is used as a filter. </p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the filtered events for this component instance.</p>\n"
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.DefaultEventAttribute
    commentId: T:System.ComponentModel.DefaultEventAttribute
  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  fullName.vb: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute())
  name.vb: GetEvents(Attribute())
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  nameWithType.vb: ICustomTypeDescriptor.GetEvents(Attribute())
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the properties for this instance of a component.</p>\n"
  syntax:
    content: PropertyDescriptorCollection GetProperties()
    content.vb: Function GetProperties As PropertyDescriptorCollection
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the properties for this component instance.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  nameWithType: ICustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 66
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the properties for this instance of a component using the attribute array as a filter.</p>\n"
  syntax:
    content: PropertyDescriptorCollection GetProperties(Attribute[] attributes)
    content.vb: Function GetProperties(attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that is used as a filter. </p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the filtered properties for this component instance.</p>\n"
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.DefaultPropertyAttribute
    commentId: T:System.ComponentModel.DefaultPropertyAttribute
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  fullName.vb: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute())
  name.vb: GetProperties(Attribute())
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  nameWithType.vb: ICustomTypeDescriptor.GetProperties(Attribute())
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertyOwner
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 71
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an object that contains the property described by the specified property descriptor.</p>\n"
  syntax:
    content: object GetPropertyOwner(PropertyDescriptor pd)
    content.vb: Function GetPropertyOwner(pd As PropertyDescriptor) As Object
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that represents the property whose owner is to be found. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the owner of the specified property.</p>\n"
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
references:
- uid: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.AttributeCollection
  nameWithType: AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.TypeConverter
  nameWithType: TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptor
  nameWithType: EventDescriptor
  commentId: T:System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptor
  nameWithType: PropertyDescriptor
  commentId: T:System.ComponentModel.PropertyDescriptor
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  commentId: T:System.ComponentModel.EventDescriptorCollection
- uid: System.Attribute[]
  name: "XXX"
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: "XXX"
    fullName: System.Attribute
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Attribute[]
  nameWithType.vb: Attribute()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "XXX"
  fullName: System.ComponentModel.PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  commentId: T:System.ComponentModel.PropertyDescriptorCollection
