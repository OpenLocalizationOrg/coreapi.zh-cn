items:
- uid: System.Threading.Tasks.TaskCompletionSource`1
  commentId: T:System.Threading.Tasks.TaskCompletionSource`1
  id: TaskCompletionSource`1
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  - System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  - System.Threading.Tasks.TaskCompletionSource`1.Task
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TaskCompletionSource
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 49
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Represents the producer side of a <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> unbound to a delegate, providing access to the consumer side through the <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: >-
      [HostProtection(Synchronization = true, ExternalThreading = true)]

      public class TaskCompletionSource<TResult>
    content.vb: >-
      <HostProtection(Synchronization:=True, ExternalThreading:=True)>

      Public Class TaskCompletionSource(Of TResult)
    typeParameters:
    - id: TResult
      description: "\n<p>The type of the result value assocatied with this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)
  name.vb: TaskCompletionSource(Of TResult)
  nameWithType: TaskCompletionSource<TResult>
  nameWithType.vb: TaskCompletionSource(Of TResult)
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 57
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public TaskCompletionSource()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource()
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource()
  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource()
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 88
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref> with the specified state.</p>\n"
  syntax:
    content: public TaskCompletionSource(object state)
    content.vb: Public Sub New(state As Object)
    parameters:
    - id: state
      type: System.Object
      description: "\n<p>The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>'s AsyncState.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Object)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object)
  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(Object)
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Object, System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 105
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref> with the specified state and options.</p>\n"
  syntax:
    content: public TaskCompletionSource(object state, TaskCreationOptions creationOptions)
    content.vb: Public Sub New(state As Object, creationOptions As TaskCreationOptions)
    parameters:
    - id: state
      type: System.Object
      description: "\n<p>The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>'s AsyncState.</p>\n"
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: "\n<p>The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>creationOptions</em> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Object, System.Threading.Tasks.TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object, TaskCreationOptions)
  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(Object, TaskCreationOptions)
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Threading.Tasks.TaskCreationOptions)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 77
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref> with the specified options.</p>\n"
  syntax:
    content: public TaskCompletionSource(TaskCreationOptions creationOptions)
    content.vb: Public Sub New(creationOptions As TaskCreationOptions)
    parameters:
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: "\n<p>The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>creationOptions</em> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Threading.Tasks.TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)
  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(TaskCreationOptions)
- uid: System.Threading.Tasks.TaskCompletionSource`1.Task
  commentId: P:System.Threading.Tasks.TaskCompletionSource`1.Task
  id: Task
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.Task
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Task
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 123
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets the <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Task<TResult> Task { get; }
    content.vb: Public ReadOnly Property Task As Task(Of TResult)
    parameters: []
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: "\n<p>Returns the <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).Task
  nameWithType: TaskCompletionSource<TResult>.Task
  nameWithType.vb: TaskCompletionSource(Of TResult).Task
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  id: SetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetCanceled()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCanceled
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 363
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  syntax:
    content: public void SetCanceled()
    content.vb: Public Sub SetCanceled
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref>, or if the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> has already been disposed.</p>\n"
  seealso:
  - type: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
    commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetCanceled()
  nameWithType: TaskCompletionSource<TResult>.SetCanceled()
  nameWithType.vb: TaskCompletionSource(Of TResult).SetCanceled()
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  id: SetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(System.Collections.Generic.IEnumerable<System.Exception>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetException
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 266
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref> state and binds a collection of exception objects to it.</p>\n"
  syntax:
    content: public void SetException(IEnumerable<Exception> exceptions)
    content.vb: Public Sub SetException(exceptions As IEnumerable(Of Exception))
    parameters:
    - id: exceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: "\n<p>The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> was disposed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>exceptions</em> argument is null.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>There are one or more null elements in <em>exceptions</em>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p></p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetException(System.Collections.Generic.IEnumerable(Of System.Exception))
  name.vb: SetException(IEnumerable(Of Exception))
  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)
  nameWithType.vb: TaskCompletionSource(Of TResult).SetException(IEnumerable(Of Exception))
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  id: SetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetException
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 238
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref> state and binds it to a specified exception.</p>\n"
  syntax:
    content: public void SetException(Exception exception)
    content.vb: Public Sub SetException(exception As Exception)
    parameters:
    - id: exception
      type: System.Exception
      description: "\n<p>The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> was disposed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>exception</em> argument is null.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p></p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetException(System.Exception)
  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)
  nameWithType.vb: TaskCompletionSource(Of TResult).SetException(Exception)
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  id: SetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetResult
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 315
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  syntax:
    content: public void SetResult(TResult result)
    content.vb: Public Sub SetResult(result As TResult)
    parameters:
    - id: result
      type: '{TResult}'
      description: "\n<p>The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> was disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)
  nameWithType.vb: TaskCompletionSource(Of TResult).SetResult(TResult)
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  id: TrySetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TrySetCanceled
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 336
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  syntax:
    content: public bool TrySetCanceled()
    content.vb: Public Function TrySetCanceled As Boolean
    return:
      type: System.Boolean
      description: "\n<p>True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetCanceled()
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()
  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetCanceled()
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  id: TrySetCanceled(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TrySetCanceled
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 342
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\" data-throw-if-not-resolved=\"false\"></xref> state and enables a cancellation token to be stored in the canceled task. </p>\n"
  syntax:
    content: public bool TrySetCanceled(CancellationToken cancellationToken)
    content.vb: Public Function TrySetCanceled(cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>A cancellation token. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the operation is successful; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetCanceled(System.Threading.CancellationToken)
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)
  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetCanceled(CancellationToken)
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  id: TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(System.Collections.Generic.IEnumerable<System.Exception>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TrySetException
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 185
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref> state and binds a collection of exception objects to it. </p>\n"
  syntax:
    content: public bool TrySetException(IEnumerable<Exception> exceptions)
    content.vb: Public Function TrySetException(exceptions As IEnumerable(Of Exception)) As Boolean
    parameters:
    - id: exceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: "\n<p>The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the operation was successful; otherwise, false.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> was disposed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>exceptions</em> argument is null.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>There are one or more null elements in <em>exceptions</em>.</p>\n<p>-or-</p>\n<p>The <em>exceptions</em> collection is empty.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetException(System.Collections.Generic.IEnumerable(Of System.Exception))
  name.vb: TrySetException(IEnumerable(Of Exception))
  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)
  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetException(IEnumerable(Of Exception))
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  id: TrySetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TrySetException
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 156
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\" data-throw-if-not-resolved=\"false\"></xref> state and binds it to a specified exception.</p>\n"
  syntax:
    content: public bool TrySetException(Exception exception)
    content.vb: Public Function TrySetException(exception As Exception) As Boolean
    parameters:
    - id: exception
      type: System.Exception
      description: "\n<p>The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the operation was successful; otherwise, false.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\" data-throw-if-not-resolved=\"false\"></xref> was disposed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>exception</em> argument is null.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetException(System.Exception)
  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)
  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetException(Exception)
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  id: TrySetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetResult(TResult)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TrySetResult
    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs
    startLine: 292
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  syntax:
    content: public bool TrySetResult(TResult result)
    content.vb: Public Function TrySetResult(result As TResult) As Boolean
    parameters:
    - id: result
      type: '{TResult}'
      description: "\n<p>The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the operation was successful; otherwise, false. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)
  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetResult(TResult)
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.TaskCreationOptions
  nameWithType: TaskCreationOptions
  commentId: T:System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task{{TResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: "XXX"
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    fullName: System.Threading.Tasks.Task
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    fullName: System.Threading.Tasks.Task
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  nameWithType: Task<TResult>
  nameWithType.vb: Task(Of TResult)
  commentId: T:System.Threading.Tasks.Task{`0}
- uid: System.Threading.Tasks.Task`1
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    fullName: System.Threading.Tasks.Task
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: "XXX"
    fullName: System.Threading.Tasks.Task
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  nameWithType: Task<TResult>
  nameWithType.vb: Task(Of TResult)
  commentId: T:System.Threading.Tasks.Task`1
- uid: System.Collections.Generic.IEnumerable{System.Exception}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<System.Exception>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Exception)
  name.vb: IEnumerable(Of Exception)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Exception
    name: "XXX"
    fullName: System.Exception
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Exception
    name: "XXX"
    fullName: System.Exception
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<Exception>
  nameWithType.vb: IEnumerable(Of Exception)
  commentId: T:System.Collections.Generic.IEnumerable{System.Exception}
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable`1
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Exception
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: '{TResult}'
  definition: TResult
  name: "XXX"
  fullName: TResult
  nameWithType: TResult
  commentId: '!:TResult'
- uid: TResult
  isExternal: false
  name: "XXX"
  fullName: TResult
  nameWithType: TResult
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading.CancellationToken
  nameWithType: CancellationToken
  commentId: T:System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: "XXX"
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
