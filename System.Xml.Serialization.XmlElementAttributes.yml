items:
- uid: System.Xml.Serialization.XmlElementAttributes
  commentId: T:System.Xml.Serialization.XmlElementAttributes
  id: XmlElementAttributes
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlElementAttributes.#ctor
  - System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)
  - System.Xml.Serialization.XmlElementAttributes.Clear
  - System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)
  - System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)
  - System.Xml.Serialization.XmlElementAttributes.Count
  - System.Xml.Serialization.XmlElementAttributes.GetEnumerator
  - System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)
  - System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)
  - System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)
  - System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)
  - System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)
  - System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlElementAttributes
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 49
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Represents a collection of <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects used by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to override the default way it serializes a class.</p>\n"
  syntax:
    content: 'public class XmlElementAttributes : IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class XmlElementAttributes
          Implements IList, ICollection, IEnumerable
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: XmlElementAttributes
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
- uid: System.Xml.Serialization.XmlElementAttributes.#ctor
  commentId: M:System.Xml.Serialization.XmlElementAttributes.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.XmlElementAttributes()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 136
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public XmlElementAttributes()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.XmlElementAttributes()
- uid: System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)
  commentId: P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 137
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the element at the specified index.</p>\n"
  syntax:
    content: public XmlElementAttribute this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As XmlElementAttribute
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the element to get or set. </p>\n"
    return:
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The element at the specified index.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is not a valid index in the <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The property is set and the <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref> is read-only. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)
  name.vb: Item(Int32)
  nameWithType: XmlElementAttributes.Item[Int32]
  nameWithType.vb: XmlElementAttributes.Item(Int32)
- uid: System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)
  id: Add(System.Xml.Serialization.XmlElementAttribute)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 138
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Adds an <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the collection.</p>\n"
  syntax:
    content: public int Add(XmlElementAttribute attribute)
    content.vb: Public Function Add(attribute As XmlElementAttribute) As Integer
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to add. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The zero-based index of the newly added item.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.Add(XmlElementAttribute)
- uid: System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)
  id: Contains(System.Xml.Serialization.XmlElementAttribute)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 139
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Determines whether the collection contains the specified object.</p>\n"
  syntax:
    content: public bool Contains(XmlElementAttribute attribute)
    content.vb: Public Function Contains(attribute As XmlElementAttribute) As Boolean
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to look for. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object exists in the collection; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.Contains(XmlElementAttribute)
- uid: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)
  id: CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 140
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Copies the <xref href=\"System.Xml.Serialization.XmlElementAttributes\" data-throw-if-not-resolved=\"false\"></xref>, or a portion of it to a one-dimensional array.</p>\n"
  syntax:
    content: public void CopyTo(XmlElementAttribute[] array, int index)
    content.vb: Public Sub CopyTo(array As XmlElementAttribute(), index As Integer)
    parameters:
    - id: array
      type: System.Xml.Serialization.XmlElementAttribute[]
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> array to hold the copied elements. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which copying begins. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute(), System.Int32)
  name.vb: CopyTo(XmlElementAttribute(), Int32)
  nameWithType: XmlElementAttributes.CopyTo(XmlElementAttribute[], Int32)
  nameWithType.vb: XmlElementAttributes.CopyTo(XmlElementAttribute(), Int32)
- uid: System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)
  id: IndexOf(System.Xml.Serialization.XmlElementAttribute)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 141
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the index of the specified <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int IndexOf(XmlElementAttribute attribute)
    content.vb: Public Function IndexOf(attribute As XmlElementAttribute) As Integer
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> whose index is being retrieved.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The zero-based index of the <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.IndexOf(XmlElementAttribute)
- uid: System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)
  id: Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32, System.Xml.Serialization.XmlElementAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 142
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Inserts an <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> into the collection.</p>\n"
  syntax:
    content: public void Insert(int index, XmlElementAttribute attribute)
    content.vb: Public Sub Insert(index As Integer, attribute As XmlElementAttribute)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index where the member is inserted. </p>\n"
    - id: attribute
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to insert. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.Insert(Int32, XmlElementAttribute)
- uid: System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)
  id: Remove(System.Xml.Serialization.XmlElementAttribute)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 143
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Removes the specified object from the collection.</p>\n"
  syntax:
    content: public void Remove(XmlElementAttribute attribute)
    content.vb: Public Sub Remove(attribute As XmlElementAttribute)
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlElementAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to remove from the collection. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.Remove(XmlElementAttribute)
- uid: System.Xml.Serialization.XmlElementAttributes.Count
  commentId: P:System.Xml.Serialization.XmlElementAttributes.Count
  id: Count
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Count
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 51
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: XmlElementAttributes.Count
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 52
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlElementAttributes.ICollection.IsSynchronized
  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.IsSynchronized
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot
  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 53
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
  nameWithType: XmlElementAttributes.ICollection.SyncRoot
  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.SyncRoot
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize
  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsFixedSize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 54
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsFixedSize
  nameWithType: XmlElementAttributes.IList.IsFixedSize
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IsFixedSize
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly
  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsReadOnly
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 55
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  nameWithType: XmlElementAttributes.IList.IsReadOnly
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IsReadOnly
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 56
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: object IList.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  implements:
  - System.Collections.IList.Item(System.Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  nameWithType: XmlElementAttributes.IList.Item[Int32]
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Item(Int32)
- uid: System.Xml.Serialization.XmlElementAttributes.Clear
  commentId: M:System.Xml.Serialization.XmlElementAttributes.Clear
  id: Clear
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.Clear()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 57
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.IList.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.Clear()
- uid: System.Xml.Serialization.XmlElementAttributes.GetEnumerator
  commentId: M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 58
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.GetEnumerator()
- uid: System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 59
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  implements:
  - System.Collections.IList.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlElementAttributes.RemoveAt(Int32)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.CopyTo
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 60
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  nameWithType: XmlElementAttributes.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: XmlElementAttributes.System.Collections.ICollection.CopyTo(Array, Int32)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 61
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: int IList.Add(object value)
    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  nameWithType: XmlElementAttributes.IList.Add(Object)
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Add(Object)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Contains
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 62
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.Contains(object value)
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  nameWithType: XmlElementAttributes.IList.Contains(Object)
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Contains(Object)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IndexOf
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 63
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: int IList.IndexOf(object value)
    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  nameWithType: XmlElementAttributes.IList.IndexOf(Object)
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.IndexOf(Object)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Insert
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 64
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void IList.Insert(int index, object value)
    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  nameWithType: XmlElementAttributes.IList.Insert(Int32, Object)
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Insert(Int32, Object)
- uid: System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlElementAttributes
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttributes.System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Remove
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 65
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void IList.Remove(object value)
    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove
    parameters:
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  nameWithType: XmlElementAttributes.IList.Remove(Object)
  nameWithType.vb: XmlElementAttributes.System.Collections.IList.Remove(Object)
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  nameWithType: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList
  commentId: T:System.Collections.IList
  nameWithType: IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  nameWithType: ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  nameWithType: IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable()
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel()
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  commentId: N:System.Collections
  nameWithType: System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
  nameWithType: Queryable
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
  nameWithType: Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
- uid: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq
  commentId: N:System.Linq
  nameWithType: System.Linq
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Xml.Serialization.XmlElementAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttribute
  commentId: T:System.Xml.Serialization.XmlElementAttribute
  nameWithType: XmlElementAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.Xml.Serialization.XmlElementAttribute[]
  name: "XXX"
  fullName: System.Xml.Serialization.XmlElementAttribute[]
  fullname.vb: System.Xml.Serialization.XmlElementAttribute()
  name.vb: XmlElementAttribute()
  spec.csharp:
  - uid: System.Xml.Serialization.XmlElementAttribute
    name: "XXX"
    fullName: System.Xml.Serialization.XmlElementAttribute
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.Serialization.XmlElementAttribute
    name: "XXX"
    fullName: System.Xml.Serialization.XmlElementAttribute
  - name: "XXX"
    fullName: ()
  nameWithType: XmlElementAttribute[]
  nameWithType.vb: XmlElementAttribute()
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  nameWithType: ICollection.Count
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  nameWithType: ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: "XXX"
  fullName: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  nameWithType: ICollection.SyncRoot
- uid: System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.IList.IsFixedSize
  nameWithType: IList.IsFixedSize
- uid: System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.IList.IsReadOnly
  nameWithType: IList.IsReadOnly
- uid: System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.IList.Item
  - name: 'XXX'
    fullName: '['
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: "XXX"
    fullName: System.Collections.IList.Item
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: P:System.Collections.IList.Item(System.Int32)
  nameWithType: IList.Item[Int32]
  nameWithType.vb: IList.Item(Int32)
- uid: System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: "XXX"
    fullName: System.Collections.IList.Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: "XXX"
    fullName: System.Collections.IList.Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.Clear
  nameWithType: IList.Clear()
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  nameWithType: IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  nameWithType: IEnumerator
- uid: System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.IList.RemoveAt
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: "XXX"
    fullName: System.Collections.IList.RemoveAt
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  nameWithType: IList.RemoveAt(Int32)
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: "XXX"
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ICollection.CopyTo
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: "XXX"
    fullName: System.Collections.ICollection.CopyTo
  - name: "XXX"
    fullName: (
  - uid: System.Array
    name: "XXX"
    fullName: System.Array
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Array
  commentId: T:System.Array
  nameWithType: Array
- uid: System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Add
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.Add(System.Object)
  nameWithType: IList.Add(Object)
- uid: System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Contains
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Contains
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.Contains(System.Object)
  nameWithType: IList.Contains(Object)
- uid: System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.IndexOf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.IndexOf
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.IndexOf(System.Object)
  nameWithType: IList.IndexOf(Object)
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Insert
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Insert
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)
  nameWithType: IList.Insert(Int32, Object)
- uid: System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: "XXX"
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Remove
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: "XXX"
    fullName: System.Collections.IList.Remove
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Collections.IList.Remove(System.Object)
  nameWithType: IList.Remove(Object)
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
