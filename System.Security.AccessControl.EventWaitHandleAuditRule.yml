items:
- uid: System.Security.AccessControl.EventWaitHandleAuditRule
  commentId: T:System.Security.AccessControl.EventWaitHandleAuditRule
  id: EventWaitHandleAuditRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule
  type: Class
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventWaitHandleAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 17
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents a set of access rights to be audited for a user or group. This class cannot be inherited. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public sealed class EventWaitHandleAuditRule : AuditRule
    content.vb: >-
      <SecurityCritical>

      Public NotInheritable Class EventWaitHandleAuditRule
          Inherits AuditRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: EventWaitHandleAuditRule
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleAuditRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 20
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.EventWaitHandleAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</p>\n"
  syntax:
    content: public EventWaitHandleAuditRule(IdentityReference identity, EventWaitHandleRights eventRights, AuditFlags flags)
    content.vb: Public Sub New(identity As IdentityReference, eventRights As EventWaitHandleRights, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "\n<p>The user or group the rule applies to. Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: eventRights
      type: System.Security.AccessControl.EventWaitHandleRights
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.EventWaitHandleRights\" data-throw-if-not-resolved=\"false\"></xref> values specifying the kinds of access to audit.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.AuditFlags\" data-throw-if-not-resolved=\"false\"></xref> values specifying whether to audit success, failure, or both.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>eventRights</em> specifies an invalid value.</p>\n<p>-or-</p>\n<p>\n<em>flags</em> specifies an invalid value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>identity</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>eventRights</em> is zero.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>flags</em> is <xref href=\"System.Security.AccessControl.AuditFlags.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>identity</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  commentId: P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  id: EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventWaitHandleRights
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 21
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the access rights affected by the audit rule.</p>\n"
  syntax:
    content: public EventWaitHandleRights EventWaitHandleRights { get; }
    content.vb: Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights
    parameters: []
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.EventWaitHandleRights\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the rights affected by the audit rule.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl
  commentId: N:System.Security.AccessControl
  nameWithType: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Security.AccessControl.AuthorizationRule
  parent: System.Security.AccessControl
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule
  commentId: T:System.Security.AccessControl.AuthorizationRule
  nameWithType: AuthorizationRule
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuditRule
  commentId: T:System.Security.AccessControl.AuditRule
  nameWithType: AuditRule
- uid: System.Security.AccessControl.AuditRule.AuditFlags
  parent: System.Security.AccessControl.AuditRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuditRule.AuditFlags
  commentId: P:System.Security.AccessControl.AuditRule.AuditFlags
  nameWithType: AuditRule.AuditFlags
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
  commentId: P:System.Security.AccessControl.AuthorizationRule.IdentityReference
  nameWithType: AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
  commentId: P:System.Security.AccessControl.AuthorizationRule.AccessMask
  nameWithType: AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
  commentId: P:System.Security.AccessControl.AuthorizationRule.IsInherited
  nameWithType: AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  commentId: P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  nameWithType: AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  commentId: P:System.Security.AccessControl.AuthorizationRule.PropagationFlags
  nameWithType: AuthorizationRule.PropagationFlags
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal.IdentityReference
  commentId: T:System.Security.Principal.IdentityReference
  nameWithType: IdentityReference
- uid: System.Security.AccessControl.EventWaitHandleRights
  parent: System.Security.AccessControl
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.EventWaitHandleRights
  commentId: T:System.Security.AccessControl.EventWaitHandleRights
  nameWithType: EventWaitHandleRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: "XXX"
  fullName: System.Security.AccessControl.AuditFlags
  commentId: T:System.Security.AccessControl.AuditFlags
  nameWithType: AuditFlags
- uid: System.Security.Principal
  isExternal: false
  name: "XXX"
  fullName: System.Security.Principal
  commentId: N:System.Security.Principal
  nameWithType: System.Security.Principal
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
