items:
- uid: System.Text.EncoderFallbackBuffer
  commentId: T:System.Text.EncoderFallbackBuffer
  id: EncoderFallbackBuffer
  parent: System.Text
  children:
  - System.Text.EncoderFallbackBuffer.#ctor
  - System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderFallbackBuffer.GetNextChar
  - System.Text.EncoderFallbackBuffer.MovePrevious
  - System.Text.EncoderFallbackBuffer.Remaining
  - System.Text.EncoderFallbackBuffer.Reset
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EncoderFallbackBuffer
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 80
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character. </p>\n"
  syntax:
    content: public abstract class EncoderFallbackBuffer
    content.vb: Public MustInherit Class EncoderFallbackBuffer
  seealso:
  - type: System.Text.EncoderFallback
    commentId: T:System.Text.EncoderFallback
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackBuffer.#ctor
  commentId: M:System.Text.EncoderFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.EncoderFallbackBuffer()
  type: Constructor
  source:
    remote:
      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs
    startLine: 94
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.EncoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected EncoderFallbackBuffer()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: EncoderFallbackBuffer.EncoderFallbackBuffer()
- uid: System.Text.EncoderFallbackBuffer.Remaining
  commentId: P:System.Text.EncoderFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.Remaining
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remaining
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 101
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, gets the number of characters in the current <xref href=\"System.Text.EncoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> object that remain to be processed.</p>\n"
  syntax:
    content: public abstract int Remaining { get; }
    content.vb: Public MustOverride ReadOnly Property Remaining As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of characters in the current fallback buffer that have not yet been processed.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: EncoderFallbackBuffer.Remaining
- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  commentId: M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.Fallback(System.Char, System.Char, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Fallback
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 89
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</p>\n"
  syntax:
    content: public abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index)
    content.vb: Public MustOverride Function Fallback(charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "\n<p>The high surrogate of the input pair.</p>\n"
    - id: charUnknownLow
      type: System.Char
      description: "\n<p>The low surrogate of the input pair.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index position of the surrogate pair in the input buffer.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fallback buffer can process <em>charUnknownHigh</em> and <em>charUnknownLow</em>; <strong>false</strong> if the fallback buffer ignores the surrogate pair.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncoderFallbackBuffer.Fallback(Char, Char, Int32)
- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)
  commentId: M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.Fallback(System.Char, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Fallback
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 87
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, prepares the fallback buffer to handle the specified input character. </p>\n"
  syntax:
    content: public abstract bool Fallback(char charUnknown, int index)
    content.vb: Public MustOverride Function Fallback(charUnknown As Char, index As Integer) As Boolean
    parameters:
    - id: charUnknown
      type: System.Char
      description: "\n<p>An input character.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index position of the character in the input buffer.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fallback buffer can process <em>charUnknown</em>; <strong>false</strong> if the fallback buffer ignores <em>charUnknown</em>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncoderFallbackBuffer.Fallback(Char, Int32)
- uid: System.Text.EncoderFallbackBuffer.GetNextChar
  commentId: M:System.Text.EncoderFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.GetNextChar()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetNextChar
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 93
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, retrieves the next character in the fallback buffer.</p>\n"
  syntax:
    content: public abstract char GetNextChar()
    content.vb: Public MustOverride Function GetNextChar As Char
    return:
      type: System.Char
      description: "\n<p>The next character in the fallback buffer.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncoderFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderFallbackBuffer.MovePrevious
  commentId: M:System.Text.EncoderFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.MovePrevious()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MovePrevious
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 97
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>When overridden in a derived class, causes the next call to the <xref href=\"System.Text.EncoderFallbackBuffer.GetNextChar\" data-throw-if-not-resolved=\"false\"></xref> method to access the data buffer character position that is prior to the current character position. </p>\n"
  syntax:
    content: public abstract bool MovePrevious()
    content.vb: Public MustOverride Function MovePrevious As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Text.EncoderFallbackBuffer.MovePrevious\" data-throw-if-not-resolved=\"false\"></xref> operation was successful; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: EncoderFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderFallbackBuffer.Reset
  commentId: M:System.Text.EncoderFallbackBuffer.Reset
  id: Reset
  parent: System.Text.EncoderFallbackBuffer
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Text.EncoderFallbackBuffer.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Text/EncoderFallback.cs
    startLine: 106
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes all data and state information pertaining to this fallback buffer.</p>\n"
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: EncoderFallbackBuffer.Reset()
references:
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
