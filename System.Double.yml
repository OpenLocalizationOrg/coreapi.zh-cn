items:
- uid: System.Double
  commentId: T:System.Double
  id: Double
  parent: System
  children:
  - System.Double.CompareTo(System.Double)
  - System.Double.Epsilon
  - System.Double.Equals(System.Double)
  - System.Double.Equals(System.Object)
  - System.Double.GetHashCode
  - System.Double.IsInfinity(System.Double)
  - System.Double.IsNaN(System.Double)
  - System.Double.IsNegativeInfinity(System.Double)
  - System.Double.IsPositiveInfinity(System.Double)
  - System.Double.MaxValue
  - System.Double.MinValue
  - System.Double.NaN
  - System.Double.NegativeInfinity
  - System.Double.op_Equality(System.Double,System.Double)
  - System.Double.op_GreaterThan(System.Double,System.Double)
  - System.Double.op_GreaterThanOrEqual(System.Double,System.Double)
  - System.Double.op_Inequality(System.Double,System.Double)
  - System.Double.op_LessThan(System.Double,System.Double)
  - System.Double.op_LessThanOrEqual(System.Double,System.Double)
  - System.Double.Parse(System.String)
  - System.Double.Parse(System.String,System.Globalization.NumberStyles)
  - System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Double.Parse(System.String,System.IFormatProvider)
  - System.Double.PositiveInfinity
  - System.Double.System#IComparable#CompareTo(System.Object)
  - System.Double.System#IConvertible#GetTypeCode
  - System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Double.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Double.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Double.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Double.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Double.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Double.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Double.ToString
  - System.Double.ToString(System.IFormatProvider)
  - System.Double.ToString(System.String)
  - System.Double.ToString(System.String,System.IFormatProvider)
  - System.Double.TryParse(System.String,System.Double@)
  - System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Double
    path: src/mscorlib/src/System/Double.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a double-precision floating-point number.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [StructLayout(LayoutKind.Sequential)]

      [ComVisible(true)]

      public struct Double : IComparable, IFormattable, IConvertible, IComparable<double>, IEquatable<double>
    content.vb: >-
      <Serializable>

      <StructLayout(LayoutKind.Sequential)>

      <ComVisible(True)>

      Public Structure Double
          Implements IComparable, IFormattable, IConvertible, IComparable(Of Double), IEquatable(Of Double)
  seealso:
  - type: System.Decimal
    commentId: T:System.Decimal
  - type: System.Single
    commentId: T:System.Single
  implements:
  - System.IComparable
  - System.IComparable{System.Double}
  - System.IConvertible
  - System.IEquatable{System.Double}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Double
- uid: System.Double.CompareTo(System.Double)
  commentId: M:System.Double.CompareTo(System.Double)
  id: CompareTo(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.CompareTo(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/Double.cs
    startLine: 122
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</p>\n"
  syntax:
    content: public int CompareTo(double value)
    content.vb: Public Function CompareTo(value As Double) As Integer
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A double-precision floating-point number to compare. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\n<p>Return Value </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is less than <em>value</em>.</p>\n<p>-or- </p>\n<p>This instance is not a number (<xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>) and <em>value</em> is a number. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is equal to <em>value</em>.</p>\n<p>-or- </p>\n<p>Both this instance and <em>value</em> are not a number (<xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>), <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is greater than <em>value</em>.</p>\n<p>-or- </p>\n<p>This instance is a number and <em>value</em> is not a number (<xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>). </p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.Double.Equals(System.Object)
    commentId: M:System.Double.Equals(System.Object)
  implements:
  - System.IComparable{System.Double}.CompareTo(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Double.CompareTo(Double)
- uid: System.Double.Equals(System.Double)
  commentId: M:System.Double.Equals(System.Double)
  id: Equals(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Equals(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Double.cs
    startLine: 178
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance and a specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> object represent the same value.</p>\n"
  syntax:
    content: public bool Equals(double obj)
    content.vb: Public Function Equals(obj As Double) As Boolean
    parameters:
    - id: obj
      type: System.Double
      description: "\n<p>A <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> object to compare to this instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.Equals(System.Object)
    commentId: M:System.Double.Equals(System.Object)
  - type: System.Double.CompareTo(System.Double)
    commentId: M:System.Double.CompareTo(System.Double)
  implements:
  - System.IEquatable{System.Double}.Equals(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Double.Equals(Double)
- uid: System.Double.Equals(System.Object)
  commentId: M:System.Double.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Double.cs
    startLine: 136
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>An object to compare with this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is an instance of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.Double.CompareTo(System.Object)
    commentId: M:System.Double.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Double.Equals(Object)
- uid: System.Double.GetHashCode
  commentId: M:System.Double.GetHashCode
  id: GetHashCode
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Double.cs
    startLine: 189
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override int GetHashCode()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Double.GetHashCode()
- uid: System.Double.IsInfinity(System.Double)
  commentId: M:System.Double.IsInfinity(System.Double)
  id: IsInfinity(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.IsInfinity(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsInfinity
    path: src/mscorlib/src/System/Double.cs
    startLine: 45
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether the specified number evaluates to negative or positive infinity </p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [NonVersionable]

      public static bool IsInfinity(double d)
    content.vb: >-
      <SecuritySafeCritical>

      <NonVersionable>

      Public Shared Function IsInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: "\n<p>A double-precision floating-point number. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d</em> evaluates to <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.IsPositiveInfinity(System.Double)
    commentId: M:System.Double.IsPositiveInfinity(System.Double)
  - type: System.Double.IsNegativeInfinity(System.Double)
    commentId: M:System.Double.IsNegativeInfinity(System.Double)
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.IsInfinity(Double)
- uid: System.Double.IsNaN(System.Double)
  commentId: M:System.Double.IsNaN(System.Double)
  id: IsNaN(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.IsNaN(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsNaN
    path: src/mscorlib/src/System/Double.cs
    startLine: 86
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether the specified value is not a number (<xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: >-
      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]

      [SecuritySafeCritical]

      [NonVersionable]

      public static bool IsNaN(double d)
    content.vb: >-
      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)>

      <SecuritySafeCritical>

      <NonVersionable>

      Public Shared Function IsNaN(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: "\n<p>A double-precision floating-point number. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d</em> evaluates to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.NaN
    commentId: F:System.Double.NaN
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.IsNaN(Double)
- uid: System.Double.IsNegativeInfinity(System.Double)
  commentId: M:System.Double.IsNegativeInfinity(System.Double)
  id: IsNegativeInfinity(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.IsNegativeInfinity(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsNegativeInfinity
    path: src/mscorlib/src/System/Double.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether the specified number evaluates to negative infinity.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool IsNegativeInfinity(double d)
    content.vb: >-
      <NonVersionable>

      Public Shared Function IsNegativeInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: "\n<p>A double-precision floating-point number. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d</em> evaluates to <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.IsInfinity(System.Double)
    commentId: M:System.Double.IsInfinity(System.Double)
  - type: System.Double.IsPositiveInfinity(System.Double)
    commentId: M:System.Double.IsPositiveInfinity(System.Double)
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.IsNegativeInfinity(Double)
- uid: System.Double.IsPositiveInfinity(System.Double)
  commentId: M:System.Double.IsPositiveInfinity(System.Double)
  id: IsPositiveInfinity(System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.IsPositiveInfinity(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsPositiveInfinity
    path: src/mscorlib/src/System/Double.cs
    startLine: 52
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether the specified number evaluates to positive infinity.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool IsPositiveInfinity(double d)
    content.vb: >-
      <NonVersionable>

      Public Shared Function IsPositiveInfinity(d As Double) As Boolean
    parameters:
    - id: d
      type: System.Double
      description: "\n<p>A double-precision floating-point number. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d</em> evaluates to <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.IsInfinity(System.Double)
    commentId: M:System.Double.IsInfinity(System.Double)
  - type: System.Double.IsNegativeInfinity(System.Double)
    commentId: M:System.Double.IsNegativeInfinity(System.Double)
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.IsPositiveInfinity(Double)
- uid: System.Double.op_Equality(System.Double,System.Double)
  commentId: M:System.Double.op_Equality(System.Double,System.Double)
  id: op_Equality(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Equality(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Double.cs
    startLine: 148
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether two specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> values are equal.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator ==(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator =(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare. </p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Equality(Double, Double)
- uid: System.Double.op_GreaterThan(System.Double,System.Double)
  commentId: M:System.Double.op_GreaterThan(System.Double,System.Double)
  id: op_GreaterThan(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.GreaterThan(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThan
    path: src/mscorlib/src/System/Double.cs
    startLine: 163
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether a specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is greater than another specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator>(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator>(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare.</p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> is greater than <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.GreaterThan(Double, Double)
- uid: System.Double.op_GreaterThanOrEqual(System.Double,System.Double)
  commentId: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)
  id: op_GreaterThanOrEqual(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.GreaterThanOrEqual(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThanOrEqual
    path: src/mscorlib/src/System/Double.cs
    startLine: 173
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether a specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is greater than or equal to another specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator >=(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator >=(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare.</p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> is greater than or equal to <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.GreaterThanOrEqual(Double, Double)
- uid: System.Double.op_Inequality(System.Double,System.Double)
  commentId: M:System.Double.op_Inequality(System.Double,System.Double)
  id: op_Inequality(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Inequality(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Double.cs
    startLine: 153
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether two specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> values are not equal.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator !=(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator <>(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare.</p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> are not equal; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Inequality(Double, Double)
- uid: System.Double.op_LessThan(System.Double,System.Double)
  commentId: M:System.Double.op_LessThan(System.Double,System.Double)
  id: op_LessThan(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.LessThan(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThan
    path: src/mscorlib/src/System/Double.cs
    startLine: 158
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether a specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is less than another specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator <(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator <(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare.</p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> is less than <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.LessThan(Double, Double)
- uid: System.Double.op_LessThanOrEqual(System.Double,System.Double)
  commentId: M:System.Double.op_LessThanOrEqual(System.Double,System.Double)
  id: op_LessThanOrEqual(System.Double,System.Double)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.LessThanOrEqual(System.Double, System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThanOrEqual
    path: src/mscorlib/src/System/Double.cs
    startLine: 168
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether a specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is less than or equal to another specified <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: >-
      [NonVersionable]

      public static bool operator <=(double left, double right)
    content.vb: >-
      <NonVersionable>

      Public Shared Operator <=(left As Double, right As Double) As Boolean
    parameters:
    - id: left
      type: System.Double
      description: "\n<p>The first value to compare.</p>\n"
    - id: right
      type: System.Double
      description: "\n<p>The second value to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> is less than or equal to <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.LessThanOrEqual(Double, Double)
- uid: System.Double.Parse(System.String)
  commentId: M:System.Double.Parse(System.String)
  id: Parse(System.String)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Double.cs
    startLine: 224
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its double-precision floating-point number equivalent.</p>\n"
  syntax:
    content: public static double Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not represent a number in a valid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  - type: System.Double.TryParse(System.String,System.Double@)
    commentId: M:System.Double.TryParse(System.String,System.Double@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Parse(String)
- uid: System.Double.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Double.cs
    startLine: 228
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</p>\n"
  syntax:
    content: public static double Parse(string s, NumberStyles style)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicate the style elements that can be present in <em>s</em>. A typical value to specify is a combination of <xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref> combined with <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not represent a number in a valid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  seealso:
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  - type: System.Double.TryParse(System.String,System.Double@)
    commentId: M:System.Double.TryParse(System.String,System.Double@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Parse(String, NumberStyles)
- uid: System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Double.cs
    startLine: 237
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</p>\n"
  syntax:
    content: public static double Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicate the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref> combined with <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not represent a numeric value. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Parse(String, NumberStyles, IFormatProvider)
- uid: System.Double.Parse(System.String,System.IFormatProvider)
  commentId: M:System.Double.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Double.cs
    startLine: 233
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</p>\n"
  syntax:
    content: public static double Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not represent a number in a valid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  - type: System.Double.TryParse(System.String,System.Double@)
    commentId: M:System.Double.TryParse(System.String,System.Double@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Double.Parse(String, IFormatProvider)
- uid: System.Double.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Double.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 764
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  nameWithType: Double.IComparable.CompareTo(Object)
  nameWithType.vb: Double.System.IComparable.CompareTo(Object)
- uid: System.Double.System#IConvertible#GetTypeCode
  commentId: M:System.Double.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 765
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
  nameWithType: Double.IConvertible.GetTypeCode()
  nameWithType.vb: Double.System.IConvertible.GetTypeCode()
- uid: System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/Double.cs
    startLine: 292
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
  nameWithType: Double.IConvertible.ToBoolean(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Double.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/Double.cs
    startLine: 307
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Byte
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
  nameWithType: Double.IConvertible.ToByte(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToByte(IFormatProvider)
- uid: System.Double.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/Double.cs
    startLine: 297
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Char
      description: "\n<p>This conversion is not supported. No value is returned.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
  nameWithType: Double.IConvertible.ToChar(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToChar(IFormatProvider)
- uid: System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/Double.cs
    startLine: 357
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>This conversion is not supported. No value is returned.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
  nameWithType: Double.IConvertible.ToDateTime(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/Double.cs
    startLine: 352
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
  nameWithType: Double.IConvertible.ToDecimal(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Double.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/Double.cs
    startLine: 347
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Double
      description: "\n<p>The value of the current instance, unchanged.</p>\n"
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
  nameWithType: Double.IConvertible.ToDouble(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Double.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/Double.cs
    startLine: 312
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int16
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
  nameWithType: Double.IConvertible.ToInt16(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Double.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/Double.cs
    startLine: 322
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
  nameWithType: Double.IConvertible.ToInt32(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Double.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/Double.cs
    startLine: 332
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
  nameWithType: Double.IConvertible.ToInt64(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Double.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/Double.cs
    startLine: 302
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.SByte
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
  nameWithType: Double.IConvertible.ToSByte(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Double.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/Double.cs
    startLine: 342
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Single
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
  nameWithType: Double.IConvertible.ToSingle(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/Double.cs
    startLine: 362
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type to which to convert this <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that supplies culture-specific information about the format of the returned value.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the current instance, converted to <em>type</em>.</p>\n"
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
  nameWithType: Double.IConvertible.ToType(Type, IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/Double.cs
    startLine: 317
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored. </p>\n"
    return:
      type: System.UInt16
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
  nameWithType: Double.IConvertible.ToUInt16(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/Double.cs
    startLine: 327
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.   </p>\n"
    return:
      type: System.UInt32
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
  nameWithType: Double.IConvertible.ToUInt32(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/Double.cs
    startLine: 337
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
  nameWithType: Double.IConvertible.ToUInt64(IFormatProvider)
  nameWithType.vb: Double.System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Double.ToString
  commentId: M:System.Double.ToString
  id: ToString
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Double.cs
    startLine: 200
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance.</p>\n"
  overridden: System.ValueType.ToString
  seealso:
  - type: System.Double.Parse(System.String)
    commentId: M:System.Double.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Double.ToString()
- uid: System.Double.ToString(System.IFormatProvider)
  commentId: M:System.Double.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Double.cs
    startLine: 212
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\n"
  seealso:
  - type: System.Double.Parse(System.String)
    commentId: M:System.Double.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Double.ToString(IFormatProvider)
- uid: System.Double.ToString(System.String)
  commentId: M:System.Double.ToString(System.String)
  id: ToString(System.String)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Double.cs
    startLine: 206
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A numeric format string.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is invalid. </p>\n"
  seealso:
  - type: System.Double.Parse(System.String)
    commentId: M:System.Double.Parse(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Double.ToString(String)
- uid: System.Double.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Double.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Double.cs
    startLine: 218
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format, IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A numeric format string.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\n"
  seealso:
  - type: System.Double.Parse(System.String)
    commentId: M:System.Double.Parse(System.String)
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Double.ToString(String, IFormatProvider)
- uid: System.Double.TryParse(System.String,System.Double@)
  commentId: M:System.Double.TryParse(System.String,System.Double@)
  id: TryParse(System.String,System.Double@)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.TryParse(System.String, out System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Double.cs
    startLine: 254
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  syntax:
    content: public static bool TryParse(string s, out double result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Double) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a number to convert. </p>\n"
    - id: result
      type: System.Double
      description: "\n<p>When this method returns, contains the double-precision floating-point number equivalent of the <em>s</em> parameter, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, is not a number in a valid format, or represents a number less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Double.Parse(System.String)
    commentId: M:System.Double.Parse(System.String)
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Double.TryParse(System.String, ByRef System.Double)
  name.vb: TryParse(String, ByRef Double)
  nameWithType: Double.TryParse(String, out Double)
  nameWithType.vb: Double.TryParse(String, ByRef Double)
- uid: System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  commentId: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Double.cs
    startLine: 258
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  syntax:
    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out double result)
    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a number to convert. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref> combined with <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    - id: result
      type: System.Double
      description: "\n<p>When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, is not in a format compliant with <em>style</em>, represents a number less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, or if <em>style</em> is not a valid combination of <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumerated constants. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  seealso:
  - type: System.Double.ToString
    commentId: M:System.Double.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Double.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Double)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Double)
  nameWithType: Double.TryParse(String, NumberStyles, IFormatProvider, out Double)
  nameWithType.vb: Double.TryParse(String, NumberStyles, IFormatProvider, ByRef Double)
- uid: System.Double.MinValue
  commentId: F:System.Double.MinValue
  id: MinValue
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/Double.cs
    startLine: 33
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  syntax:
    content: public const double MinValue = -1.7976931348623157E+308
    content.vb: Public Const MinValue As Double = -1.7976931348623157E+308
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.MinValue
- uid: System.Double.MaxValue
  commentId: F:System.Double.MaxValue
  id: MaxValue
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/Double.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  syntax:
    content: public const double MaxValue = 1.7976931348623157E+308
    content.vb: Public Const MaxValue As Double = 1.7976931348623157E+308
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.MaxValue
- uid: System.Double.Epsilon
  commentId: F:System.Double.Epsilon
  id: Epsilon
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.Epsilon
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Epsilon
    path: src/mscorlib/src/System/Double.cs
    startLine: 38
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest positive <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value that is greater than zero. This field is constant.</p>\n"
  syntax:
    content: public const double Epsilon = 4.94065645841247E-324
    content.vb: Public Const Epsilon As Double = 4.94065645841247E-324
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.Epsilon
- uid: System.Double.NegativeInfinity
  commentId: F:System.Double.NegativeInfinity
  id: NegativeInfinity
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.NegativeInfinity
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NegativeInfinity
    path: src/mscorlib/src/System/Double.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents negative infinity. This field is constant.</p>\n"
  syntax:
    content: public const double NegativeInfinity = -Infinity
    content.vb: Public Const NegativeInfinity As Double = -Infinity
    return:
      type: System.Double
  seealso:
  - type: System.Double.IsNegativeInfinity(System.Double)
    commentId: M:System.Double.IsNegativeInfinity(System.Double)
  - type: System.Double.IsInfinity(System.Double)
    commentId: M:System.Double.IsInfinity(System.Double)
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.NegativeInfinity
- uid: System.Double.PositiveInfinity
  commentId: F:System.Double.PositiveInfinity
  id: PositiveInfinity
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.PositiveInfinity
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PositiveInfinity
    path: src/mscorlib/src/System/Double.cs
    startLine: 40
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents positive infinity. This field is constant.</p>\n"
  syntax:
    content: public const double PositiveInfinity = Infinity
    content.vb: Public Const PositiveInfinity As Double = Infinity
    return:
      type: System.Double
  seealso:
  - type: System.Double.IsPositiveInfinity(System.Double)
    commentId: M:System.Double.IsPositiveInfinity(System.Double)
  - type: System.Double.IsInfinity(System.Double)
    commentId: M:System.Double.IsInfinity(System.Double)
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.PositiveInfinity
- uid: System.Double.NaN
  commentId: F:System.Double.NaN
  id: NaN
  parent: System.Double
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Double.NaN
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Double.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NaN
    path: src/mscorlib/src/System/Double.cs
    startLine: 41
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a value that is not a number (<strong>NaN</strong>). This field is constant.</p>\n"
  syntax:
    content: public const double NaN = NaN
    content.vb: Public Const NaN As Double = NaN
    return:
      type: System.Double
  seealso:
  - type: System.Double.IsNaN(System.Double)
    commentId: M:System.Double.IsNaN(System.Double)
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: Double.NaN
references:
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IComparable
  nameWithType: IComparable
  commentId: T:System.IComparable
- uid: System.IComparable{System.Double}
  parent: System
  definition: System.IComparable`1
  name: "XXX"
  fullName: System.IComparable<System.Double>
  fullname.vb: System.IComparable(Of System.Double)
  name.vb: IComparable(Of Double)
  spec.csharp:
  - uid: System.IComparable`1
    name: "XXX"
    fullName: System.IComparable
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: "XXX"
    fullName: System.IComparable
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IComparable<Double>
  nameWithType.vb: IComparable(Of Double)
  commentId: T:System.IComparable{System.Double}
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible
  nameWithType: IConvertible
  commentId: T:System.IConvertible
- uid: System.IEquatable{System.Double}
  parent: System
  definition: System.IEquatable`1
  name: "XXX"
  fullName: System.IEquatable<System.Double>
  fullname.vb: System.IEquatable(Of System.Double)
  name.vb: IEquatable(Of Double)
  spec.csharp:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<Double>
  nameWithType.vb: IEquatable(Of Double)
  commentId: T:System.IEquatable{System.Double}
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IFormattable
  nameWithType: IFormattable
  commentId: T:System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.IComparable`1
  isExternal: false
  name: "XXX"
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: "XXX"
    fullName: System.IComparable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: "XXX"
    fullName: System.IComparable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IComparable<T>
  nameWithType.vb: IComparable(Of T)
  commentId: T:System.IComparable`1
- uid: System.IEquatable`1
  isExternal: false
  name: "XXX"
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: "XXX"
    fullName: System.IEquatable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  commentId: T:System.IEquatable`1
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IComparable{System.Double}.CompareTo(System.Double)
  parent: System.IComparable{System.Double}
  definition: System.IComparable`1.CompareTo(`0)
  name: "XXX"
  fullName: System.IComparable<System.Double>.CompareTo(System.Double)
  fullname.vb: System.IComparable(Of System.Double).CompareTo(System.Double)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: "XXX"
    fullName: System.IComparable<System.Double>.CompareTo
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: "XXX"
    fullName: System.IComparable(Of System.Double).CompareTo
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IComparable<Double>.CompareTo(Double)
  nameWithType.vb: IComparable(Of Double).CompareTo(Double)
  commentId: M:System.IComparable{System.Double}.CompareTo(System.Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: "XXX"
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: "XXX"
    fullName: System.IComparable<T>.CompareTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: "XXX"
    fullName: System.IComparable(Of T).CompareTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  commentId: M:System.IComparable`1.CompareTo(`0)
- uid: System.IEquatable{System.Double}.Equals(System.Double)
  parent: System.IEquatable{System.Double}
  definition: System.IEquatable`1.Equals(`0)
  name: "XXX"
  fullName: System.IEquatable<System.Double>.Equals(System.Double)
  fullname.vb: System.IEquatable(Of System.Double).Equals(System.Double)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable<System.Double>.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable(Of System.Double).Equals
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<Double>.Equals(Double)
  nameWithType.vb: IEquatable(Of Double).Equals(Double)
  commentId: M:System.IEquatable{System.Double}.Equals(System.Double)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  isExternal: false
  name: "XXX"
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable<T>.Equals
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: "XXX"
    fullName: System.IEquatable(Of T).Equals
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  commentId: M:System.IEquatable`1.Equals(`0)
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: "XXX"
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: "XXX"
    fullName: System.ValueType.Equals
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: "XXX"
    fullName: System.ValueType.GetHashCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: "XXX"
  fullName: System.Globalization.NumberStyles
  nameWithType: NumberStyles
  commentId: T:System.Globalization.NumberStyles
- uid: System.Globalization
  isExternal: false
  name: "XXX"
  fullName: System.Globalization
  nameWithType: System.Globalization
  commentId: N:System.Globalization
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: "XXX"
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: "XXX"
    fullName: System.IComparable.CompareTo
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: "XXX"
    fullName: System.IComparable.CompareTo
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: IComparable.CompareTo(Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: "XXX"
    fullName: System.IConvertible.GetTypeCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: "XXX"
    fullName: System.IConvertible.GetTypeCode
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.GetTypeCode()
  commentId: M:System.IConvertible.GetTypeCode
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.TypeCode
  nameWithType: TypeCode
  commentId: T:System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToBoolean
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToBoolean
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToBoolean(IFormatProvider)
  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToByte
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToByte
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToByte(IFormatProvider)
  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)
- uid: System.Byte
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToChar
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToChar
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToChar(IFormatProvider)
  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDateTime
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDateTime
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToDateTime(IFormatProvider)
  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDecimal
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDecimal
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToDecimal(IFormatProvider)
  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Decimal
  nameWithType: Decimal
  commentId: T:System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDouble
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToDouble
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToDouble(IFormatProvider)
  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt16
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt16
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToInt16(IFormatProvider)
  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)
- uid: System.Int16
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int16
  nameWithType: Int16
  commentId: T:System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt32
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt32
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToInt32(IFormatProvider)
  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt64
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToInt64
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToInt64(IFormatProvider)
  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)
- uid: System.Int64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToSByte
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToSByte
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToSByte(IFormatProvider)
  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)
- uid: System.SByte
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.SByte
  nameWithType: SByte
  commentId: T:System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToSingle
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToSingle
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToSingle(IFormatProvider)
  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)
- uid: System.Single
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Single
  nameWithType: Single
  commentId: T:System.Single
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: 'XXX '
    fullName: ', '
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToType
  - name: "XXX"
    fullName: (
  - uid: System.Type
    name: "XXX"
    fullName: System.Type
  - name: 'XXX '
    fullName: ', '
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToType(Type, IFormatProvider)
  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)
- uid: System.Type
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt16
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt16
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToUInt16(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt16
  nameWithType: UInt16
  commentId: T:System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt32
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt32
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToUInt32(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt32
  nameWithType: UInt32
  commentId: T:System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt64
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToUInt64
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToUInt64(IFormatProvider)
  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.UInt64
  nameWithType: UInt64
  commentId: T:System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: "XXX"
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: "XXX"
    fullName: System.ValueType.ToString
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: "XXX"
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToString
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: "XXX"
    fullName: System.IConvertible.ToString
  - name: "XXX"
    fullName: (
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IConvertible.ToString(IFormatProvider)
  commentId: M:System.IConvertible.ToString(System.IFormatProvider)
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: "XXX"
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: "XXX"
    fullName: System.IFormattable.ToString
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: "XXX"
    fullName: System.IFormattable.ToString
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.IFormatProvider
    name: "XXX"
    fullName: System.IFormatProvider
  - name: "XXX"
    fullName: )
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.FormatException
  nameWithType: FormatException
  commentId: T:System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: "XXX"
  fullName: System.OverflowException
  nameWithType: OverflowException
  commentId: T:System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: "XXX"
  fullName: System.InvalidCastException
  nameWithType: InvalidCastException
  commentId: T:System.InvalidCastException
