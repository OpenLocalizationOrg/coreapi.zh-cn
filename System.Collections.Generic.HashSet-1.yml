items:
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  id: HashSet`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.HashSet`1.#ctor
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.HashSet`1.Add(`0)
  - System.Collections.Generic.HashSet`1.Clear
  - System.Collections.Generic.HashSet`1.Comparer
  - System.Collections.Generic.HashSet`1.Contains(`0)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[])
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  - System.Collections.Generic.HashSet`1.Count
  - System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.GetEnumerator
  - System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.Remove(`0)
  - System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  - System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.HashSet`1.TrimExcess
  - System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>
  type: Class
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashSet
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 51
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Represents a set of values.</p>\n"
  syntax:
    content: >-
      [DebuggerTypeProxy(typeof (ICollectionDebugView<>))]

      [DebuggerDisplay("Count = {Count}")]

      [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification = "By design")]

      public class HashSet<T> : ISet<T>, ICollection<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable
    content.vb: >-
      <DebuggerTypeProxy(GetType(ICollectionDebugView(Of )))>

      <DebuggerDisplay("Count = {Count}")>

      <SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification:="By design")>

      Public Class HashSet(Of T)
          Implements ISet(Of T), ICollection(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
      description: "\n<p>The type of elements in the hash set.</p>\n"
  seealso:
  - type: System.Collections.Generic.SortedSet`1
    commentId: T:System.Collections.Generic.SortedSet`1
  - type: System.Collections.Generic.ISet`1
    commentId: T:System.Collections.Generic.ISet`1
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.Generic.ISet{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  nameWithType: HashSet<T>
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})
  nameWithType.vb: HashSet(Of T)
- uid: System.Collections.Generic.HashSet`1.#ctor
  commentId: M:System.Collections.Generic.HashSet`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.HashSet()
  type: Constructor
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 77
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> class that is empty and uses the default equality comparer for the set type.</p>\n"
  syntax:
    content: public HashSet()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet()
  nameWithType: HashSet<T>.HashSet()
  nameWithType.vb: HashSet(Of T).HashSet()
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 95
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</p>\n"
  syntax:
    content: public HashSet(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection whose elements are copied to the new set.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>collection</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEnumerable(Of T))
  name.vb: HashSet(IEnumerable(Of T))
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).HashSet(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  type: Constructor
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 106
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</p>\n"
  syntax:
    content: public HashSet(IEnumerable<T> collection, IEqualityComparer<T> comparer)
    content.vb: Public Sub New(collection As IEnumerable(Of T), comparer As IEqualityComparer(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection whose elements are copied to the new set.</p>\n"
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: "\n<p>The <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> implementation to use when comparing values in the set, or <strong>null</strong> to use the default <xref href=\"System.Collections.Generic.EqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> implementation for the set type.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>collection</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: HashSet(IEnumerable(Of T), IEqualityComparer(Of T))
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: HashSet(Of T).HashSet(IEnumerable(Of T), IEqualityComparer(Of T))
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEqualityComparer<T>)
  type: Constructor
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 81
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> class that is empty and uses the specified equality comparer for the set type.</p>\n"
  syntax:
    content: public HashSet(IEqualityComparer<T> comparer)
    content.vb: Public Sub New(comparer As IEqualityComparer(Of T))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: "\n<p>The <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> implementation to use when comparing values in the set, or <strong>null</strong> to use the default <xref href=\"System.Collections.Generic.EqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> implementation for the set type.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).HashSet(System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: HashSet(IEqualityComparer(Of T))
  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)
  nameWithType.vb: HashSet(Of T).HashSet(IEqualityComparer(Of T))
- uid: System.Collections.Generic.HashSet`1.Comparer
  commentId: P:System.Collections.Generic.HashSet`1.Comparer
  id: Comparer
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Comparer
  type: Property
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Comparer
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 901
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Gets the <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> object that is used to determine equality for the values in the set.</p>\n"
  syntax:
    content: public IEqualityComparer<T> Comparer { get; }
    content.vb: Public ReadOnly Property Comparer As IEqualityComparer(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: "\n<p>The <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> object that is used to determine equality for the values in the set.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.HashSet(Of T).Comparer
  nameWithType: HashSet<T>.Comparer
  nameWithType.vb: HashSet(Of T).Comparer
- uid: System.Collections.Generic.HashSet`1.Count
  commentId: P:System.Collections.Generic.HashSet`1.Count
  id: Count
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Count
  type: Property
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 303
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Gets the number of elements that are contained in a set.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of elements that are contained in the set.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.HashSet(Of T).Count
  nameWithType: HashSet<T>.Count
  nameWithType.vb: HashSet(Of T).Count
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<T>.IsReadOnly
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 311
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Gets a value indicating whether a collection is read-only.</p>\n"
  syntax:
    content: bool ICollection<T>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<T>.IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the collection is read-only; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: HashSet<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 345
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Adds the specified element to a set.</p>\n"
  syntax:
    content: public bool Add(T item)
    content.vb: Public Function Add(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: "\n<p>The element to add to the set.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the element is added to the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object; <strong>false</strong> if the element is already present.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).Add(T)
  nameWithType: HashSet<T>.Add(T)
  nameWithType.vb: HashSet(Of T).Add(T)
- uid: System.Collections.Generic.HashSet`1.Clear
  commentId: M:System.Collections.Generic.HashSet`1.Clear
  id: Clear
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 201
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Removes all elements from a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).Clear()
  nameWithType: HashSet<T>.Clear()
  nameWithType.vb: HashSet(Of T).Clear()
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 223
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object contains the specified element.</p>\n"
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: "\n<p>The element to locate in the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object contains the specified element; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).Contains(T)
  nameWithType: HashSet<T>.Contains(T)
  nameWithType.vb: HashSet(Of T).Contains(T)
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 823
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Copies the elements of a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to an array.</p>\n"
  syntax:
    content: public void CopyTo(T[] array)
    content.vb: Public Sub CopyTo(array As T())
    parameters:
    - id: array
      type: '{T}[]'
      description: "\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object. The array must have zero-based indexing.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  nameWithType: HashSet<T>.CopyTo(T[])
  nameWithType.vb: HashSet(Of T).CopyTo(T())
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 246
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Copies the elements of a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to an array, starting at the specified array index.</p>\n"
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: "\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object. The array must have zero-based indexing.</p>\n"
    - id: arrayIndex
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>arrayIndex</em> is less than 0.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  nameWithType: HashSet<T>.CopyTo(T[], Int32)
  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32)
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  id: CopyTo(`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 825
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Copies the specified number of elements of a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to an array, starting at the specified array index.</p>\n"
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex, int count)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer, count As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: "\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object. The array must have zero-based indexing.</p>\n"
    - id: arrayIndex
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of elements to copy to <em>array</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>arrayIndex</em> is less than 0.</p>\n<p>-or-</p>\n<p>\n<em>count</em> is less than 0.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>arrayIndex</em> is greater than the length of the destination <em>array</em>.</p>\n<p>-or-</p>\n<p>\n<em>count</em> is greater than the available space from the <em>index</em> to the end of the destination <em>array</em>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32, System.Int32)
  name.vb: CopyTo(T(), Int32, Int32)
  nameWithType: HashSet<T>.CopyTo(T[], Int32, Int32)
  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32, Int32)
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExceptWith
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 434
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Removes all elements in the specified collection from the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void ExceptWith(IEnumerable<T> other)
    content.vb: Public Sub ExceptWith(other As IEnumerable(Of T))
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection of items to remove from the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).ExceptWith(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 320
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Returns an enumerator that iterates through a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public HashSet<T>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As HashSet(Of T).Enumerator
    return:
      type: System.Collections.Generic.HashSet`1.Enumerator
      description: "\n<p>A <xref href=\"System.Collections.Generic.HashSet`1.Enumerator\" data-throw-if-not-resolved=\"false\"></xref> object for the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).GetEnumerator()
  nameWithType: HashSet<T>.GetEnumerator()
  nameWithType.vb: HashSet(Of T).GetEnumerator()
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  id: IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IntersectWith
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 386
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Modifies the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to contain only elements that are present in that object and in the specified collection.</p>\n"
  syntax:
    content: public void IntersectWith(IEnumerable<T> other)
    content.vb: Public Sub IntersectWith(other As IEnumerable(Of T))
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IntersectWith(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsProperSubsetOf
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 575
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a proper subset of the specified collection.</p>\n"
  syntax:
    content: public bool IsProperSubsetOf(IEnumerable<T> other)
    content.vb: Public Function IsProperSubsetOf(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a proper subset of <em>other</em>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsProperSupersetOf
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 692
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a proper superset of the specified collection.</p>\n"
  syntax:
    content: public bool IsProperSupersetOf(IEnumerable<T> other)
    content.vb: Public Function IsProperSupersetOf(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a proper superset of <em>other</em>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSubsetOf
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 518
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a subset of the specified collection.</p>\n"
  syntax:
    content: public bool IsSubsetOf(IEnumerable<T> other)
    content.vb: Public Function IsSubsetOf(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a subset of <em>other</em>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsSubsetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSupersetOf
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 634
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a superset of the specified collection.</p>\n"
  syntax:
    content: public bool IsSupersetOf(IEnumerable<T> other)
    content.vb: Public Function IsSupersetOf(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is a superset of <em>other</em>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsSupersetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  id: Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Overlaps
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 743
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object and a specified collection share common elements.</p>\n"
  syntax:
    content: public bool Overlaps(IEnumerable<T> other)
    content.vb: Public Function Overlaps(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object and <em>other</em> share at least one common element; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).Overlaps(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 256
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Removes the specified element from a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool Remove(T item)
    content.vb: Public Function Remove(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: "\n<p>The element to remove.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the element is successfully found and removed; otherwise, <strong>false</strong>.  This method returns <strong>false</strong> if <em>item</em> is not found in the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).Remove(T)
  nameWithType: HashSet<T>.Remove(T)
  nameWithType.vb: HashSet(Of T).Remove(T)
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  commentId: M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  id: RemoveWhere(System.Predicate{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveWhere
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 869
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Removes all elements that match the conditions defined by the specified predicate from a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: public int RemoveWhere(Predicate<T> match)
    content.vb: Public Function RemoveWhere(match As Predicate(Of T)) As Integer
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: "\n<p>The <xref href=\"System.Predicate`1\" data-throw-if-not-resolved=\"false\"></xref> delegate that defines the conditions of the elements to remove.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of elements that were removed from the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>match</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).RemoveWhere(System.Predicate(Of T))
  name.vb: RemoveWhere(Predicate(Of T))
  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)
  nameWithType.vb: HashSet(Of T).RemoveWhere(Predicate(Of T))
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  id: SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetEquals
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 778
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object and the specified collection contain the same elements.</p>\n"
  syntax:
    content: public bool SetEquals(IEnumerable<T> other)
    content.vb: Public Function SetEquals(other As IEnumerable(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object is equal to <em>other</em>; otherwise, false.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).SetEquals(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SymmetricExceptWith
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 466
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Modifies the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to contain only elements that are present either in that object or in the specified collection, but not both.</p>\n"
  syntax:
    content: public void SymmetricExceptWith(IEnumerable<T> other)
    content.vb: Public Sub SymmetricExceptWith(other As IEnumerable(Of T))
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<T>.Add
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 192
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Adds an item to an <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void ICollection<T>.Add(T item)
    content.vb: Sub System.Collections.Generic.ICollection<T>.Add(item As T) Implements ICollection(Of T).Add
    parameters:
    - id: item
      type: '{T}'
      description: "\n<p>The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref> is read-only.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: HashSet<T>.ICollection<T>.Add(T)
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 325
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Returns an enumerator that iterates through a collection.</p>\n"
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerator`1\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.</p>\n"
  seealso:
  - type: System.Collections.Generic.IEnumerator`1
    commentId: T:System.Collections.Generic.IEnumerator`1
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType: HashSet<T>.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 330
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Returns an enumerator that iterates through a collection.</p>\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.</p>\n"
  seealso:
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HashSet<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  commentId: M:System.Collections.Generic.HashSet`1.TrimExcess
  id: TrimExcess
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TrimExcess
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 920
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Sets the capacity of a <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</p>\n"
  syntax:
    content: public void TrimExcess()
    content.vb: Public Sub TrimExcess
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).TrimExcess()
  nameWithType: HashSet<T>.TrimExcess()
  nameWithType.vb: HashSet(Of T).TrimExcess()
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  id: UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Collections.Generic.HashSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnionWith
    path: src/System.Collections/src/System/Collections/Generic/HashSet.cs
    startLine: 358
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Modifies the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object to contain all elements that are present in itself, the specified collection, or both.</p>\n"
  syntax:
    content: public void UnionWith(IEnumerable<T> other)
    content.vb: Public Sub UnionWith(other As IEnumerable(Of T))
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "\n<p>The collection to compare to the current <xref href=\"System.Collections.Generic.HashSet`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>other</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.HashSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).UnionWith(IEnumerable(Of T))
references:
- uid: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.Generic.ICollection{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection{`0}
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable{`0}
- uid: System.Collections.Generic.ISet{{T}}
  definition: System.Collections.Generic.ISet`1
  name: "XXX"
  fullName: System.Collections.Generic.ISet<T>
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: "XXX"
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: "XXX"
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ISet<T>
  nameWithType.vb: ISet(Of T)
  commentId: '!:System.Collections.Generic.ISet{`0}'
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable
  nameWithType: IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable()
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<T>()
  fullname.vb: System.Linq.Queryable.AsQueryable(Of T)()
  name.vb: AsQueryable(Of T)()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable<T>()
  nameWithType.vb: Queryable.AsQueryable(Of T)()
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<T>()
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of T)()
  name.vb: AsParallel(Of T)()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<T>()
  nameWithType.vb: ParallelEnumerable.AsParallel(Of T)()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<T>(System.Func<T, T, T>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of T)(System.Func(Of T, T, T))
  name.vb: Aggregate(Of T)(Func(Of T, T, T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<T>(Func<T, T, T>)
  nameWithType.vb: Enumerable.Aggregate(Of T)(Func(Of T, T, T))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate))
  name.vb: Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.All<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of T)(System.Func(Of T, System.Boolean))
  name.vb: All(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.All<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.All(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<T>()
  fullname.vb: System.Linq.Enumerable.Any(Of T)()
  name.vb: Any(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<T>()
  nameWithType.vb: Enumerable.Any(Of T)()
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of T)(System.Func(Of T, System.Boolean))
  name.vb: Any(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.Any(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<T>()
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of T)()
  name.vb: AsEnumerable(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.AsEnumerable<T>()
  nameWithType.vb: Enumerable.AsEnumerable(Of T)()
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Decimal))
  name.vb: Average(Of T)(Func(Of T, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Decimal>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Double))
  name.vb: Average(Of T)(Func(Of T, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Double>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int32))
  name.vb: Average(Of T)(Func(Of T, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Int32>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int64))
  name.vb: Average(Of T)(Func(Of T, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Int64>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of T)(Func(Of T, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))
  name.vb: Average(Of T)(Func(Of T, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))
  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))
  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))
  name.vb: Average(Of T)(Func(Of T, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Single))
  name.vb: Average(Of T)(Func(Of T, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<T>(Func<T, Single>)
  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<T>(System.Collections.Generic.IEnumerable<T>)
  fullname.vb: System.Linq.Enumerable.Concat(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Concat(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Concat<T>(IEnumerable<T>)
  nameWithType.vb: Enumerable.Concat(Of T)(IEnumerable(Of T))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<T>(T)
  fullname.vb: System.Linq.Enumerable.Append(Of T)(T)
  name.vb: Append(Of T)(T)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Append<T>(T)
  nameWithType.vb: Enumerable.Append(Of T)(T)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<T>(T)
  fullname.vb: System.Linq.Enumerable.Prepend(Of T)(T)
  name.vb: Prepend(Of T)(T)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Prepend<T>(T)
  nameWithType.vb: Enumerable.Prepend(Of T)(T)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<T>(T)
  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T)
  name.vb: Contains(Of T)(T)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<T>(T)
  nameWithType.vb: Enumerable.Contains(Of T)(T)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<T>(T, System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Contains(Of T)(T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<T>(T, IEqualityComparer<T>)
  nameWithType.vb: Enumerable.Contains(Of T)(T, IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<T>()
  fullname.vb: System.Linq.Enumerable.Count(Of T)()
  name.vb: Count(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<T>()
  nameWithType.vb: Enumerable.Count(Of T)()
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of T)(System.Func(Of T, System.Boolean))
  name.vb: Count(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.Count(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>()
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)()
  name.vb: DefaultIfEmpty(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<T>()
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)()
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>(T)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)(T)
  name.vb: DefaultIfEmpty(Of T)(T)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<T>(T)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)(T)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<T>()
  fullname.vb: System.Linq.Enumerable.Distinct(Of T)()
  name.vb: Distinct(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<T>()
  nameWithType.vb: Enumerable.Distinct(Of T)()
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<T>(System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of T)(System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Distinct(Of T)(IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<T>(IEqualityComparer<T>)
  nameWithType.vb: Enumerable.Distinct(Of T)(IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<T>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of T)(System.Int32)
  name.vb: ElementAt(Of T)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<T>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAt<T>(Int32)
  nameWithType.vb: Enumerable.ElementAt(Of T)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<T>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of T)(System.Int32)
  name.vb: ElementAtOrDefault(Of T)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<T>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<T>(Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of T)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>)
  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Except(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<T>(IEnumerable<T>)
  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<T>()
  fullname.vb: System.Linq.Enumerable.First(Of T)()
  name.vb: First(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<T>()
  nameWithType.vb: Enumerable.First(Of T)()
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.First<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of T)(System.Func(Of T, System.Boolean))
  name.vb: First(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.First(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<T>()
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)()
  name.vb: FirstOrDefault(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<T>()
  nameWithType.vb: Enumerable.FirstOrDefault(Of T)()
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)(System.Func(Of T, System.Boolean))
  name.vb: FirstOrDefault(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))
  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult))
  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Intersect(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>)
  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult))
  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<T>()
  fullname.vb: System.Linq.Enumerable.Last(Of T)()
  name.vb: Last(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<T>()
  nameWithType.vb: Enumerable.Last(Of T)()
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of T)(System.Func(Of T, System.Boolean))
  name.vb: Last(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.Last(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<T>()
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)()
  name.vb: LastOrDefault(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<T>()
  nameWithType.vb: Enumerable.LastOrDefault(Of T)()
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)(System.Func(Of T, System.Boolean))
  name.vb: LastOrDefault(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<T>()
  fullname.vb: System.Linq.Enumerable.LongCount(Of T)()
  name.vb: LongCount(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<T>()
  nameWithType.vb: Enumerable.LongCount(Of T)()
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of T)(System.Func(Of T, System.Boolean))
  name.vb: LongCount(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>()
  fullname.vb: System.Linq.Enumerable.Max(Of T)()
  name.vb: Max(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>()
  nameWithType.vb: Enumerable.Max(Of T)()
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Decimal))
  name.vb: Max(Of T)(Func(Of T, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Decimal>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Double))
  name.vb: Max(Of T)(Func(Of T, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Double>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int32))
  name.vb: Max(Of T)(Func(Of T, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Int32>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int64))
  name.vb: Max(Of T)(Func(Of T, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Int64>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of T)(Func(Of T, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))
  name.vb: Max(Of T)(Func(Of T, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))
  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))
  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))
  name.vb: Max(Of T)(Func(Of T, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Single))
  name.vb: Max(Of T)(Func(Of T, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T>(Func<T, Single>)
  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<T, TResult>(System.Func<T, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of T, TResult)(System.Func(Of T, TResult))
  name.vb: Max(Of T, TResult)(Func(Of T, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<T, TResult>(Func<T, TResult>)
  nameWithType.vb: Enumerable.Max(Of T, TResult)(Func(Of T, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>()
  fullname.vb: System.Linq.Enumerable.Min(Of T)()
  name.vb: Min(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>()
  nameWithType.vb: Enumerable.Min(Of T)()
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Decimal))
  name.vb: Min(Of T)(Func(Of T, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Decimal>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Double))
  name.vb: Min(Of T)(Func(Of T, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Double>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int32))
  name.vb: Min(Of T)(Func(Of T, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Int32>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int64))
  name.vb: Min(Of T)(Func(Of T, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Int64>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of T)(Func(Of T, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))
  name.vb: Min(Of T)(Func(Of T, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))
  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))
  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))
  name.vb: Min(Of T)(Func(Of T, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Single))
  name.vb: Min(Of T)(Func(Of T, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T>(Func<T, Single>)
  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<T, TResult>(System.Func<T, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of T, TResult)(System.Func(Of T, TResult))
  name.vb: Min(Of T, TResult)(Func(Of T, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<T, TResult>(Func<T, TResult>)
  nameWithType.vb: Enumerable.Min(Of T, TResult)(Func(Of T, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<T>()
  fullname.vb: System.Linq.Enumerable.Reverse(Of T)()
  name.vb: Reverse(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Reverse<T>()
  nameWithType.vb: Enumerable.Reverse(Of T)()
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, TResult))
  name.vb: Select(Of T, TResult)(Func(Of T, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<T, TResult>(Func<T, TResult>)
  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, System.Int32, TResult))
  name.vb: Select(Of T, TResult)(Func(Of T, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<T, TResult>(Func<T, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<T, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))
  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))
  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SequenceEqual(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>)
  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<T>()
  fullname.vb: System.Linq.Enumerable.Single(Of T)()
  name.vb: Single(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<T>()
  nameWithType.vb: Enumerable.Single(Of T)()
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of T)(System.Func(Of T, System.Boolean))
  name.vb: Single(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.Single(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<T>()
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)()
  name.vb: SingleOrDefault(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<T>()
  nameWithType.vb: Enumerable.SingleOrDefault(Of T)()
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)(System.Func(Of T, System.Boolean))
  name.vb: SingleOrDefault(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<T>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of T)(System.Int32)
  name.vb: Skip(Of T)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<T>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Skip<T>(Int32)
  nameWithType.vb: Enumerable.Skip(Of T)(Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Boolean))
  name.vb: SkipWhile(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of T)(Func(Of T, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<T>(Func<T, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Decimal))
  name.vb: Sum(Of T)(Func(Of T, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Double))
  name.vb: Sum(Of T)(Func(Of T, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Double>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int32))
  name.vb: Sum(Of T)(Func(Of T, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Int32>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int64))
  name.vb: Sum(Of T)(Func(Of T, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Int64>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))
  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))
  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Single))
  name.vb: Sum(Of T)(Func(Of T, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<T>(Func<T, Single>)
  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<T>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of T)(System.Int32)
  name.vb: Take(Of T)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<T>
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Take<T>(Int32)
  nameWithType.vb: Enumerable.Take(Of T)(Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Boolean))
  name.vb: TakeWhile(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of T)(Func(Of T, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<T>(Func<T, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<T>()
  fullname.vb: System.Linq.Enumerable.ToArray(Of T)()
  name.vb: ToArray(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToArray<T>()
  nameWithType.vb: Enumerable.ToArray(Of T)()
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))
  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<T>()
  fullname.vb: System.Linq.Enumerable.ToList(Of T)()
  name.vb: ToList(Of T)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<T>
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of T)
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToList<T>()
  nameWithType.vb: Enumerable.ToList(Of T)()
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<T, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))
  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>)
  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Union(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<T>(IEnumerable<T>)
  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<T>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Boolean))
  name.vb: Where(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<T>(Func<T, Boolean>)
  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Int32, System.Boolean))
  name.vb: Where(Of T)(Func(Of T, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<T>
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of T)
  - name: "XXX"
    fullName: (
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<T>(Func<T, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<T, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of T, TSecond, TResult))
  name.vb: Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.Generic.ICollection`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: "XXX"
    fullName: System.Collections.Generic.ICollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection`1
- uid: System.Collections.Generic.IReadOnlyCollection`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: "XXX"
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable`1
- uid: System.Collections.Generic.ISet`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ISet<T>
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: "XXX"
    fullName: System.Collections.Generic.ISet
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: "XXX"
    fullName: System.Collections.Generic.ISet
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ISet<T>
  nameWithType.vb: ISet(Of T)
  commentId: T:System.Collections.Generic.ISet`1
- uid: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable(IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Queryable
  nameWithType: Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable<TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Queryable.AsQueryable(Of TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq.Enumerable
  nameWithType: Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TAccumulate
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TAccumulate
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.All(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Concat(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Append(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Prepend(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: "XXX"
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAt(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TOuter
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TInner
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: "XXX"
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.IEnumerable
    name: "XXX"
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Reverse(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TCollection
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TCollection
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Skip(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: "<"
    fullName: <
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Nullable`1
    name: "XXX"
    fullName: System.Nullable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: "XXX"
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: "XXX"
    fullName: System.Linq.Enumerable.Take(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToArray(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToList(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: "XXX"
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TElement
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TKey
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: "XXX"
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`2
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: "XXX"
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSource
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  isExternal: true
  name: "XXX"
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: "XXX"
    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)
  - name: "XXX"
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TSecond
  - name: "XXX"
    fullName: )
  - name: 'XXX '
    fullName: ', '
  - uid: System.Func`3
    name: "XXX"
    fullName: System.Func
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: TFirst
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TSecond
  - name: 'XXX '
    fullName: ', '
  - name: "XXX"
    fullName: TResult
  - name: "XXX"
    fullName: )
  - name: "XXX"
    fullName: )
  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System.Linq
  isExternal: false
  name: "XXX"
  fullName: System.Linq
  nameWithType: System.Linq
  commentId: N:System.Linq
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: "XXX"
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
- uid: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: "XXX"
    fullName: System.Collections.Generic.IEqualityComparer
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  commentId: T:System.Collections.Generic.IEqualityComparer`1
- uid: System.Collections.Generic.ICollection{{T}}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
  nameWithType: ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
  nameWithType: IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
  nameWithType: ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
  nameWithType: IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
- uid: '{T}'
  definition: T
  name: "XXX"
  fullName: T
  nameWithType: T
  commentId: '!:T'
- uid: T
  isExternal: false
  name: "XXX"
  fullName: T
  nameWithType: T
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
- uid: System.Collections.Generic.ICollection`1.Clear
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Clear
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  commentId: M:System.Collections.Generic.ICollection`1.Clear
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Contains
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Contains
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Contains
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Contains
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
- uid: '{T}[]'
  name: "XXX"
  fullName: T[]
  fullname.vb: T()
  name.vb: T()
  spec.csharp:
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  nameWithType: T[]
  nameWithType.vb: T()
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.HashSet`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.HashSet.Enumerator<>
  fullname.vb: System.Collections.Generic.HashSet.Enumerator(Of )
  name.vb: HashSet.Enumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Enumerator
    name: "XXX"
    fullName: System.Collections.Generic.HashSet.Enumerator
  - name: "<"
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Enumerator
    name: "XXX"
    fullName: System.Collections.Generic.HashSet.Enumerator
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: )
  nameWithType: HashSet.Enumerator<>
  nameWithType.vb: HashSet.Enumerator(Of )
  commentId: T:System.Collections.Generic.HashSet`1.Enumerator
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Remove
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
- uid: System.Predicate{{T}}
  parent: System
  definition: System.Predicate`1
  name: "XXX"
  fullName: System.Predicate<T>
  fullname.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Predicate<T>
  nameWithType.vb: Predicate(Of T)
  commentId: T:System.Predicate{``0}
- uid: System.Predicate`1
  isExternal: false
  name: "XXX"
  fullName: System.Predicate<T>
  fullname.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: "XXX"
    fullName: System.Predicate
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: Predicate<T>
  nameWithType.vb: Predicate(Of T)
  commentId: T:System.Predicate`1
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Add
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Add
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection<T>.Add
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: "XXX"
    fullName: System.Collections.Generic.ICollection(Of T).Add
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator{`0}
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: "XXX"
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: "<"
    fullName: <
  - name: "XXX"
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: "XXX"
    fullName: System.Collections.Generic.IEnumerator
  - name: 'XXX '
    fullName: '(Of '
  - name: "XXX"
    fullName: T
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator`1
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: "XXX"
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: IEnumerable.GetEnumerator()
  commentId: M:System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: "XXX"
  fullName: System.Collections.IEnumerator
  nameWithType: IEnumerator
  commentId: T:System.Collections.IEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
