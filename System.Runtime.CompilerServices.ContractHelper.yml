items:
- uid: System.Runtime.CompilerServices.ContractHelper
  commentId: T:System.Runtime.CompilerServices.ContractHelper
  id: ContractHelper
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  - System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.ContractHelper
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ContractHelper
    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs
    startLine: 270
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Provides methods that the binary rewriter uses to handle contract failures.</p>\n"
  syntax:
    content: public class ContractHelper
    content.vb: Public Class ContractHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: ContractHelper
- uid: System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  commentId: M:System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  id: RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  parent: System.Runtime.CompilerServices.ContractHelper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RaiseContractFailedEvent
    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
    startLine: 968
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Used by the binary rewriter to activate the default failure behavior.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1030:UseEventsWhereAppropriate")]

      [DebuggerNonUserCode]

      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)]

      public static string RaiseContractFailedEvent(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1030:UseEventsWhereAppropriate")>

      <DebuggerNonUserCode>

      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)>

      Public Shared Function RaiseContractFailedEvent(failureKind As ContractFailureKind, userMessage As String, conditionText As String, innerException As Exception) As String
    parameters:
    - id: failureKind
      type: System.Diagnostics.Contracts.ContractFailureKind
      description: "\n<p>One of the enumeration values that specifies the type of failure.</p>\n"
    - id: userMessage
      type: System.String
      description: "\n<p>Additional user information.</p>\n"
    - id: conditionText
      type: System.String
      description: "\n<p>The description of the condition that caused the failure.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The inner exception that caused the current exception.</p>\n"
    return:
      type: System.String
      description: "\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) if the event was handled and should not trigger a failure; otherwise, returns the localized failure message.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>failureKind</em> is not a valid <xref href=\"System.Diagnostics.Contracts.ContractFailureKind\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: ContractHelper.RaiseContractFailedEvent(ContractFailureKind, String, String, Exception)
- uid: System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)
  commentId: M:System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)
  id: TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)
  parent: System.Runtime.CompilerServices.ContractHelper
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TriggerFailure
    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
    startLine: 984
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Triggers the default failure behavior.</p>\n"
  syntax:
    content: >-
      [DebuggerNonUserCode]

      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]

      public static void TriggerFailure(ContractFailureKind kind, string displayMessage, string userMessage, string conditionText, Exception innerException)
    content.vb: >-
      <DebuggerNonUserCode>

      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)>

      Public Shared Sub TriggerFailure(kind As ContractFailureKind, displayMessage As String, userMessage As String, conditionText As String, innerException As Exception)
    parameters:
    - id: kind
      type: System.Diagnostics.Contracts.ContractFailureKind
      description: "\n<p>One of the enumeration values that specifies the type of failure.</p>\n"
    - id: displayMessage
      type: System.String
      description: "\n<p>The message to display.</p>\n"
    - id: userMessage
      type: System.String
      description: "\n<p>Additional user information.</p>\n"
    - id: conditionText
      type: System.String
      description: "\n<p>The description of the condition that caused the failure.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The inner exception that caused the current exception.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: ContractHelper.TriggerFailure(ContractFailureKind, String, String, String, Exception)
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: "XXX"
  fullName: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Diagnostics.Contracts.ContractFailureKind
  parent: System.Diagnostics.Contracts
  isExternal: false
  name: "XXX"
  fullName: System.Diagnostics.Contracts.ContractFailureKind
  nameWithType: ContractFailureKind
  commentId: T:System.Diagnostics.Contracts.ContractFailureKind
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: System.Diagnostics.Contracts
  isExternal: false
  name: "XXX"
  fullName: System.Diagnostics.Contracts
  nameWithType: System.Diagnostics.Contracts
  commentId: N:System.Diagnostics.Contracts
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
