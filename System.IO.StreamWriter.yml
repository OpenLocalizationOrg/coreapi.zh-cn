items:
- uid: System.IO.StreamWriter
  commentId: T:System.IO.StreamWriter
  id: StreamWriter
  parent: System.IO
  children:
  - System.IO.StreamWriter.#ctor(System.IO.Stream)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  - System.IO.StreamWriter.AutoFlush
  - System.IO.StreamWriter.BaseStream
  - System.IO.StreamWriter.Dispose(System.Boolean)
  - System.IO.StreamWriter.Encoding
  - System.IO.StreamWriter.Flush
  - System.IO.StreamWriter.FlushAsync
  - System.IO.StreamWriter.Null
  - System.IO.StreamWriter.Write(System.Char)
  - System.IO.StreamWriter.Write(System.Char[])
  - System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.StreamWriter.Write(System.String)
  - System.IO.StreamWriter.WriteAsync(System.Char)
  - System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.StreamWriter.WriteAsync(System.String)
  - System.IO.StreamWriter.WriteLineAsync
  - System.IO.StreamWriter.WriteLineAsync(System.Char)
  - System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.StreamWriter.WriteLineAsync(System.String)
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StreamWriter
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 33
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Implements a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> for writing characters to a stream in a particular encoding.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public class StreamWriter : TextWriter, IDisposable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Class StreamWriter
          Inherits TextWriter
          Implements IDisposable
  seealso:
  - type: System.IO.Stream
    commentId: T:System.IO.Stream
  - type: System.IO.StreamReader
    commentId: T:System.IO.StreamReader
  - type: System.Text.Encoder
    commentId: T:System.Text.Encoder
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  inheritance:
  - System.Object
  - System.IO.TextWriter
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.TextWriter.CoreNewLine
  - System.IO.TextWriter.FormatProvider
  - System.IO.TextWriter.NewLine
  - System.IO.TextWriter.Dispose
  - System.IO.TextWriter.Write(System.Boolean)
  - System.IO.TextWriter.Write(System.Decimal)
  - System.IO.TextWriter.Write(System.Double)
  - System.IO.TextWriter.Write(System.Int32)
  - System.IO.TextWriter.Write(System.Int64)
  - System.IO.TextWriter.Write(System.Object)
  - System.IO.TextWriter.Write(System.Single)
  - System.IO.TextWriter.Write(System.String,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object[])
  - System.IO.TextWriter.Write(System.UInt32)
  - System.IO.TextWriter.Write(System.UInt64)
  - System.IO.TextWriter.WriteAsync(System.Char[])
  - System.IO.TextWriter.WriteLine
  - System.IO.TextWriter.WriteLine(System.Boolean)
  - System.IO.TextWriter.WriteLine(System.Char)
  - System.IO.TextWriter.WriteLine(System.Char[])
  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLine(System.Decimal)
  - System.IO.TextWriter.WriteLine(System.Double)
  - System.IO.TextWriter.WriteLine(System.Int32)
  - System.IO.TextWriter.WriteLine(System.Int64)
  - System.IO.TextWriter.WriteLine(System.Object)
  - System.IO.TextWriter.WriteLine(System.Single)
  - System.IO.TextWriter.WriteLine(System.String)
  - System.IO.TextWriter.WriteLine(System.String,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object[])
  - System.IO.TextWriter.WriteLine(System.UInt32)
  - System.IO.TextWriter.WriteLine(System.UInt64)
  - System.IO.TextWriter.WriteLineAsync(System.Char[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: StreamWriter
- uid: System.IO.StreamWriter.Null
  commentId: F:System.IO.StreamWriter.Null
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  fullName: System.IO.StreamWriter.Null
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 50
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Provides a <strong>StreamWriter</strong> with no backing store that can be written to, but not read from.</p>\n"
  syntax:
    content: public static readonly StreamWriter Null
    content.vb: Public Shared ReadOnly Null As StreamWriter
    return:
      type: System.IO.StreamWriter
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: StreamWriter.Null
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 115
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size.</p>\n"
  syntax:
    content: public StreamWriter(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to write to. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>stream</em> is not writable. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamWriter.StreamWriter(Stream)
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 119
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> class for the specified stream by using the specified encoding and the default buffer size.</p>\n"
  syntax:
    content: public StreamWriter(Stream stream, Encoding encoding)
    content.vb: Public Sub New(stream As Stream, encoding As Encoding)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to write to. </p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The character encoding to use. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>stream</em> is not writable. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 127
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> class for the specified stream by using the specified encoding and buffer size.</p>\n"
  syntax:
    content: public StreamWriter(Stream stream, Encoding encoding, int bufferSize)
    content.vb: Public Sub New(stream As Stream, encoding As Encoding, bufferSize As Integer)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to write to. </p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The character encoding to use. </p>\n"
    - id: bufferSize
      type: System.Int32
      description: "\n<p>The buffer size, in bytes. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>bufferSize</em> is negative. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>stream</em> is not writable. </p>\n"
  seealso:
  - type: System.Text.Encoding
    commentId: T:System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 131
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</p>\n"
  syntax:
    content: public StreamWriter(Stream stream, Encoding encoding, int bufferSize, bool leaveOpen)
    content.vb: Public Sub New(stream As Stream, encoding As Encoding, bufferSize As Integer, leaveOpen As Boolean)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to write to.</p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The character encoding to use.</p>\n"
    - id: bufferSize
      type: System.Int32
      description: "\n<p>The buffer size, in bytes.</p>\n"
    - id: leaveOpen
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to leave the stream open after the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> object is disposed; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>bufferSize</em> is negative. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>stream</em> is not writable. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)
- uid: System.IO.StreamWriter.AutoFlush
  commentId: P:System.IO.StreamWriter.AutoFlush
  id: AutoFlush
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.AutoFlush
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoFlush
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 303
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets or sets a value indicating whether the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> will flush its buffer to the underlying stream after every call to <xref href=\"System.IO.StreamWriter.Write(System.Char)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual bool AutoFlush { get; set; }
    content.vb: Public Overridable Property AutoFlush As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to force <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> to flush its buffer; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: StreamWriter.AutoFlush
- uid: System.IO.StreamWriter.BaseStream
  commentId: P:System.IO.StreamWriter.BaseStream
  id: BaseStream
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.BaseStream
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BaseStream
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 315
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets the underlying stream that interfaces with a backing store.</p>\n"
  syntax:
    content: public virtual Stream BaseStream { get; }
    content.vb: Public Overridable ReadOnly Property BaseStream As Stream
    parameters: []
    return:
      type: System.IO.Stream
      description: "\n<p>The stream this <strong>StreamWriter</strong> is writing to.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: StreamWriter.BaseStream
- uid: System.IO.StreamWriter.Encoding
  commentId: P:System.IO.StreamWriter.Encoding
  id: Encoding
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Encoding
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Encoding
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 327
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Gets the <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> in which the output is written.</p>\n"
  syntax:
    content: public override Encoding Encoding { get; }
    content.vb: Public Overrides ReadOnly Property Encoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\n<p>The <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> specified in the constructor for the current instance, or <xref href=\"System.Text.UTF8Encoding\" data-throw-if-not-resolved=\"false\"></xref> if an encoding was not specified.</p>\n"
  overridden: System.IO.TextWriter.Encoding
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: StreamWriter.Encoding
- uid: System.IO.StreamWriter.Dispose(System.Boolean)
  commentId: M:System.IO.StreamWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 215
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  overridden: System.IO.TextWriter.Dispose(System.Boolean)
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>The current encoding does not support displaying half of a Unicode surrogate pair.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: StreamWriter.Dispose(Boolean)
- uid: System.IO.StreamWriter.Flush
  commentId: M:System.IO.StreamWriter.Flush
  id: Flush
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Flush()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Flush
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 265
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</p>\n"
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.TextWriter.Flush
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current writer is closed. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error has occurred. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>The current encoding does not support displaying half of a Unicode surrogate pair. </p>\n"
  seealso:
  - type: System.IO.Stream.Close
    commentId: M:System.IO.Stream.Close
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.Flush()
- uid: System.IO.StreamWriter.FlushAsync
  commentId: M:System.IO.StreamWriter.FlushAsync
  id: FlushAsync
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.FlushAsync()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FlushAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 753
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task FlushAsync()
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function FlushAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous flush operation.</p>\n"
  overridden: System.IO.TextWriter.FlushAsync
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream has been disposed.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.FlushAsync()
- uid: System.IO.StreamWriter.Write(System.Char)
  commentId: M:System.IO.StreamWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Write(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 331
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the stream.</p>\n"
  syntax:
    content: public override void Write(char value)
    content.vb: Public Overrides Sub Write(value As Char)
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the stream. </p>\n"
  overridden: System.IO.TextWriter.Write(System.Char)
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and current writer is closed. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> is at the end the stream. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.Write(Char)
- uid: System.IO.StreamWriter.Write(System.Char[])
  commentId: M:System.IO.StreamWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Write(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 341
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character array to the stream.</p>\n"
  syntax:
    content: public override void Write(char[] buffer)
    content.vb: Public Overrides Sub Write(buffer As Char())
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>A character array containing the data to write. If <em>buffer</em> is <strong>null</strong>, nothing is written. </p>\n"
  overridden: System.IO.TextWriter.Write(System.Char[])
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and current writer is closed. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> is at the end the stream. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StreamWriter.Write(System.Char())
  name.vb: Write(Char())
  nameWithType: StreamWriter.Write(Char[])
  nameWithType.vb: StreamWriter.Write(Char())
- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 365
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the stream.</p>\n"
  syntax:
    content: public override void Write(char[] buffer, int index, int count)
    content.vb: Public Overrides Sub Write(buffer As Char(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>A character array that contains the data to write. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to start reading data. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write. </p>\n"
  overridden: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and current writer is closed. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> is at the end the stream. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StreamWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  nameWithType: StreamWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: StreamWriter.Write(Char(), Int32, Int32)
- uid: System.IO.StreamWriter.Write(System.String)
  commentId: M:System.IO.StreamWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Write
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 391
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the stream.</p>\n"
  syntax:
    content: public override void Write(string value)
    content.vb: Public Overrides Sub Write(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write to the stream. If <em>value</em> is null, nothing is written. </p>\n"
  overridden: System.IO.TextWriter.Write(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and current writer is closed. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<xref href=\"System.IO.StreamWriter.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> is true or the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> is at the end the stream. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurs. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.Write(String)
- uid: System.IO.StreamWriter.WriteAsync(System.Char)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char)
  id: WriteAsync(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 415
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character to the stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.Char)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.WriteAsync(Char)
- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  id: WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 563
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters to the stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>A character array that contains the data to write.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to begin reading data.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StreamWriter.WriteAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteAsync(Char(), Int32, Int32)
  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)
  nameWithType.vb: StreamWriter.WriteAsync(Char(), Int32, Int32)
- uid: System.IO.StreamWriter.WriteAsync(System.String)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 477
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string to the stream asynchronously.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write to the stream. If <em>value</em> is <strong>null</strong>, nothing is written.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteAsync(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.WriteAsync(String)
- uid: System.IO.StreamWriter.WriteLineAsync
  commentId: M:System.IO.StreamWriter.WriteLineAsync
  id: WriteLineAsync
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteLineAsync()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 651
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a line terminator asynchronously to the stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync()
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.WriteLineAsync()
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char)
  id: WriteLineAsync(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteLineAsync(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 674
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a character followed by a line terminator asynchronously to the stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(char value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(value As Char) As Task
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The character to write to the stream.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.Char)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.WriteLineAsync(Char)
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 720
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a subarray of characters followed by a line terminator asynchronously to the stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(char[] buffer, int index, int count)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(buffer As Char(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\n<p>The character array to write data from.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The character position in the buffer at which to start reading data.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of characters to write.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is negative.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.StreamWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLineAsync(Char(), Int32, Int32)
  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)
  nameWithType.vb: StreamWriter.WriteLineAsync(Char(), Int32, Int32)
- uid: System.IO.StreamWriter.WriteLineAsync(System.String)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.String)
  id: WriteLineAsync(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  - vb
  name: "XXX"
  fullName: System.IO.StreamWriter.WriteLineAsync(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/StreamWriter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WriteLineAsync
    path: src/mscorlib/src/System/IO/StreamWriter.cs
    startLine: 697
  assemblies:
  - System.IO
  namespace: System.IO
  summary: "\n<p>Writes a string followed by a line terminator asynchronously to the stream.</p>\n"
  syntax:
    content: >-
      [HostProtection(ExternalThreading = true)]

      [ComVisible(false)]

      public override Task WriteLineAsync(string value)
    content.vb: >-
      <HostProtection(ExternalThreading:=True)>

      <ComVisible(False)>

      Public Overrides Function WriteLineAsync(value As String) As Task
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to write. If the value is <strong>null</strong>, only a line terminator is written. </p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that represents the asynchronous write operation.</p>\n"
  overridden: System.IO.TextWriter.WriteLineAsync(System.String)
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The stream writer is disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The stream writer is currently in use by a previous write operation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StreamWriter.WriteLineAsync(String)
references:
- uid: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter
  nameWithType: TextWriter
  commentId: T:System.IO.TextWriter
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.IO.TextWriter.CoreNewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.CoreNewLine
  nameWithType: TextWriter.CoreNewLine
  commentId: F:System.IO.TextWriter.CoreNewLine
- uid: System.IO.TextWriter.FormatProvider
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.FormatProvider
  nameWithType: TextWriter.FormatProvider
  commentId: P:System.IO.TextWriter.FormatProvider
- uid: System.IO.TextWriter.NewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.NewLine
  nameWithType: TextWriter.NewLine
  commentId: P:System.IO.TextWriter.NewLine
- uid: System.IO.TextWriter.Dispose
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose()
  spec.csharp:
  - uid: System.IO.TextWriter.Dispose
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Dispose
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Dispose()
  commentId: M:System.IO.TextWriter.Dispose
- uid: System.IO.TextWriter.Write(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Boolean)
  commentId: M:System.IO.TextWriter.Write(System.Boolean)
- uid: System.IO.TextWriter.Write(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Decimal)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Decimal)
  commentId: M:System.IO.TextWriter.Write(System.Decimal)
- uid: System.IO.TextWriter.Write(System.Double)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Double)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Double)
  commentId: M:System.IO.TextWriter.Write(System.Double)
- uid: System.IO.TextWriter.Write(System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Int32)
  commentId: M:System.IO.TextWriter.Write(System.Int32)
- uid: System.IO.TextWriter.Write(System.Int64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Int64)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Int64)
  commentId: M:System.IO.TextWriter.Write(System.Int64)
- uid: System.IO.TextWriter.Write(System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Object)
  commentId: M:System.IO.TextWriter.Write(System.Object)
- uid: System.IO.TextWriter.Write(System.Single)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Single)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Single)
  commentId: M:System.IO.TextWriter.Write(System.Single)
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object, Object, Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String, System.Object[])
  fullname.vb: System.IO.TextWriter.Write(System.String, System.Object())
  name.vb: Write(String, Object())
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String, Object[])
  nameWithType.vb: TextWriter.Write(String, Object())
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])
- uid: System.IO.TextWriter.Write(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(UInt32)
  commentId: M:System.IO.TextWriter.Write(System.UInt32)
- uid: System.IO.TextWriter.Write(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.UInt64)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(UInt64)
  commentId: M:System.IO.TextWriter.Write(System.UInt64)
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char())
  name.vb: WriteAsync(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char[])
  nameWithType.vb: TextWriter.WriteAsync(Char())
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])
- uid: System.IO.TextWriter.WriteLine
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine()
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine()
  commentId: M:System.IO.TextWriter.WriteLine
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Boolean)
  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)
- uid: System.IO.TextWriter.WriteLine(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char)
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteLine(System.Char())
  name.vb: WriteLine(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char[])
  nameWithType.vb: TextWriter.WriteLine(Char())
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteLine(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLine(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLine(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Decimal)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Decimal)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Decimal
    name: "XXX"
    fullName: System.Decimal
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Decimal)
  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)
- uid: System.IO.TextWriter.WriteLine(System.Double)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Double)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Double)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Double
    name: "XXX"
    fullName: System.Double
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Double)
  commentId: M:System.IO.TextWriter.WriteLine(System.Double)
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Int64)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Int64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Int64
    name: "XXX"
    fullName: System.Int64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Int64)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)
- uid: System.IO.TextWriter.WriteLine(System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.Object)
- uid: System.IO.TextWriter.WriteLine(System.Single)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.Single)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.Single)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.Single
    name: "XXX"
    fullName: System.Single
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(Single)
  commentId: M:System.IO.TextWriter.WriteLine(System.Single)
- uid: System.IO.TextWriter.WriteLine(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String)
  commentId: M:System.IO.TextWriter.WriteLine(System.String)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object[])
  fullname.vb: System.IO.TextWriter.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(String, Object[])
  nameWithType.vb: TextWriter.WriteLine(String, Object())
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.UInt32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt32
    name: "XXX"
    fullName: System.UInt32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(UInt32)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLine(System.UInt64)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLine(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLine(System.UInt64)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLine
  - name: "XXX"
    fullName: (
  - uid: System.UInt64
    name: "XXX"
    fullName: System.UInt64
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLine(UInt64)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[])
  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char())
  name.vb: WriteLineAsync(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char[])
  nameWithType.vb: TextWriter.WriteLineAsync(Char())
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: "XXX"
    fullName: System.Object.ToString
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.Equals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: "XXX"
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: "XXX"
    fullName: (
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Object
    name: "XXX"
    fullName: System.Object
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: "XXX"
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: "XXX"
    fullName: System.Object.GetType
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: "XXX"
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: "XXX"
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: "XXX"
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.StreamWriter
  nameWithType: StreamWriter
  commentId: T:System.IO.StreamWriter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text.Encoding
  nameWithType: Encoding
  commentId: T:System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: "XXX"
  fullName: System.Text
  nameWithType: System.Text
  commentId: N:System.Text
- uid: System.Int32
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IO.TextWriter.Encoding
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Encoding
  nameWithType: TextWriter.Encoding
  commentId: P:System.IO.TextWriter.Encoding
- uid: System.IO.TextWriter.Dispose(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextWriter.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Dispose(System.Boolean)
    name: "XXX"
    fullName: System.IO.TextWriter.Dispose
  - name: "XXX"
    fullName: (
  - uid: System.Boolean
    name: "XXX"
    fullName: System.Boolean
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Dispose(Boolean)
  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)
- uid: System.IO.TextWriter.Flush
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.Flush()
  spec.csharp:
  - uid: System.IO.TextWriter.Flush
    name: "XXX"
    fullName: System.IO.TextWriter.Flush
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Flush
    name: "XXX"
    fullName: System.IO.TextWriter.Flush
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Flush()
  commentId: M:System.IO.TextWriter.Flush
- uid: System.IO.TextWriter.FlushAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.FlushAsync()
  spec.csharp:
  - uid: System.IO.TextWriter.FlushAsync
    name: "XXX"
    fullName: System.IO.TextWriter.FlushAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.FlushAsync
    name: "XXX"
    fullName: System.IO.TextWriter.FlushAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.FlushAsync()
  commentId: M:System.IO.TextWriter.FlushAsync
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: "XXX"
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.IO.TextWriter.Write(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char)
  commentId: M:System.IO.TextWriter.Write(System.Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.Char
  nameWithType: Char
  commentId: T:System.Char
- uid: System.IO.TextWriter.Write(System.Char[])
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[])
  fullname.vb: System.IO.TextWriter.Write(System.Char())
  name.vb: Write(Char())
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char[])
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char[])
  nameWithType.vb: TextWriter.Write(Char())
  commentId: M:System.IO.TextWriter.Write(System.Char[])
- uid: System.Char[]
  name: "XXX"
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  nameWithType: Char[]
  nameWithType.vb: Char()
- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.Write(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.Write(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.Write(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.Write(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.Write(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.Write
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.Write(String)
  commentId: M:System.IO.TextWriter.Write(System.String)
- uid: System.String
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IO.TextWriter.WriteAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)
- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteAsync(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteAsync(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteAsync(String)
  commentId: M:System.IO.TextWriter.WriteAsync(System.String)
- uid: System.IO.TextWriter.WriteLineAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync()
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync()
  commentId: M:System.IO.TextWriter.WriteLineAsync
- uid: System.IO.TextWriter.WriteLineAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)
  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLineAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: 'XXX'
    fullName: '[]'
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.Char
    name: "XXX"
    fullName: System.Char
    isExternal: true
  - name: "XXX"
    fullName: ()
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: 'XXX '
    fullName: ', '
  - uid: System.Int32
    name: "XXX"
    fullName: System.Int32
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  nameWithType.vb: TextWriter.WriteLineAsync(Char(), Int32, Int32)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
- uid: System.IO.TextWriter.WriteLineAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: true
  name: "XXX"
  fullName: System.IO.TextWriter.WriteLineAsync(System.String)
  spec.csharp:
  - uid: System.IO.TextWriter.WriteLineAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  spec.vb:
  - uid: System.IO.TextWriter.WriteLineAsync(System.String)
    name: "XXX"
    fullName: System.IO.TextWriter.WriteLineAsync
  - name: "XXX"
    fullName: (
  - uid: System.String
    name: "XXX"
    fullName: System.String
    isExternal: true
  - name: "XXX"
    fullName: )
  nameWithType: TextWriter.WriteLineAsync(String)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: "XXX"
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Text.EncoderFallbackException
  isExternal: false
  name: "XXX"
  fullName: System.Text.EncoderFallbackException
  nameWithType: EncoderFallbackException
  commentId: T:System.Text.EncoderFallbackException
- uid: System.ObjectDisposedException
  isExternal: false
  name: "XXX"
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: "XXX"
  fullName: System.IO.IOException
  nameWithType: IOException
  commentId: T:System.IO.IOException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: "XXX"
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
