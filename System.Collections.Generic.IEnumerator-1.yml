items:
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  id: IEnumerator`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IEnumerator`1.Current
  langs:
  - csharp
  - vb
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEnumerator
    path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "$x$x$Xxxxxxxx x xxxxxx xxxxxxxxx xxxx x xxxxxxx xxxxxxxxxx.$$x$$x"
  syntax:
    content: 'public interface IEnumerator<out T> : IDisposable, IEnumerator'
    content.vb: >-
      Public Interface IEnumerator(Of Out T)
          Inherits IDisposable, IEnumerator
    typeParameters:
    - id: T
      description: "$x$x$Xxx xxxx xx xxxxxxx xx xxxxxxxxx.$$x$$x"
  seealso:
  - type: System.Collections.Generic.IEnumerable`1
    commentId: T:System.Collections.Generic.IEnumerable`1
  - type: System.Collections.Generic.ICollection`1
    commentId: T:System.Collections.Generic.ICollection`1
  - type: System.Collections
    commentId: N:System.Collections
  inheritedMembers:
  - System.Collections.IEnumerator.MoveNext
  - System.Collections.IEnumerator.Reset
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  id: Current
  parent: System.Collections.Generic.IEnumerator`1
  langs:
  - csharp
  - vb
  name: Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Current
    path: src/mscorlib/src/System/Collections/Generic/IEnumerator.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "$x$x$Xxxx xxx xxxxxxx xx xxx xxxxxxxxxx xx xxx xxxxxxx xxxxxxxx xx xxx xxxxxxxxxx.$$x$$x"
  syntax:
    content: T Current { get; }
    content.vb: ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
      description: "$x$x$Xxx xxxxxxx xx xxx xxxxxxxxxx xx xxx xxxxxxx xxxxxxxx xx xxx xxxxxxxxxx.$$x$$x"
  seealso:
  - type: System.Collections.IEnumerator.Current
    commentId: P:System.Collections.IEnumerator.Current
  - type: System.Collections.IEnumerator.MoveNext
    commentId: M:System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
  nameWithType: IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  name: MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerator.MoveNext()
  commentId: M:System.Collections.IEnumerator.MoveNext
- uid: System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerator.Reset()
  commentId: M:System.Collections.IEnumerator.Reset
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  nameWithType: IEnumerator
  commentId: T:System.Collections.IEnumerator
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  nameWithType: T
  commentId: '!:T'
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
